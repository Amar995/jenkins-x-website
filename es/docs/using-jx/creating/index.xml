<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes – Agregar repositorios a Jenkins X</title>
    <link>https://jenkins-x.io/es/docs/using-jx/creating/</link>
    <description>Recent content in Agregar repositorios a Jenkins X on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    
	  <atom:link href="https://jenkins-x.io/es/docs/using-jx/creating/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Crear Camel</title>
      <link>https://jenkins-x.io/es/docs/using-jx/creating/create-camel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/using-jx/creating/create-camel/</guid>
      <description>
        
        
        &lt;p&gt;Si desea crear un nuevo microservicio Spring Boot usando &lt;a href=&#34;http://camel.apache.org/&#34;&gt;Apache Camel&lt;/a&gt;, puede utilizar el comando &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx create camel&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create camel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego se le solicita el nombre del proyecto.&lt;/p&gt;
&lt;p&gt;Si lo desea, puede especificar esto en la línea de comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create camel -a myapp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;qué-sucede-cuando-creas-un-microservicio-de-camel&#34;&gt;¿Qué sucede cuando creas un microservicio de Camel?&lt;/h3&gt;
&lt;p&gt;Una vez que haya elegido el proyecto a crear y le haya dado un nombre, los siguientes pasos se automatizarán para usted:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;crea un nuevo microservicio Camel en un subdirectorio&lt;/li&gt;
&lt;li&gt;adiciona su código fuente a un repositorio Git&lt;/li&gt;
&lt;li&gt;crea un repositorio Git remoto en un servidor Git como por ejemplo &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;empuja el código local al repositorio remoto Git&lt;/li&gt;
&lt;li&gt;adiciona los siguientes ficheros:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para construir su aplicación en una imagen Docker&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; para implementar el pipeline CI/CD&lt;/li&gt;
&lt;li&gt;chart Helm para ejecutar la aplicación dentro de Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;registra un enlace en el repositorio remoto Git y sus equipos en Jenkins&lt;/li&gt;
&lt;li&gt;adiciona el repositorio Git a sus equipos en Jenkins&lt;/li&gt;
&lt;li&gt;desencadena el primer pipeline&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Crear MLquickstart</title>
      <link>https://jenkins-x.io/es/docs/using-jx/creating/create-mlquickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/using-jx/creating/create-mlquickstart/</guid>
      <description>
        
        
        &lt;p&gt;El inicio rápido de aprendizaje automático (Machine learning quickstarts) son aplicaciones pre-configuradas de aprendizaje automático que puedes utilizar para iniciar tus propios proyectos.&lt;/p&gt;
&lt;p&gt;Puede crear nuevas aplicaciones desde nuestra lista de inicio rápido de aprendizaje automático a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_mlquickstart/&#34;&gt;jx create mlquickstart&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create mlquickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego se le solicita que elija de un listado de aplicaciones posibles.&lt;/p&gt;
&lt;p&gt;Verá que estos vienen en grupos de tres:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;? &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; the quickstart you wish to create  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Use arrows to move, space to &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;, type to filter&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&amp;gt; machine-learning-quickstarts/ML-python-pytorch-cpu
  machine-learning-quickstarts/ML-python-pytorch-cpu-service
  machine-learning-quickstarts/ML-python-pytorch-cpu-training
  machine-learning-quickstarts/ML-python-pytorch-mlpc-cpu
  machine-learning-quickstarts/ML-python-pytorch-mlpc-cpu-service
  machine-learning-quickstarts/ML-python-pytorch-mlpc-cpu-training
  machine-learning-quickstarts/ML-python-pytorch-mlpc-gpu
  machine-learning-quickstarts/ML-python-pytorch-mlpc-gpu-service
  machine-learning-quickstarts/ML-python-pytorch-mlpc-gpu-training
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cada inicio rápido de aprendizaje automático consta de dos proyectos, un proyecto de entrenamiento que administra el script de capacitación para su modelo y un proyecto de servicio que le permite abarcar sus instancias de modelo entrenadas con API de servicio listas para integrarse en su aplicación.&lt;/p&gt;
&lt;p&gt;Si desea crear solo el proyecto &lt;code&gt;-service&lt;/code&gt; o &lt;code&gt;-training&lt;/code&gt;, puede hacerlo seleccionando la opción con el sufijo de nombre correspondiente.&lt;/p&gt;
&lt;p&gt;Sin embargo, la mayoría de las veces, lo que desea hacer es seleccionar &lt;em&gt;el conjunto de proyectos&lt;/em&gt;, que es la primera opción con el mismo nombre de prefijo y sin sufijo. Eso creará un par de proyectos coincidentes que están vinculados. Por ejemplo, si llama al repositorio &lt;code&gt;my-first-ml-project&lt;/code&gt; y selecciona el conjunto de proyectos &lt;code&gt;ML-python-pytorch-cpu&lt;/code&gt;, creará dos proyectos independientes en la carpeta actual, &lt;code&gt;my-first-ml-project-training&lt;/code&gt; y &lt;code&gt;my-first-ml-project-service&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Si los crea individualmente, es importante que sus proyectos compartan el mismo nombre raíz y que terminen con los sufijos &lt;code&gt;-training&lt;/code&gt; y &lt;code&gt;-service&lt;/code&gt; para que puedan integrarse automáticamente durante el proceso de construcción.&lt;/p&gt;
&lt;p&gt;Puede utilizar un filtro de texto para filtrar los nombres de los proyectos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create mlquickstart -f gpu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;qué-sucede-cuando-se-crea-un-inicio-rápido&#34;&gt;¿Qué sucede cuando se crea un inicio rápido?&lt;/h3&gt;
&lt;p&gt;Una vez que haya elegido el proyecto a crear y le haya dado un nombre, se automatizará lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;crea un par de proyectos desde el inicio rápido en subdirectorios&lt;/li&gt;
&lt;li&gt;adiciona el código de ambos en un par de repositorios Git&lt;/li&gt;
&lt;li&gt;crea un repositorio Git  para cada repositorio Git local en una plataforma como &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;empuja el código de los repositorios locales hacia los repositorios remotos&lt;/li&gt;
&lt;li&gt;adiciona los siguientes ficheros:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para construir la imagen Docker de la aplicación&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; para implementar el pipeline CI/CD para las construcciones de entrenamiento y servicio&lt;/li&gt;
&lt;li&gt;charts de Helm para ejecutar la aplicación en Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;registra un enlaces (webhooks) en el repositorio Git remoto hacia los equipos del servidor Jenkins X&lt;/li&gt;
&lt;li&gt;desencadena los pipelines de entrenamiento y despliegue del servicio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Una vez que cree un inicio rápido de aprendizaje automático, los proyectos de entrenamiento y servicio se construirán simultáneamente. El proyecto de servicio se desplegará, pero la primera vez no se iniciará porque todavía no tiene un modelo de entrenamiento para trabajar.&lt;/p&gt;
&lt;p&gt;Mientras tanto, el proyecto de entrenamiento comenzará a trabajar en la capacitación del modelo y, una vez capacitado, realizará algunas pruebas de aceptación para verificar que la instancia del modelo capacitado sea lo suficientemente precisa como para que valga la pena promoverla para futuras pruebas. Si el modelo no ha aprendido lo suficientemente bien, la construcción del entrenamiento fallará en este punto.&lt;/p&gt;
&lt;p&gt;Puede reiniciar el entrenamiento con el comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx start pipeline
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;y luego seleccione el nombre del proyecto de entrenamiento que desea ejecutar nuevamente, o puede editar su secuencia de comandos de capacitación, confirmar sus cambios y enviarlos para activar automáticamente otra ejecución de capacitación.&lt;/p&gt;
&lt;p&gt;Una vez completado el entrenamiento con éxito, la versión de su modelo que acaba de recibir capacitación y las métricas asociadas con esta ejecución se pasarán a su proyecto &lt;code&gt;-service&lt;/code&gt; mediante un PR. Ahora debe revisar el repositorio del proyecto &lt;code&gt;-service&lt;/code&gt; y verificar las métricas de capacitación para verificar su idoneidad. El proyecto &lt;code&gt;-service&lt;/code&gt; se reconstruirá automáticamente utilizando la instancia del modelo recién entrenado y se desplegará en un entorno de vista previa donde puede probarlo utilizando su API.&lt;/p&gt;
&lt;p&gt;Si se aprueban todas las comprobaciones de control de calidad, puede cerrar la sesión de la misma manera que lo haría para cualquier otra compilación dentro de Jenkins-X (haga que los aprobadores y revisores issue /approve y /lgtm comentarios en el hilo del PR).&lt;/p&gt;
&lt;p&gt;Una vez que se cierra la sesión, la instancia del modelo entrenado se mezcla en la rama &lt;code&gt;master&lt;/code&gt; de su proyecto &lt;code&gt;-service&lt;/code&gt;, se reconstruye y se despliega en etapas para pruebas e integración adicionales.&lt;/p&gt;
&lt;p&gt;Cada vez que reinicie el proyecto de entrenamiento, obtendrá una nueva instancia de modelo que puede elegir promover de la misma manera. Todos los modelos se versionan a través de Git, por lo que puede realizar un seguimiento de cada instancia y sus métricas.&lt;/p&gt;
&lt;h3 id=&#34;cómo-funciona-el-inicio-rápido&#34;&gt;¿Cómo funciona el inicio rápido?&lt;/h3&gt;
&lt;p&gt;La fuente de estos proyectos de Inicio Rápido se mantiene en &lt;a href=&#34;https://github.com/machine-learning-quickstarts&#34;&gt;la organización GitHub de machine-learning-quickstarts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Al igual que con los inicios rápidos convencionales de Jenkins-X, utilizamos &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;los paquetes de compilación Jenkins X&lt;/a&gt; para que utilizar el paquete adecuado para el proyecto utilizando el lenguaje de código fuente y los tipos frameworks de aprendizaje automático para elegir la combinación más adecuada.&lt;/p&gt;
&lt;p&gt;Cuando utilice &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/&#34;&gt;jx create&lt;/a&gt;, &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/install-on-cluster/&#34;&gt;jx install&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx init&lt;/a&gt;, &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;los paquetes de compilación de Jenkins X&lt;/a&gt; serán clonados en su carpeta local &lt;code&gt;~/.jx/draft/packs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Entonces, cuando creas un proyecto de inicio rápido de aprendizaje automático, &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;los paquetes de compilación de Jenkins X&lt;/a&gt; son utilizado para:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;buscar el paquete correspondiente al lenguaje de programación. p.ej aquí está la actual &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34;&gt;lista de paquetes para lenguajes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;el paquete de lenguaje es utilizado para seleccionar los siguientes ficheros correspondientes si no existen:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para crear la imagen Docker de la aplicación&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jenkins-x.yml&lt;/code&gt; para implementar los pipelines CI/CD utilizando pipelines declarativos como código&lt;/li&gt;
&lt;li&gt;Charts Helms para desplegar la aplicación en Kubernetes y para implementar &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos-de-vista-previa&#34;&gt;Vistas Previas de Entornos&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;adicionar-tus-propios-inicios-rápidos&#34;&gt;Adicionar tus propios Inicios Rápidos&lt;/h2&gt;
&lt;p&gt;Si desea enviar un nuevo inicio rápido a Jenkins X, simplemente &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new?labels=quickstart&amp;amp;title=Add%20mlquickstart&amp;amp;body=Please%20add%20this%20github%20mlquickstart:&#34;&gt;plantee un problema&lt;/a&gt; con la URL en GitHub de su inicio rápido y podemos bifurcarlo en la &lt;a href=&#34;https://github.com/machine-learning-quickstarts&#34;&gt;organización de inicio rápido&lt;/a&gt; para que aparezca en el menú &lt;code&gt;jx create mlquickstart&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O si forma parte de un proyecto de código abierto y desea seleccionar su propio conjunto de inicios rápidos para su proyecto; puede &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new?labels=quickstart&amp;amp;title=Add%20mlquickstart&amp;amp;body=Please%20add%20this%20github%20mlquickstart:&#34;&gt;plantear un problema&lt;/a&gt; proporcionándonos detalles de la organización de GitHub donde están los inicios rápidos y lo agregaremos como una organización predeterminada en el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_mlquickstart/&#34;&gt;jx create mlquickstart&lt;/a&gt;. Es más fácil para &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_mlquickstart/&#34;&gt;jx create mlquickstart&lt;/a&gt; si mantiene los inicios rápidos en una organización separada de inicio rápido en GitHub.&lt;/p&gt;
&lt;p&gt;Hasta que lo hagamos, puede seguir usando sus propios Inicios Rápidos en el comando &lt;code&gt;jx create mlquickstart&lt;/code&gt; a través del parámetro &lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--organisation&lt;/code&gt;. p.ej.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create mlquickstart  --organisations my-github-org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego, todos los inicios rápidos de aprendizaje automático que se encuentran en &lt;code&gt;my-github-org&lt;/code&gt; se enumerarán además de los valores predeterminados.&lt;/p&gt;
&lt;p&gt;Tenga en cuenta que hay algunos estándares para crear inicios rápidos de aprendizaje automático:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Todos los nombres de inicio rápido deben comenzar con las letras &lt;code&gt;ML-&lt;/code&gt; para distinguirlo de un inicio rápido convencional&lt;/li&gt;
&lt;li&gt;Los proyectos de entrenamiento deben tener sufijos &lt;code&gt;-training&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Los proyectos de servicio deben tener el sufijo &lt;code&gt;-service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Todos los componentes de un conjunto de proyectos deben compartir el mismo prefijo raíz a su nombre&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para crear un conjunto de proyectos de aprendizaje automático, cree un nuevo repositorio en su organización de inicio rápido de modo que el nombre sea el prefijo compartido para su inicio rápido, por ejemplo: &lt;code&gt;machine-learning-quickstarts/ML-python-pytorch-cpu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Intente elegir nombres explicativos para que quede claro qué lenguaje, framework y hardware están asociados con este conjunto de proyectos.&lt;/p&gt;
&lt;p&gt;Dentro de su repositorio de conjuntos de proyectos, cree un único archivo llamado &lt;code&gt;projectset&lt;/code&gt; que tenga el siguiente formato:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;[
   {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repo&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ML-python-pytorch-cpu-service&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tail&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-service&amp;#34;&lt;/span&gt;
   },
   {
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repo&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ML-python-pytorch-cpu-training&amp;#34;&lt;/span&gt;,
      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tail&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-training&amp;#34;&lt;/span&gt;
   }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;personalizar-sus-equipos-de-inicio-rápido&#34;&gt;Personalizar sus equipos de Inicio Rápido&lt;/h2&gt;
&lt;p&gt;Puede configurar a nivel de equipo los inicios rápidos que se le presentan en el comando &lt;code&gt;jx create mlquickstart&lt;/code&gt;. Estas configuraciones se almacenan en el recurso &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/&#34;&gt;Environment Custom Resource&lt;/a&gt; en Kubernetes.&lt;/p&gt;
&lt;p&gt;Para agregar la ubicación de un conjunto de inicios rápidos de aprendizaje automático, puede usar el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_quickstartlocation/&#34;&gt;jx create quickstartlocation&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create quickstartlocation --url https://mygit.server.com --owner my-mlquickstarts --includes&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;ML-*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Tenga en cuenta que DEBE especificar la opción &lt;code&gt;--includes=[ML-*]&lt;/code&gt; o sus inicios rápidos se agregarán a la lista de inicio rápido convencional en lugar de a la lista de aprendizaje automático.&lt;/p&gt;
&lt;p&gt;Si omite el parámetro &lt;code&gt;--url&lt;/code&gt;, el comando asumirá que es un repositorio de &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;. Tenga en cuenta que se admiten repositorios públicos y privados.&lt;/p&gt;
&lt;p&gt;Esto significa que puede tener sus propios inicios rápidos privados compartidos para reutilizar dentro de su organización. Por supuesto, obviamente preferimos que &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new?labels=quickstart&amp;amp;title=Add%20mlquickstart&amp;amp;body=Please%20add%20this%20github%20mlquickstart:&#34;&gt;comparta sus inicios rápidos con nosotros a través del código abierto&lt;/a&gt;, luego podemos incluir su inicio rápido con toda la comunidad, pero puede haber ocasiones en las que desee seleccionar sus propios inicios rápidos internos utilizando un software propietario.&lt;/p&gt;
&lt;p&gt;También puede especificar otros patrones como &lt;code&gt;--includes&lt;/code&gt; o &lt;code&gt;--excludes&lt;/code&gt; para filtrar los nombres de los repositorios donde &lt;code&gt;*&lt;/code&gt; coincide con cualquier cosa y &lt;code&gt;foo*&lt;/code&gt; coincide con cualquier cosa que comience por &lt;code&gt;foo&lt;/code&gt;. p.ej. puede incluir los lenguajes y las tecnologías que admite su organización y excluir el resto, etc.&lt;/p&gt;
&lt;p&gt;También tenga en cuenta que puede usar el alias de &lt;code&gt;qsloc&lt;/code&gt; en lugar de &lt;code&gt;quickstartlocation&lt;/code&gt; si desea alias más cortos;)&lt;/p&gt;
&lt;p&gt;Luego puede ver las ubicaciones actuales de inicio rápido para su equipo a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_quickstartlocation/&#34;&gt;jx get quickstartlocations&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx get quickstartlocations
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O utilizando la abreviatura&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx get qsloc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;También está el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_delete_quickstartlocation/&#34;&gt;jx delete quickstartlocation&lt;/a&gt; si necesita eliminar una organización Git.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Crear Spring Boot</title>
      <link>https://jenkins-x.io/es/docs/using-jx/creating/create-spring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/using-jx/creating/create-spring/</guid>
      <description>
        
        
        &lt;p&gt;Los desarrolladores de microservicios de Java pueden aprovechar los recursos recomendados de &lt;a href=&#34;https://spring.io/projects/spring-boot&#34;&gt;Spring
Boot&lt;/a&gt;, así como sus componentes pre-configurados. Este framework toma la plataforma Spring y agrega componentes pre-establecidos, bibliotecas de terceros, empaquetadores de software y herramientas de línea de comandos para ejecutar scripts especializados.&lt;/p&gt;
&lt;p&gt;El objetivo de Spring Boot es crear software basado en Spring, como microservicios, que se puede desplegar utilizando la línea de comando &lt;code&gt;java&lt;/code&gt; o los ficheros de empaquetado &lt;em&gt;Web Application Resource&lt;/em&gt; (WAR). Spring Boot usa Spring como base para el desarrollo, y lo mejora con componentes que proporcionan un desarrollo y despliegues más rápidos, así como configuración para comenzar a desarrollar microservicios, y un marco de plugin con soporte para funcionalidades de los proyectos Maven y Gradle.&lt;/p&gt;
&lt;h2 id=&#34;spring-boot-y-jenkins-x&#34;&gt;Spring Boot y Jenkins X&lt;/h2&gt;
&lt;p&gt;Puede incorporar Jenkins X en su proyecto Spring Boot de dos formas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Importando un proyecto existente de Spring BootBy utilizando &lt;code&gt;jx import&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creando una aplicación Spring Boot desde cero utilizando &lt;code&gt;jx create spring&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;importando-un-proyecto-existente-de-spring-boot&#34;&gt;Importando un proyecto existente de Spring Boot&lt;/h2&gt;
&lt;p&gt;Si usted tiene un proyecto en Spring Boot (tal vez creado utilizando &lt;a href=&#34;http://start.spring.io/&#34;&gt;Spring Boot Initializr&lt;/a&gt;) y desea gestionar sus construcciones con Jenkins X, utilice el comando &lt;code&gt;jx import&lt;/code&gt; para:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;incluir tu código en un servidor Git como puede ser GitHub&lt;/li&gt;
&lt;li&gt;adicionar el fichero &lt;code&gt;Dockerfile&lt;/code&gt; para construir la imagen Docker&lt;/li&gt;
&lt;li&gt;adicionar el fichero &lt;code&gt;pipeline.yaml&lt;/code&gt; al directorio local &lt;code&gt;~/.jx/&lt;/code&gt; para gestionar el pipeline del desarrollo&lt;/li&gt;
&lt;li&gt;adicionar el chart de Helm para ejecutar la aplicación en Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Los pasos para lograr este objetivo son:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Vaya al directorio de su proyecto Spring Boot:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cd my-springapp/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;Ejecute el comando import desde la línea de comando:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx import
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le pregunta su nombre de usuario Git (p.ej &lt;code&gt;myuser&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le pregunta si desea inicializar su proyecto en Git.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicaicón le pregunta qué organización utilizar para las construcciones (p.ej, &lt;code&gt;myorg&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le pregunta qué nombre ponerle al repositorio remoto en Git (p.ej &lt;code&gt;my-springapp&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ahora puede realizar compilaciones, adicionar código del proyecto en su repositorio Git recién creado, y Jenkins X procesará automáticamente los PR y creará &lt;a href=&#34;https://jenkins-x.io/docs/reference/preview/&#34;&gt;vistas previas&lt;/a&gt; de sus aplicaciones para pruebas y validación.&lt;/p&gt;
&lt;h2 id=&#34;creando-una-aplicación-spring-boot&#34;&gt;Creando una aplicación Spring Boot&lt;/h2&gt;
&lt;p&gt;Si está evaluando Spring Boot para su entorno Jenkins X y necesita una aplicación de ejemplo con estas características, así como su configuración de pipelines CI/CD con promociones GitOps, utilice &lt;code&gt;jx create&lt;/code&gt; para lograr su objetivo.&lt;/p&gt;
&lt;p&gt;Los pasos para lograrlo son los siguientes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ejecute siguiente comando para crear la aplicación Spring Boot:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create spring
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le preguntará por su usuario en Git (p.ej &lt;code&gt;myuser&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le permitirá seleccionar la organización que desee utilizar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le preguntará por el nombre del repositorio, (p.ej &lt;code&gt;my-springapp1&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le preguntará por el lenguaje de programación que va a utilizar (por defecto &lt;code&gt;java&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le preguntará por el ID del grupo (por defecto, &lt;code&gt;com.example&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le preguntará por alguna entrada o dependencia que desee utilizar durante el desarrollo de la aplicación.
Le recomendamos que como mínimo utilice las dependencias &lt;code&gt;Acurator&lt;/code&gt; y &lt;code&gt;Web&lt;/code&gt;, las cuales pueden ser seleccionadas utilizando la &lt;code&gt;Barra de Espacio&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le mostrará para inicializar el repositorio Git.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Esta es una &lt;a href=&#34;https://jenkins-x.io/docs/resources/demos-talks-posts/create_spring/&#34;&gt;demostración utilizando el comando jx create spring&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;También puede adicionar algunas opciones al comado &lt;code&gt;jx create&lt;/code&gt; como por ejemplo, especificar las dependencias:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create spring -d web -d actuator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;El argumento &lt;code&gt;-d&lt;/code&gt; le permite especificar las dependencias de Spring Boot que desea agregar a su aplicación. En el ejemplo anterior, el comando llama al argumento &lt;code&gt;web&lt;/code&gt;, que pasa en la dependencia de Web Starter para crear aplicaciones web RESTful; la dependencia del &lt;code&gt;acurator&lt;/code&gt; para monitorear el estado y las métricas de su aplicación. Cuando omite los argumentos &lt;code&gt;-d&lt;/code&gt;, el comando &lt;code&gt;jx&lt;/code&gt; le preguntará que elija las dependencias a través de un asistente de CLI.&lt;/p&gt;
&lt;p&gt;Recomendamos que siempre incluya la dependencia &lt;strong&gt;actuator&lt;/strong&gt; en sus aplicaciones Spring Boot, ya que ayuda a proporcionar comprobaciones de &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/&#34;&gt;Liveness and Readiness probes&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;proyectos-spring-boot-gestionados-por-jenkins-x&#34;&gt;Proyectos Spring Boot gestionados por Jenkins X&lt;/h2&gt;
&lt;p&gt;Los dos métodos para configurar proyectos Spring Boot en Jenkins X realizan varias acciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Crea una nueva aplicación Spring Boot en un subdirectorio local&lt;/li&gt;
&lt;li&gt;Adiciona el código fuente a un repositorio Git&lt;/li&gt;
&lt;li&gt;Crea un repositorio Git remoto en plataformas como &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Agrega el código al repositorio Git remoto&lt;/li&gt;
&lt;li&gt;Agrega los siguientes ficheros al proyecto:
&lt;ul&gt;
&lt;li&gt;Un &lt;code&gt;Dockerfile&lt;/code&gt; para construir la imagen de Docker del proyecto&lt;/li&gt;
&lt;li&gt;Un &lt;code&gt;pipeline.yaml&lt;/code&gt; para implementar el pipeline CI/CD&lt;/li&gt;
&lt;li&gt;Un chart de Helm para ejecutar la aplicacion en Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Registra un enlace (p.ej &lt;code&gt;http://hook-jx.192.169.1.100.nip.io/hook&lt;/code&gt;) en el repositorio Git remoto&lt;/li&gt;
&lt;li&gt;Inicia el primer pipeline de construcción&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ahora puede usar su subdirectorio de proyecto local habilitado para Git para realizar cambios en su aplicación Spring Boot, enviar esos cambios a Git y hacer que Jenkins X construya automáticamente, cree &lt;a href=&#34;https://jenkins-x.io/docs/reference/preview/&#34;&gt;vistas previas&lt;/a&gt; para pruebas y validación, y &lt;a href=&#34;https://jenkins-x.io/developing/promote/&#34;&gt;promueva&lt;/a&gt; su aplicación a producción para uso general.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Importar</title>
      <link>https://jenkins-x.io/es/docs/using-jx/creating/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/using-jx/creating/import/</guid>
      <description>
        
        
        &lt;p&gt;Si ya tiene algún código fuente que desea importar a Jenkins X, puede usar el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt;. p.ej.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cd my-cool-app
jx import
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Al utilizar el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; se realizarán las siguientes acciones (se le indicará en el camino):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adiciona su código en un repositorio Git si no existe actualmente&lt;/li&gt;
&lt;li&gt;crea un repositorio Git remoto en plataformas como &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;empuja su código al repositorio Git remoto&lt;/li&gt;
&lt;li&gt;adiciona ficheros necesarios a su código si no existen, fichero como:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para construir la imagen Docker de su aplicación&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; para implementar el pipeline CI/CD&lt;/li&gt;
&lt;li&gt;chart de Helm para ejecutar la aplicación dentro de Kubernetes&lt;/li&gt;
&lt;li&gt;registra un enlace (webhook) entre el repositorio Git remoto y sus equipos de Jenkins&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;adiciona el repositorio Git a sus equipos de Jenkins&lt;/li&gt;
&lt;li&gt;desencadena el primer pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;evitando-docker--helm&#34;&gt;Evitando docker + helm&lt;/h3&gt;
&lt;p&gt;Si estás importando un repositorio que no crea una imagen Docker puede utilizar el parámetro &lt;code&gt;--no-draft&lt;/code&gt; en la línea de comando para indicarle que no utilice Draft. De esta forma no serán creados los ficheros &lt;code&gt;Dockerfile&lt;/code&gt; y el chart de Helm.&lt;/p&gt;
&lt;h3 id=&#34;importando-a-través-de-la-url&#34;&gt;Importando a través de la URL&lt;/h3&gt;
&lt;p&gt;Si desea importar un proyecto que ya está en un repositorio git remoto, puede usar el parámetro &lt;code&gt;--url&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx import --url https://github.com/jenkins-x/spring-boot-web-example.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;importar-proyectos-de-github&#34;&gt;Importar proyectos de GitHub&lt;/h3&gt;
&lt;p&gt;Si desea importar proyectos desde una organización de GitHub puede utilizar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx import --github --org myname
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;El sistema le preguntará por el repositorio que desea importar. Utilice las flechas y la barra de espacio para seleccionar/desmarcar repositorios:&lt;/p&gt;
&lt;p&gt;Si desea que estén marcados todos los repositorios a la hora de importarlos utilice &lt;code&gt;--all&lt;/code&gt;, luego puede desmarcar el que desee:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx import --github --org myname --all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para filtrar el listado puede adicionar el parámetro &lt;code&gt;--filter&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx import --github --org myname --all --filter foo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;patrones-de-ramas&#34;&gt;Patrones de Ramas&lt;/h2&gt;
&lt;p&gt;Al importar proyectos en Jenkins X, usamos patrones de rama Git para determinar qué nombres de rama se configuran automáticamente para CI/CD.&lt;/p&gt;
&lt;p&gt;Por lo general, eso puede ser predeterminado a algo como &lt;code&gt;master|PR-.*|feature.*&lt;/code&gt;. Eso significa que la rama &lt;code&gt;master&lt;/code&gt;, cualquier rama que comience con &lt;code&gt;PR-&lt;/code&gt; o &lt;code&gt;feature&lt;/code&gt; se escaneará para buscar el fichero &lt;code&gt;Jenkinsfile&lt;/code&gt; para configurar los pipelines CI/CD.&lt;/p&gt;
&lt;p&gt;Si usa otro nombre de rama que no sea &lt;code&gt;master&lt;/code&gt;, como &lt;code&gt;develop&lt;/code&gt; o lo que sea, puede cambiar este patrón para que sea lo que quiera a través del parámetro &lt;code&gt;--branches&lt;/code&gt; siempre que ejecute &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_quickstart/&#34;&gt;jx create quickstart&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx import --branches &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;develop|PR-.*|feature.*&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puede desear establecer simplemento &lt;code&gt;.*&lt;/code&gt; para trabajar con todas las ramas.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx import --branches &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.*&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;configurar-los-patrones-de-ramas-de-tu-equipos&#34;&gt;Configurar los patrones de ramas de tu equipos&lt;/h2&gt;
&lt;p&gt;Por lo general, un equipo usa las mismas convenciones de nomenclatura para las ramas, por lo que es posible que desee configurar los patrones de las ramas a nivel de equipo para que se usen de forma predeterminada si alguien en su equipo ejecuta &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_quickstart/&#34;&gt;jx create quickstart&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Estas configuraciones se almacenan en el recurso &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/&#34;&gt;Environment Custom Resource&lt;/a&gt; en Kubernetes.&lt;/p&gt;
&lt;p&gt;Para establecer los patrones de ramas para su equipo, utilice el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_branchpattern/&#34;&gt;jx create branchpattern&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create branchpattern  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;develop|PR-.*|feature.*&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego puede ver los patrones de rama actuales para su equipo a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_branchpattern/&#34;&gt;jx get branchpattern&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx get branchpattern
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
