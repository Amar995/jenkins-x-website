<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes – Documentación</title>
    <link>https://jenkins-x.io/es/docs/</link>
    <description>Recent content in Documentación on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    
	  <atom:link href="https://jenkins-x.io/es/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: ¿Que sigue?</title>
      <link>https://jenkins-x.io/es/docs/getting-started/next/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/next/</guid>
      <description>
        
        
        &lt;p&gt;Perfecto, entonces ya &lt;a href=&#34;https://jenkins-x.io/getting-started/install/&#34;&gt;tienes la CLI jx&lt;/a&gt; y también has logrado realizar al menos uno de estos dos objetivos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/getting-started/create-cluster/&#34;&gt;crear un clúster de Kubernetes con Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/getting-started/install-on-cluster/&#34;&gt;instalar Jenkins X en un clúster de Kubernete existente&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;¿Qué es lo siguiente?&lt;/p&gt;
&lt;p&gt;Bueno, la sección &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/&#34;&gt;Utilizando de Jenkins X&lt;/a&gt; contiene los siguientes pasos que puede probar, como por ejemplo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/create-spring/&#34;&gt;cree una nueva aplicación Spring Boot e impórtela a Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/docs/getting-started/first-project/create-quickstart/&#34;&gt;cree un nuevo inicio e impórtelo a Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;importe un proyecto existente (código fuente) en Jenkins X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/developing/browsing/&#34;&gt;navegue&lt;/a&gt; por canales, compilaciones, aplicaciones y actividades&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;También puede consultar las &lt;a href=&#34;https://jenkins-x.io/docs/resources/demos-talks-posts/&#34;&gt;diversas demostraciones de lo que puede hacer con Jenkins X&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Componentes</title>
      <link>https://jenkins-x.io/es/docs/concepts/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/concepts/components/</guid>
      <description>
        
        
        &lt;p&gt;Una instalación de Jenkins X consiste en:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;un Entorno de Desarrollo por equipo que corresponde con un &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/&#34;&gt;namespace en Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;de cero a muchos otros &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos&#34;&gt;Entornos Permanentes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;lo que está listo para se utilizado es que cada equipo tenga su propios entornos de &lt;code&gt;Staging&lt;/code&gt; y &lt;code&gt;Production&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;cada equipo puede tener tantos entornos como deseen y pueden nombrarlos de la manera que prefieran&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;opcional &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos-de-vista-previa&#34;&gt;Vista Previa del Entorno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Normalmente cada entorno es asociado con su propio &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/&#34;&gt;namespace en Kubernetes&lt;/a&gt; para garantizar un correcto aislamiento entre entornos.&lt;/p&gt;
&lt;p&gt;Técnicamente 2 equipos podrían compartir el mismo espacio de nombres (mismo namespace en Kubernetes), pero esto podría traer problemas y por eso no lo recomendamos. Pensemos en el namespace &lt;code&gt;Staging&lt;/code&gt; y en 2 equipos donde cada uno tiene una aplicación en un repositorio Git, en total 2 repositorios. Al realizar cambios en uno de los repositorios Git se podrían generar conflictos con el otro en los nombres de los elementos o en los DNS. Para evitar estos problemas, es preferible mantener estructurar los equipos (las aplicaciones) en namespaces separados y realizar los enlaces entre servicios utilizando la estructura local DNS.&lt;/p&gt;
&lt;p&gt;Revise la lista completa de &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/&#34;&gt;componentes de Jenkins X&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;entornos-de-desarrollo&#34;&gt;Entornos de Desarrollo&lt;/h2&gt;
&lt;p&gt;En el entorno de desarrollo, hemos instalado una serie de aplicaciones principales que creemos son necesarias como mínimo para comenzar con CI/CD en Kubernetes.&lt;/p&gt;
&lt;p&gt;También admitimos &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#aplicaciones&#34;&gt;complementos&lt;/a&gt; para ampliar este conjunto básico.&lt;/p&gt;
&lt;p&gt;Jenkins X viene con una configuración que conecta estos servicios entre sí, lo que significa que todo funciona de conjunto de inmediato. Esto reduce drásticamente el tiempo para comenzar con Kubernetes, ya que todas las contraseñas, las variables de entorno y los archivos de configuración están configurados para funcionar entre sí.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Jenkins&lt;/strong&gt; — proporciona la automatización de flujos CI/CD. Hay un esfuerzo para descomponer Jenkins con el tiempo para volverlo más nativo de la nube y hacer mayor uso de los conceptos de Kubernetes en torno a: CRD, almacenamiento, escalado, entre otros.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nexus&lt;/strong&gt; — actúa como un caché de dependencia para aplicaciones NodeJS y Java para mejorar dramáticamente los tiempos de compilación. Después de una compilación inicial de una aplicación SpringBoot, el tiempo de compilación se reduce de 12 minutos a 4. Todavía no hemos intentado demostrar, pero lo haremos pronto, el intercambiarlo con Artifactory.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker registry&lt;/strong&gt;  — un registro de docker dentro del clúster donde nuestros pipelines envían imágenes de aplicaciones, pronto pasaremos a utilizar registros de proveedores nativos de la nube, como Google Container Registry, Azure Container Registry o Amazon Elastic Container Registry (ECR), por ejemplo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ChartMuseum&lt;/strong&gt; — un Repositorio para publicar los charts de Helm&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monocular&lt;/strong&gt;  — una interfaz de usuario utilizada para obtener y ejecutar charts de Helm&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;entornos-permanentes&#34;&gt;Entornos Permanentes&lt;/h2&gt;
&lt;p&gt;Estos &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos&#34;&gt;entornos&lt;/a&gt;, como &lt;code&gt;Staging&lt;/code&gt; y &lt;code&gt;Production&lt;/code&gt; utilizan GitOps para auto-gestionarse, por lo que cada uno tiene asociado un repositorio Git con el código necesario para configurar todas las aplicaciones y servicios que son desplegados en el.&lt;/p&gt;
&lt;p&gt;Normalmente se utilizan charts de Helm dentro del repositorio para definir qué chart será instalado, que versión utilizar y cualquier otra configuración específica necesaria del entorno, así como recurso adicionales. p.ej. Información sensible (Secrets) o aplicaciones como Prometheus, etc.&lt;/p&gt;
&lt;h2 id=&#34;entornos-de-vista-previa&#34;&gt;Entornos de Vista Previa&lt;/h2&gt;
&lt;p&gt;Los &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos-de-vista-previa&#34;&gt;Entornos de Vista Previa&lt;/a&gt; son similares a los &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos&#34;&gt;Entornos Permanentes&lt;/a&gt; en el punto donde ambos están definidos en el código fuente utilizando los charts de Helm.&lt;/p&gt;
&lt;p&gt;La principal diferencia es que los entornos de vista previa están configurados dentro del código fuente de la aplicación, en la carpeta &lt;code&gt;./chart/preview&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Además, estos entornos no son permanentes, sino que se crean a partir de un PR en el repositorio Git de la aplicaciones y luego se eliminan un tiempo después (manualmente o mediante la recolección automática de basura).&lt;/p&gt;
&lt;h2 id=&#34;anotaciones-personalizadas-de-entrada&#34;&gt;Anotaciones Personalizadas de Entrada&lt;/h2&gt;
&lt;p&gt;Para obtener información sobre cómo agregar anotaciones personalizadas al controlador de entradas, consulte &lt;a href=&#34;https://jenkins-x.io/docs/resources/faq/using/#how-to-add-custom-annotations-to-ingress-controller&#34;&gt;¿Cómo agregar anotaciones personalizadas al controlador de Entradas?&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Control de Acceso</title>
      <link>https://jenkins-x.io/es/docs/managing-jx/common-tasks/access-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/managing-jx/common-tasks/access-control/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X utiliza políticas de control de acceso basado en roles - en inglés Role-Based Access Control (RBAC) - para controlar el acceso a sus diversos recursos. La aplicación de las políticas es proporcionada por el &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;RBAC de Kubernetes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Los &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#teams&#34;&gt;Equipos&lt;/a&gt; pueden tener varios &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;Entornos&lt;/a&gt; (p.ej, Dev, Staging, Production) junto con dinámicos &lt;a href=&#34;https://jenkins-x.io/docs/reference/preview/&#34;&gt;Entornos de Vista Previa&lt;/a&gt;. Mantener sincronizados los recursos &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;&lt;code&gt;Role&lt;/code&gt;&lt;/a&gt; y &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;&lt;code&gt;RoleBinding&lt;/code&gt;&lt;/a&gt; pertenecientes al mecanismo RBAC de Kubernetes con todos los namespaces y miembros de su equipo puede ser un desafío.&lt;/p&gt;
&lt;p&gt;Para facilitar esta gestión, Jenkins X crea un nuevo &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;Recurso Personalizado&lt;/a&gt; llamado &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/#environmentrolebinding&#34;&gt;&lt;code&gt;EnvironmentRoleBinding&lt;/code&gt;&lt;/a&gt; que le permite asociar un &lt;code&gt;Role&lt;/code&gt; etiquetado con &lt;code&gt;jenkins.io/kind=EnvironmentRole&lt;/code&gt; con tantos &lt;code&gt;Users&lt;/code&gt; o &lt;code&gt;ServiceAccounts&lt;/code&gt; como desee. Luego, el &lt;a href=&#34;https://jenkins-x.io/commands/jx_controller_role/#jx-controller-role&#34;&gt;controlador de roles&lt;/a&gt; tiene la misión de mantener la información replicada y consistente a través de todos los namespaces y entornos. El controlador de roles garantiza esta tarea actualizando constantemente los recursos &lt;code&gt;Role&lt;/code&gt; y &lt;code&gt;RoleBinding&lt;/code&gt; de cada namespace.&lt;/p&gt;
&lt;p&gt;Los roles son por equipo, por lo que es posible tener roles especiales por equipo o utilizar nombres comunes para los roles, pero personalizarlos para cada equipo.&lt;/p&gt;
&lt;h2 id=&#34;implicaciones-de-seguridad-para-el-namespace-admin&#34;&gt;Implicaciones de Seguridad para el namespace admin&lt;/h2&gt;
&lt;p&gt;Jenkins X almacena varias configuraciones y ajustes (por ejemplo, &lt;code&gt;Users&lt;/code&gt;,&lt;code&gt; Teams&lt;/code&gt;) en el namespace de administración principal (&lt;code&gt;jx&lt;/code&gt;). Tenga cuidado al otorgar roles en el equipo &lt;code&gt;jx&lt;/code&gt; predeterminado, ya que permitir a los usuarios editar algunos de estos archivos puede permitirles escalar sus permisos.
En lugar de otorgar a los usuarios que no son administradores acceso al espacio de nombres &lt;code&gt;jx&lt;/code&gt;, cree equipos y otorgue acceso a los usuarios cuando usen un clúster compartido.&lt;/p&gt;
&lt;h2 id=&#34;roles-predeterminados&#34;&gt;Roles Predeterminados&lt;/h2&gt;
&lt;p&gt;Jenkins X incluye una colección de objetos &lt;code&gt;Role&lt;/code&gt; predeterminados que puede utilizar en la plantilla &lt;code&gt;jenkins-x-platform&lt;/code&gt;. Puede crear el suyo si lo desea, pero cualquier edición puede perderse cuando se actualiza Jenkins X.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/templates/viewer-role.yaml&#34;&gt;viewer&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;El rol &lt;code&gt;viewer&lt;/code&gt; permite el acceso de lectura a proyectos, construcciones y logs. No permite el acceso a información confidencial.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/templates/committer-role.yaml&#34;&gt;committer&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;El role &lt;code&gt;committer&lt;/code&gt; proporciona los mismos permisos que el &lt;code&gt;viewer&lt;/code&gt; y permite al usuario iniciar construcciones e importar nuevos proyectos.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/templates/owner-role.yaml&#34;&gt;owner&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;El rol &lt;code&gt;owner&lt;/code&gt; permite a los usuarios modificar todos los recursos del equipo.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;adicionar-usuarios&#34;&gt;Adicionar Usuarios&lt;/h2&gt;
&lt;p&gt;Para adicionar usuarios utilice el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_user/&#34;&gt;jx create user&lt;/a&gt;, p.ej:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create user --email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;joe@example.com&amp;#34;&lt;/span&gt; --login joe --name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Joe Bloggs&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;modificar-roles-del-usuario&#34;&gt;Modificar Roles del Usuario&lt;/h2&gt;
&lt;p&gt;Para modificar los roles de un usuario utilice el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_userroles/&#34;&gt;jx edit userroles&lt;/a&gt;, p.ej:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit userrole --login joe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si no utiliza el parámetro &lt;code&gt;--login&lt;/code&gt; (&lt;code&gt;-l&lt;/code&gt;) en la línea de comando el sistema le pedirá que elija el usuario a editar.&lt;/p&gt;
&lt;p&gt;Por ejemplo, para asignarle a &lt;code&gt;joe&lt;/code&gt; el role &lt;code&gt;committer&lt;/code&gt; (y elimine cualquier otro rol existente):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit userrole --login joe --role committer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si tiene roles específicos y desea otorgar múltiples roles a un usuario, puede especificar los roles como una lista separada por comas:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit userrole --login joe --role committer,viewer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;La modificación de los roles de un usuario cambia el &lt;code&gt;EnvironmentRoleBinding&lt;/code&gt;. El &lt;a href=&#34;https://jenkins-x.io/commands/jx_controller_role/#jx-controller-role&#34;&gt;controlador de roles&lt;/a&gt; replicará estos cambios en todos los namespaces de entorno subyacentes.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Crear un inicio rápido</title>
      <link>https://jenkins-x.io/es/docs/getting-started/first-project/create-quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/first-project/create-quickstart/</guid>
      <description>
        
        
        &lt;p&gt;Los inicios rápidos son aplicaciones prefabricadas desde las que puede iniciar un proyecto, en lugar de comenzar desde cero.&lt;/p&gt;
&lt;p&gt;Puedes crear nuevas aplicaciones desde nuestra lista de aplicaciones de inicio rápido seleccionadas a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_quickstart/&#34;&gt;jx create quickstart&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create quickstart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego se le solicita una lista de aplicaciones de inicio rápido para elegir.&lt;/p&gt;
&lt;p&gt;Si conoces el lenguaje que deseas utilizar podrás utilizarlo para filtrar el listado de aplicaciones de inicio rápido, por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create quickstart -l go
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O utilizar el texto &lt;code&gt;filter&lt;/code&gt; para filtrar por el nombre del proyecto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create quickstart -f http
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;qué-ocurre-cuando-creas-una-aplicación-de-inicio-rápido&#34;&gt;¿Qué ocurre cuando creas una aplicación de inicio rápido?&lt;/h3&gt;
&lt;p&gt;Una vez seleccionado el proyecto a crear y le definas un nombre, se realizarán los siguientes pasos de forma automática:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;se crea una nueva aplicación desde el inicio rápido en un sub-directorio&lt;/li&gt;
&lt;li&gt;se adiciona el código fuente al repositorio de git local&lt;/li&gt;
&lt;li&gt;se crea un repositorio git remoto en el servicio de git, como por ejemplo &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;se empuja tu código local al servicio de git remoto&lt;/li&gt;
&lt;li&gt;se adicionan los ficheros:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para construir la aplicación como una imagen de docker&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; para implementar el flujo de CI / CD&lt;/li&gt;
&lt;li&gt;Plantilla Helm para ejecutar la aplicación dentro de Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;si está usando Jenkins X Pipelines y tekton entonces:
&lt;ul&gt;
&lt;li&gt;se registra un detonador (webhook) en el repositorio remoto git para desencadenar / activar un flujo de tareas (pipeline) en tekton a través de prow / lighthouse.&lt;/li&gt;
&lt;li&gt;se adiciona el repositorio a la configuración de prow / lighthose&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;si estás utilizando Jenkins Server entonces:
&lt;ul&gt;
&lt;li&gt;se registra un detonador en el repositorio remoto git para desencadenar / activar un flujo de tareas en Jenkins&lt;/li&gt;
&lt;li&gt;se crea un proyecto multi-branch en el servidor Jenkins&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;se provoca (trigger) el primer flujo de tareas (pipeline)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cómo-funcionan-los-inicios-rápido&#34;&gt;¿Cómo funcionan los inicios rápido?&lt;/h3&gt;
&lt;p&gt;El código de estas aplicaciones de inicio rápido se encuentra en la &lt;a href=&#34;https://github.com/jenkins-x-quickstarts&#34;&gt;organización jenkins-quickstarts en GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Cuando creas el inicio rápido se utiliza el &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;paquete de construcción de Jenkins X&lt;/a&gt; para identificar la configuración que necesita del proyecto. Durante la identificación se tiene en cuenta los diferentes lenguajes existentes en el proyecto y se selecciona el paquete más adecuado.&lt;/p&gt;
&lt;p&gt;Cuando utilizas &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/create-cluster/&#34;&gt;jx create&lt;/a&gt;, &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/install-on-cluster/&#34;&gt;jx install&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx init&lt;/a&gt; el &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;paquete de construcción de Jenkins X&lt;/a&gt; es clonado ha la carpeta local &lt;code&gt;~/.jx/draft/packs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Dependiendo del tipo de instalación de Jenkins X (Serverless Jenkins vs Static Master Jenkins), puedes ver todos los lenguajes disponibles en los paquetes de construcción si listas los elementos de la siguiente ubicación de tu máquina:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Serverless Jenkins&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -al ~/.jx/draft/packs/github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/packs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Static Master Jenkins&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -al ~/.jx/draft/packs/github.com/jenkins-x-buildpacks/jenkins-x-classic/packs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Entonces, cuando creas un proyecto de inicio rápido, ya sea a través de &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/common-tasks/create-spring/&#34;&gt;jx create spring&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;jx import&lt;/a&gt;, el &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;constructor de paquetes de Jenkins X&lt;/a&gt; realiza lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;selecciona el paquete correcto basado en el lenguaje del código (&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34;&gt;listado de posibles paquetes&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;el paquete seleccionado es utilizado para incluir los siguientes fichero en caso de que no existan:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para crear la imagen de docker para la aplicación&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; para implementar el flujo de tareas CI / CD utilizando la declaración de tareas como código (declarative pipeline as code)&lt;/li&gt;
&lt;li&gt;Plantillas Helm para desplegar la aplicación en Kubernetes e implementar la &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos-de-vista-previa&#34;&gt;Vista Previa de Entornos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;agregar-tu-propio-inicio-rápido&#34;&gt;Agregar tu propio Inicio rápido&lt;/h2&gt;
&lt;p&gt;Si desea enviar un nuevo inicio rápido a Jenkins X, &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new?labels=quickstart&amp;amp;title=Add%20quickstart&amp;amp;body=Please%20add%20this%20github%20quickstart:&#34;&gt;simplemente plantee el problema&lt;/a&gt; con la URL en GitHub de su inicio rápido y podremos bifurcarlo (fork) en la &lt;a href=&#34;https://github.com/jenkins-x-quickstarts&#34;&gt;organización de inicio rápido&lt;/a&gt; para que aparezca en el menú de inicio rápido &lt;code&gt;jx create&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Otra forma puede ser si forma parte de un proyecto de código abierto y desea crear tu propio grupo de inicios rápidos para su proyecto; puede &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new?labels=quickstart&amp;amp;title=Add%20quickstart&amp;amp;body=Please%20add%20this%20github%20quickstart:&#34;&gt;plantear el problema&lt;/a&gt; dándonos detalles de la organización en GitHub donde están los inicios rápidos y los agregaremos a la  organización para que aparezcan en el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_quickstart/&#34;&gt;jx create quickstart&lt;/a&gt;. Es más fácil para el &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_quickstart/&#34;&gt;jx create quickstart&lt;/a&gt; si se mantienen los inicios rápidos separados por organizaciones en GitHub.&lt;/p&gt;
&lt;p&gt;Una vez incluidos, podrá utilizar sus propios inicios rápidos en el comando &lt;code&gt;jx create quickstart&lt;/code&gt; mediante el parámetro de comando &lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--organisations&lt;/code&gt;. Por ejemplo:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create quickstart  -l go --organisations my-github-org
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Entonces todos los inicios rápidos que se encuentren en &lt;code&gt;my-github-org&lt;/code&gt; serán listados adicionalmente a los existentes en la organización Jenkins X.&lt;/p&gt;
&lt;h2 id=&#34;personalizar-los-grupos-de-inicio-rápido&#34;&gt;Personalizar los grupos de inicio rápido&lt;/h2&gt;
&lt;p&gt;Puedes configurar a nivel de grupos las aplicaciones de inicio rápido que desees que se muestren con el comando &lt;code&gt;jx create quickstart&lt;/code&gt;. Esta configuración se encuentra guardada en un &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/&#34;&gt;Environment Custom Resource&lt;/a&gt; en Kubernetes.&lt;/p&gt;
&lt;p&gt;Para adicionar una nueva ubicación de aplicaciones de inicio rápido puedes utilizar el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_quickstartlocation/&#34;&gt;jx create quickstartlocation&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create quickstartlocation --url https://mygit.server.com --owner my-quickstarts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si omites el parámetro &lt;code&gt;--url&lt;/code&gt; el comando va a asumir como repositorios a &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;. Ten en cuenta que está permitido incluir tanto repositorios privados como públicos.&lt;/p&gt;
&lt;p&gt;Esto significa que puedes tener tu repositorio privado para inicios rápidos en tu organización. Nosotros recomendamos lógicamente que &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new?labels=quickstart&amp;amp;title=Add%20quickstart&amp;amp;body=Please%20add%20this%20github%20quickstart:&#34;&gt;los nuevos inicios rápidos sean compartidos como proyectos open source&lt;/a&gt; para que puedan ser incluidos y compartidos con toda &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;la comunidad&lt;/a&gt; - pero puede darse el caso que desees tener un repositorio propio privado para utilizarlo con proyectos propietarios.&lt;/p&gt;
&lt;p&gt;Puedes además especificar &lt;code&gt;--includes&lt;/code&gt; o excluir &lt;code&gt;--excludes&lt;/code&gt; patrones para filtrar por nombres de repositorios donde &lt;code&gt;*&lt;/code&gt; incluye a todos los elementos y &lt;code&gt;foo*&lt;/code&gt; selecciona todos aquellos que empiezen con &lt;code&gt;foo&lt;/code&gt;. Por ejemplo, puedes solamente incluir los lenguajes y tecnologías de tu organización necesite y el resto excluirlos.&lt;/p&gt;
&lt;p&gt;Te interesará saber que puedes utilizar el alias &lt;code&gt;gsloc&lt;/code&gt; en vez de &lt;code&gt;quickstartlocation&lt;/code&gt; si te gustan más lo alias cortos ;)&lt;/p&gt;
&lt;p&gt;Puedes entonces ver la ubicación actual de tus aplicaciones de inicio rápido de tu equipo utilizando el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_quickstartlocation/&#34;&gt;jx get quickstartlocations&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get quickstartlocations
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O con su alias corto&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get qsloc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Existe el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_delete_quickstartlocation/&#34;&gt;jx delete quickstartlocation&lt;/a&gt; por si necesitas eliminar la ubicación del repositorio git.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Preguntas sobre Pipelines</title>
      <link>https://jenkins-x.io/es/docs/using-jx/faq/pipelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/using-jx/faq/pipelines/</guid>
      <description>
        
        
        &lt;p&gt;Para obtener más información, consulte la guía sobre los &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/&#34;&gt;Pipelines Serverless Jenkins X&lt;/a&gt; con &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt;. También está la referencia de &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/&#34;&gt;sintaxis de Pipelines en Jenkins X&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cómo-agrego-un-paso-personalizado&#34;&gt;¿Cómo agrego un paso personalizado?&lt;/h2&gt;
&lt;p&gt;Para agregar un nuevo paso personalizado a su fichero &lt;code&gt;jenkins-x.yml&lt;/code&gt;, vea &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/#personalizar-el-pipelines&#34;&gt;cómo utilizar jx create step&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cómo-modifico-un-paso&#34;&gt;¿Cómo modifico un paso?&lt;/h2&gt;
&lt;p&gt;Si hay un paso con nombre en el pipeline que desea modificar, puede agregar las líneas YAML a su fichero &lt;code&gt;jenkins-x.yml&lt;/code&gt; de la siguiente manera:&lt;/p&gt;
&lt;p&gt;En este caso, vamos a reemplazar el paso llamado &lt;code&gt;helm-release&lt;/code&gt; en el pipeline &lt;code&gt;release&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipelineConfig:
  pipelines:
    overrides:
      - pipeline: release
        name: helm-release
        step:
          image: busybox
          sh: echo &amp;#34;this command is replaced&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Puede ver el efecto de este cambio localmente antes de enviarlo a Git mediante el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_syntax_effective/&#34;&gt;jx step syntax effective&lt;/a&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ jx step syntax effective -s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Puede anular etapas enteras o reemplazar un paso específico con un solo paso o una secuencia de pasos. También puede agregar pasos antes/después de otro paso.&lt;/p&gt;
&lt;p&gt;Para obtener más detalles, consulte &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/#specifying-and-overriding-release-pull-request-and-feature-pipelines&#34;&gt;cómo modificar los pasos&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cómo-puedo-modificar-la-imagen-predeterminada-del-contenedor&#34;&gt;¿Cómo puedo modificar la imagen predeterminada del contenedor?&lt;/h2&gt;
&lt;p&gt;Como puede ver arriba, puede modificar cualquier paso en cualquier paquete de compilación; pero también puede modificar la imagen del contenedor utilizada de forma predeterminada en todos los pasos agregando este YAML a su &lt;code&gt;jenkins-x.yml&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipelineConfig:
  agent:
    label: jenkins-go
    container: somerepo/my-container-image:1.2.3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Puede ver el efecto de este cambio localmente antes de enviarlo a Git mediante el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_syntax_effective/&#34;&gt;jx step syntax effective&lt;/a&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ jx step syntax effective -s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Para obtener más detalles, consulte &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/#specifying-and-overriding-release-pull-request-and-feature-pipelines&#34;&gt;cómo modificar los pasos&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cómo-se-comparan-los-pipelines-de-jenkins-x-con-los-pipelines-de-jenkins&#34;&gt;¿Cómo se comparan los pipelines de Jenkins X con los pipelines de Jenkins?&lt;/h2&gt;
&lt;p&gt;Vea las &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/#diferencias-con-los-pipelines-de-jenkins&#34;&gt;diferencias entre los Pipelines de ambos sistemas: Jenkins X y Jenkins&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cómo-obtengo-el-completamiento-de-ide-editando-jenkins-xyml&#34;&gt;¿Cómo obtengo el completamiento de IDE editando &lt;code&gt;jenkins-x.yml&lt;/code&gt;?&lt;/h2&gt;
&lt;p&gt;Vea la guía de IDE para &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/#modificaciones-en-idea&#34;&gt;IDEA&lt;/a&gt; y &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/#modificaciones-en-vs-code&#34;&gt;VS Code&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;qué-variables-de-entorno-están-disponibles-por-defecto-dentro-de-un-pipeline&#34;&gt;¿Qué variables de entorno están disponibles por defecto dentro de un pipeline?&lt;/h2&gt;
&lt;p&gt;Vea las &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/#variables-de-entorno-predeterminadas&#34;&gt;variables de entorno preestablecidas creadas para los pasos de los pipelines&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;hay-alguna-referencia-para-la-sintaxis&#34;&gt;¿Hay alguna referencia para la sintaxis?&lt;/h2&gt;
&lt;p&gt;Vea la &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/&#34;&gt;sintaxis de referencia para los Pipelines de Jenkins x&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cómo-se-monta-un-secret-o-configmap&#34;&gt;¿Cómo se monta un Secret o ConfigMap?&lt;/h2&gt;
&lt;p&gt;Cada paso del pipeline de Jenkins X en el fichero &lt;code&gt;jenkins-x.yml&lt;/code&gt; es básicamente un &lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#container-v1-core&#34;&gt;contenedor&lt;/a&gt; de Kubernetes para que pueda especificar la imagen, los límites de recursos, las variables de entorno y montar &lt;code&gt;ConfigMap&lt;/code&gt; o &lt;code&gt;Secret&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Puede ver un ejemplo de &lt;a href=&#34;https://jenkins-x.io/docs/reference/pipeline-syntax-reference/#full-pipeline-definition-in-jenkins-x-yml&#34;&gt;cómo montar un Secret en una variable de entorno aquí&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si está dentro de un script de shell, también puede usar el comando &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx step credential&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;puedo-montar-un-volumen-persistente-en-mi-pipeline&#34;&gt;¿Puedo montar un volumen persistente en mi pipeline?&lt;/h2&gt;
&lt;p&gt;Tekton ya monta un Persistent Volumen separado para cada pod construido en &lt;code&gt;/workspace&lt;/code&gt;, por lo que los resultados de la compilación se mantienen durante un tiempo hasta que se recolecta la basura.&lt;/p&gt;
&lt;p&gt;En la mayoría de los clústeres de Kubernetes, no puede compartir fácilmente un solo volumen persistente en varios pods; Por lo tanto, tener un PV compartido en varias compilaciones generalmente no es fácil ni compatible. Sin embargo, puede agregar un paso para llenar su PV al inicio desde un bucket de la nube y al final de un pipeline copiar datos en un bucket para acelerar el almacenamiento en caché.&lt;/p&gt;
&lt;p&gt;También puede hacer cosas como utilizar Nexus como caché de red para obtener dependencias de Maven (que ocurre OOTB con las compilaciones de Maven en Jenkins X) o agregar el proxy Athens para Go.&lt;/p&gt;
&lt;p&gt;Esperemos que la comunidad de Tekton encuentre algunas soluciones de almacenamiento en caché aún mejores para acelerar las compilaciones.&lt;/p&gt;
&lt;h2 id=&#34;cómo-defino-una-variable-de-entorno-dentro-de-un-paso-para-otros-pasos&#34;&gt;¿Cómo defino una variable de entorno dentro de un paso para otros pasos?&lt;/h2&gt;
&lt;p&gt;Los archivos son el enfoque más fácil ya que el directorio &lt;code&gt;/workspace&lt;/code&gt; se comparte con todos los pasos. Entonces escriba en un paso y use el valor de otros pasos, etc.&lt;/p&gt;
&lt;p&gt;La otra opción es montar un &lt;code&gt;ConfigMap&lt;/code&gt; como variables de entorno en cada paso y modificarlo en un paso; pero los archivos son realmente más fáciles.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Recursos Personalizados</title>
      <link>https://jenkins-x.io/es/docs/reference/components/custom-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/custom-resources/</guid>
      <description>
        
        
        &lt;p&gt;Kubernetes proporciona un mecanismo de extensión llamado &lt;a href=&#34;https://kubernetes.io/docs/concepts/api-extension/custom-resources/&#34;&gt;Recursos Personalizados&lt;/a&gt; que permite que los microservicios extiendan la plataforma Kubernetes para resolver problemas de orden superior.&lt;/p&gt;
&lt;p&gt;Entonces, en Jenkins X, hemos agregado una serie de Recursos Personalizados para ayudar a ampliar Kubernetes para admitir CI/CD.&lt;/p&gt;
&lt;p&gt;También puede &lt;a href=&#34;https://jenkins-x.io/apidocs/&#34;&gt;navegar por la Referencia de API de Recursos Personalizados&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;environments&#34;&gt;Environments&lt;/h2&gt;
&lt;p&gt;Jenkins X admite de forma nativa los &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos&#34;&gt;entornos&lt;/a&gt; que le permiten ser definidos para su equipo y luego consultarlos a través de &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_environments/&#34;&gt;jx get environments&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get environments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Durante el funcionamiento de ese comando se utiliza el recurso personalizado de Kubernetes &lt;code&gt;Environments&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Por lo tanto, también puede consultar los entornos a través de &lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/overview/&#34;&gt;kubectl&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get environments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O editarlos vía &lt;code&gt;YAML&lt;/code&gt; directamente si lo desea:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl edit env staging
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;aunque puede preferir el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_environment/&#34;&gt;jx edit environment&lt;/a&gt;, que es más fácil.&lt;/p&gt;
&lt;h2 id=&#34;release&#34;&gt;Release&lt;/h2&gt;
&lt;p&gt;Los pipelines de Jenkins X generan el recurso personalizado &lt;code&gt;Release&lt;/code&gt; que podemos utilizar para realizar un seguimiento de:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;qué versión, etiqueta Git y URL Git se asignan a una versión en Kubernetes/Helm&lt;/li&gt;
&lt;li&gt;qué URL y registro pipeline de Jenkins se usaron para realizar el lanzamiento&lt;/li&gt;
&lt;li&gt;qué compromisos, problemas y PR formaron parte de cada lanzamiento para que podamos implementar los &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#retroalimentaci%C3%B3n&#34;&gt;comentarios a medida que los problemas se solucionan en Staging/Production&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sourcerepository&#34;&gt;SourceRepository&lt;/h2&gt;
&lt;p&gt;Esto almacena información sobre los repositorios de código fuente que Jenkins X está configurado para construir.&lt;/p&gt;
&lt;p&gt;Es creado por &lt;code&gt;jx import&lt;/code&gt; y &lt;code&gt;jx create quickstart&lt;/code&gt; y se elimina cada vez que se invoca una &lt;code&gt;jx delete application&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;scheduler&#34;&gt;Scheduler&lt;/h2&gt;
&lt;p&gt;Esto se utiliza para definir una configuración para uno o más &lt;code&gt;SourceRepository&lt;/code&gt; y &lt;code&gt;jx boot&lt;/code&gt; lo usa para generar la configuración de Prow.&lt;/p&gt;
&lt;p&gt;Esto le permite configurar un &lt;code&gt;Scheduler&lt;/code&gt; predeterminado para un equipo y luego no tiene que tocar su configuración de Prow en absoluto; Todos los proyectos importados/creados heredarán del &lt;code&gt;Scheduler&lt;/code&gt; predeterminado.&lt;/p&gt;
&lt;p&gt;O cuando realiza &lt;code&gt;jx import&lt;/code&gt; o &lt;code&gt;jx create quickstart&lt;/code&gt; puede pasar el parámetro de línea de comando &lt;code&gt;--scheduler&lt;/code&gt; para usar un programador específico.&lt;/p&gt;
&lt;h2 id=&#34;pipelineactivity&#34;&gt;PipelineActivity&lt;/h2&gt;
&lt;p&gt;Este recurso almacena el estado del pipeline en términos de etapas de pipelines de Jenkins, más la &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#promoci%C3%B3n&#34;&gt;actividad de promoción&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Este recurso también lo utiliza el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_activities/&#34;&gt;jx get activities&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;team&#34;&gt;Team&lt;/h2&gt;
&lt;p&gt;El recurso personalizado &lt;code&gt;Team&lt;/code&gt; se crea mediante el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_team/&#34;&gt;jx create team&lt;/a&gt; y el controlador &lt;code&gt;team controller&lt;/code&gt; lo utiliza para observar los nuevos recursos &lt;code&gt;Team&lt;/code&gt; para luego crear una instalación de Jenkins X en el namespace del &lt;code&gt;teams&lt;/code&gt;. Para obtener más información sobre los equipos, consulte &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#equipos&#34;&gt;la función del equipo&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;user&#34;&gt;User&lt;/h3&gt;
&lt;p&gt;El recurso personalizado &lt;code&gt;User&lt;/code&gt; se utiliza para admitir RBAC en los distintos &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos&#34;&gt;entornos&lt;/a&gt; y &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;vistas previas de entornos&lt;/a&gt; en equipos.&lt;/p&gt;
&lt;p&gt;También lo utilizan el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_userroles/&#34;&gt;jx edit userroles&lt;/a&gt; para cambiar los roles de usuario.&lt;/p&gt;
&lt;h2 id=&#34;environmentrolebinding&#34;&gt;EnvironmentRoleBinding&lt;/h2&gt;
&lt;p&gt;El recurso &lt;code&gt;EnvironmentRoleBinding&lt;/code&gt; es como el recurso estándar de Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.13/#rolebinding-v1-rbac-authorization-k8s-io&#34;&gt;RoleBinding&lt;/a&gt;, pero permite la asignación de un rol a múltiples &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos&#34;&gt;entornos&lt;/a&gt; y &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;vistas previas de entornos&lt;/a&gt; en un equipo mediante el uso de un selector de entornos en el que se vinculan roles.&lt;/p&gt;
&lt;p&gt;Esto facilita la vinculación de un &lt;code&gt;Role&lt;/code&gt; a todos los entornos, a todos los entornos de vista previa o a ambos o a un conjunto determinado de usuarios.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Tutoriales Google Cloud Alojado</title>
      <link>https://jenkins-x.io/es/docs/managing-jx/tutorials/google-hosted/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/managing-jx/tutorials/google-hosted/</guid>
      <description>
        
        
        &lt;p&gt;Estos tutoriales se pueden utilizar con &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/&#34;&gt;Google Kubernetes Engine&lt;/a&gt; utilizando su función &lt;a href=&#34;https://cloud.google.com/shell/docs/&#34;&gt;Google Cloud Shell&lt;/a&gt; para ayudarte a ponerte en marcha rápidamente.&lt;/p&gt;
&lt;h3 id=&#34;instalando-jx-en-gke&#34;&gt;Instalando JX en GKE&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Tiempo de duración.&lt;/strong&gt; Aproximadamente 25 minutos&lt;/p&gt;
&lt;p&gt;Al finalizar esta guía deberás tener:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;una instalación de JX funcionando en Google Kubernetes Engine&lt;/li&gt;
&lt;li&gt;creada una aplciación de inicio rápido&lt;/li&gt;
&lt;li&gt;promovida esta aplicación a producción&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/cloudshell/open?git_repo=https%3A%2F%2Fgithub.com%2Fjenkins-x%2Fjx-tutorial&amp;amp;page=editor&amp;amp;print=install-guide.txt&amp;amp;tutorial=tutorials%2Finstall-jx-on-gke%2Flesson.md&#34;&gt;&lt;svg height=&#34;54&#34; width=&#34;274&#34;
xmlns=&#34;http://www.w3.org/2000/svg&#34;
version=&#34;1.2&#34;&gt;
&lt;g
transform=&#34;translate(0,-6)&#34;
id=&#34;layer1&#34;&gt;
&lt;rect
width=&#34;266.465&#34;
height=&#34;50.53175&#34;
ry=&#34;4.6644692&#34;
x=&#34;1.7675018&#34;
y=&#34;7.7341251&#34;
id=&#34;rect3101&#34;
style=&#34;fill:#3367d6;fill-opacity:1&#34; /&gt;
&lt;/g&gt;
&lt;g
id=&#34;layer2&#34;&gt;
&lt;text
x=&#34;52.473&#34;
y=&#34;31.976562&#34;
id=&#34;text4303&#34;
xml:space=&#34;preserve&#34;
style=&#34;font-size:13px;font-style:normal;font-weight:normal;line-height:100%;letter-spacing:0px;word-spacing:0px;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Roboto, Sans;user-select: none&#34;&gt;ABRIR EN GOOGLE CLOUD SHELL&lt;/text&gt;
&lt;g
transform=&#34;matrix(1.1349981,0,0,1.1349981,16.464659,15.380023)&#34;
id=&#34;g3949&#34;
style=&#34;fill:#ffffff&#34;&gt;
&lt;path
d=&#34;M 21,2 H 3 C 1.9,2 1,2.9 1,4 v 11.9 c 0,1.1 0.9,2 2,2 h 7 V 20 H 8 v 2 h 8 v -2 h -2 v -2.2 h 7 c 1.1,0 2,-0.9 2,-2 V 4 C 23,2.9 22.1,2 21,2 z m -4,13 h -4 v -2 h 4 v 2 z m 0.1,-4.8 -9.9,4.1 v -2.1 l 7.2,-3.1 -7.2,-3 v -2 l 9.9,4.1 v 2 z&#34;
id=&#34;path3937&#34;
style=&#34;fill:#ffffff&#34; /&gt;
&lt;path
d=&#34;m 10,17.8 h 4 V 20 h -4 z&#34;
id=&#34;path3939&#34;
style=&#34;fill:#ffffff&#34; /&gt;
&lt;path
d=&#34;m 8,20 h 8 v 2 H 8 z&#34;
id=&#34;path3941&#34;
style=&#34;fill:#ffffff&#34; /&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;instalar-jx-en-gke-utilizando-terraform&#34;&gt;Instalar JX en GKE utilizando Terraform&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Tiempo de duración.&lt;/strong&gt; Aproximadamente 30 minutos&lt;/p&gt;
&lt;p&gt;Al finalizar esta guía deberás tener:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;una instalación de JX funcionando en Google Kubernetes Engine utilizando Terraform&lt;/li&gt;
&lt;li&gt;creada una aplciación de inicio rápido&lt;/li&gt;
&lt;li&gt;promovida esta aplicación a producción utilizando prow&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/cloudshell/open?git_repo=https%3A%2F%2Fgithub.com%2Fjenkins-x%2Fjx-tutorial&amp;amp;page=editor&amp;amp;print=install-guide.txt&amp;amp;tutorial=tutorials%2Finstall-jx-on-gke-with-terraform%2Flesson.md&#34;&gt;&lt;svg height=&#34;54&#34; width=&#34;274&#34;
xmlns=&#34;http://www.w3.org/2000/svg&#34;
version=&#34;1.2&#34;&gt;
&lt;g
transform=&#34;translate(0,-6)&#34;
id=&#34;layer1&#34;&gt;
&lt;rect
width=&#34;266.465&#34;
height=&#34;50.53175&#34;
ry=&#34;4.6644692&#34;
x=&#34;1.7675018&#34;
y=&#34;7.7341251&#34;
id=&#34;rect3101&#34;
style=&#34;fill:#3367d6;fill-opacity:1&#34; /&gt;
&lt;/g&gt;
&lt;g
id=&#34;layer2&#34;&gt;
&lt;text
x=&#34;52.473&#34;
y=&#34;31.976562&#34;
id=&#34;text4303&#34;
xml:space=&#34;preserve&#34;
style=&#34;font-size:13px;font-style:normal;font-weight:normal;line-height:100%;letter-spacing:0px;word-spacing:0px;fill:#ffffff;fill-opacity:1;stroke:none;font-family:Roboto, Sans;user-select: none&#34;&gt;ABRIR EN GOOGLE CLOUD SHELL&lt;/text&gt;
&lt;g
transform=&#34;matrix(1.1349981,0,0,1.1349981,16.464659,15.380023)&#34;
id=&#34;g3949&#34;
style=&#34;fill:#ffffff&#34;&gt;
&lt;path
d=&#34;M 21,2 H 3 C 1.9,2 1,2.9 1,4 v 11.9 c 0,1.1 0.9,2 2,2 h 7 V 20 H 8 v 2 h 8 v -2 h -2 v -2.2 h 7 c 1.1,0 2,-0.9 2,-2 V 4 C 23,2.9 22.1,2 21,2 z m -4,13 h -4 v -2 h 4 v 2 z m 0.1,-4.8 -9.9,4.1 v -2.1 l 7.2,-3.1 -7.2,-3 v -2 l 9.9,4.1 v 2 z&#34;
id=&#34;path3937&#34;
style=&#34;fill:#ffffff&#34; /&gt;
&lt;path
d=&#34;m 10,17.8 h 4 V 20 h -4 z&#34;
id=&#34;path3939&#34;
style=&#34;fill:#ffffff&#34; /&gt;
&lt;path
d=&#34;m 8,20 h 8 v 2 H 8 z&#34;
id=&#34;path3941&#34;
style=&#34;fill:#ffffff&#34; /&gt;
&lt;/g&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Crear Camel</title>
      <link>https://jenkins-x.io/es/docs/using-jx/creating/create-camel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/using-jx/creating/create-camel/</guid>
      <description>
        
        
        &lt;p&gt;Si desea crear un nuevo microservicio Spring Boot usando &lt;a href=&#34;http://camel.apache.org/&#34;&gt;Apache Camel&lt;/a&gt;, puede utilizar el comando &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx create camel&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create camel
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego se le solicita el nombre del proyecto.&lt;/p&gt;
&lt;p&gt;Si lo desea, puede especificar esto en la línea de comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create camel -a myapp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;qué-sucede-cuando-creas-un-microservicio-de-camel&#34;&gt;¿Qué sucede cuando creas un microservicio de Camel?&lt;/h3&gt;
&lt;p&gt;Una vez que haya elegido el proyecto a crear y le haya dado un nombre, los siguientes pasos se automatizarán para usted:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;crea un nuevo microservicio Camel en un subdirectorio&lt;/li&gt;
&lt;li&gt;adiciona su código fuente a un repositorio Git&lt;/li&gt;
&lt;li&gt;crea un repositorio Git remoto en un servidor Git como por ejemplo &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;empuja el código local al repositorio remoto Git&lt;/li&gt;
&lt;li&gt;adiciona los siguientes ficheros:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para construir su aplicación en una imagen Docker&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; para implementar el pipeline CI/CD&lt;/li&gt;
&lt;li&gt;chart Helm para ejecutar la aplicación dentro de Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;registra un enlace en el repositorio remoto Git y sus equipos en Jenkins&lt;/li&gt;
&lt;li&gt;adiciona el repositorio Git a sus equipos en Jenkins&lt;/li&gt;
&lt;li&gt;desencadena el primer pipeline&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Decisiones</title>
      <link>https://jenkins-x.io/es/docs/reference/components/decisions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/decisions/</guid>
      <description>
        
        
        &lt;h1 id=&#34;decisiones&#34;&gt;Decisiones&lt;/h1&gt;
&lt;p&gt;Jenkins X es una experiencia de desarrollo basada en opiniones de expertos, aquí explicaremos los antecedentes y las decisiones que hemos tomado para ayudar a explicar las razones de estas opiniones. También puede consultar la página &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/decisions/&#34;&gt;Accelerate&lt;/a&gt; para obtener detalles sobre cómo Jenkins X implementa las competencias recomendadas por este libro.&lt;/p&gt;
&lt;h2 id=&#34;kubernetes&#34;&gt;Kubernetes&lt;/h2&gt;
&lt;p&gt;Primero es por qué Jenkins X se centra exclusivamente en Kubernetes y solo está destinado a ejecutarse en él.&lt;/p&gt;
&lt;p&gt;Kubernetes ha ganado las guerras de la nube, cada proveedor importante de la nube ahora es compatible con Kubernetes o está trabajando activamente en una solución de Kubernetes. Google, Microsoft, Amazon, Red Hat, Oracle, IBM, Alibaba, Digital Ocean, Docker, Mesos y Cloud Foundry, por nombrar algunos. Ahora tenemos una plataforma de despliegues hacia donde apuntar y para desarrollar aplicaciones portables de primera clase.&lt;/p&gt;
&lt;p&gt;El ecosistema de Kubernetes es rico en innovación y con una comunidad vibrante, innovadora y diversa de código abierto que invita sola, la cual sugiere grandes cosas para todos los involucrados.&lt;/p&gt;
&lt;p&gt;Jenkins X recomienda usar clústeres de Kubernetes administrados en la nube pública siempre que sea posible. GKE, AKS y EKS ofrecen servicios gestionados de Kubernetes, lo que reduce drásticamente el riesgo de instalar, actualizar y mantener su clúster de Kubernetes para que pueda concentrarse en desarrollar un código increíble.&lt;/p&gt;
&lt;p&gt;es decir, permite que las personas que saben cómo ejecutar contenedores y administrar clústeres a escala puedan concentrarse en agregar valor a su negocio.&lt;/p&gt;
&lt;h2 id=&#34;draft&#34;&gt;Draft&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://draft.sh&#34;&gt;Draft&lt;/a&gt; tiene algunas capacidades, pero Jenkins X solo usa la función de detección de idioma y la creación de paquetes. Jenkins X mantiene sus propios &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;paquetes de draft&lt;/a&gt;  diseñados para ejecutarse con Jenkins X.&lt;/p&gt;
&lt;p&gt;Draft proporciona una excelente manera de iniciar un proyecto de código fuente con el paquete necesario para ejecutar la aplicación en Kubernetes.&lt;/p&gt;
&lt;p&gt;El proyecto Draft vino de Deis, que fue adquirida por Microsoft y continúa invirtiendo y evolucionando su historia de desarrollador de Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;helm&#34;&gt;Helm&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://helm.sh&#34;&gt;Helm&lt;/a&gt; proporciona el paquete de plantillas para ejecutar aplicaciones en Kubernetes. Hemos recibido comentarios mixtos de nuestro uso de Helm. Desde nuestra experiencia, poder crear plantillas y componer múltiples Helm Charts juntos ha sido un hallazgo muy bien recibido. Esto condujo a nuestro uso de Helm para componer, instalar y actualizar entornos completos y poder anteponer valores fácilmente como el número de réplicas o los límites de recursos de aplicaciones por entorno, por ejemplo.&lt;/p&gt;
&lt;p&gt;Las plantillas OpenShift tenían como objetivo hacer algo similar, sin embargo, son específicas de OpenShift.&lt;/p&gt;
&lt;p&gt;Muchas de las preocupaciones con Helm se están abordando con la actualización de la versión principal de Helm 3. Eliminar el uso de Tiller, el componente del lado del servidor de Helm, es una gran victoria, ya que se considera inseguro debido a los permisos elevados que necesita para ejecutarse. Jenkins X &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/helm3/&#34;&gt;proporciona una forma&lt;/a&gt; de usar la versión beta de Helm 3 para las personas que deseen probar esto en su lugar, lo estamos utilizando nosotros mismos y hasta ahora está funcionando muy bien. Si hay problemas, nos gustaría enviar comentarios al proyecto Helm para que podamos ayudarlos a llegar a GA antes.&lt;/p&gt;
&lt;p&gt;El proyecto Helm vino de Deis, que fue adquirido por Microsoft y continúa invirtiendo y evolucionando su historia de desarrollador de Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;skaffold&#34;&gt;Skaffold&lt;/h2&gt;
&lt;p&gt;Jenkins X utiliza &lt;a href=&#34;https://github.com/GoogleContainerTools/skaffold&#34;&gt;Skaffold&lt;/a&gt; para realizar las acciones de construcción y empuje de imagen en un pipeline. Skaffold nos permite implementar diferentes servicios de creación de imágenes y de registros como &lt;a href=&#34;https://cloud.google.com/container-builder/&#34;&gt;Google Container Builder&lt;/a&gt;, &lt;a href=&#34;https://github.com/Azure/acr-builder&#34;&gt;Azure Container Builder&lt;/a&gt; y &lt;a href=&#34;https://aws.amazon.com/ecr/&#34;&gt;ECR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para las personas que no trabajan en una nube pública con el generador de contenedores o los servicios de registro, Skaffold también puede trabajar con &lt;a href=&#34;https://github.com/GoogleContainerTools/kaniko&#34;&gt;kaniko&lt;/a&gt;, esto permite a los pipelines construir imágenes de Docker utilizando contenedores sin raíz. Esto es significativamente más seguro que montar el socket de Docker desde cada nodo en el clúster.&lt;/p&gt;
&lt;h2 id=&#34;jenkins&#34;&gt;Jenkins&lt;/h2&gt;
&lt;p&gt;Jenkins, ¿por qué una gran JVM que no está altamente disponible? Puede parecer una sorpresa ésta selección como el motor de pipelines para usar en la nube, sin embargo, la adopción de Jenkins por parte de los desarrolladores y la comunidad que tiene significa que es ideal para usar y evolucionar su propia historia nativa de la nube. Jenkins X ya genera definiciones de recursos personalizados de Kubernetes para actividades en los pipelines que utilizan nuestras las herramientas IDE y CLI en lugar de consultar a Jenkins. Almacenaremos construcciones y ejecuciones de Jenkins en Kubernetes en lugar de en &lt;code&gt;$JENKINS_HOME&lt;/code&gt;, lo que significa que podemos escalar los maestros de Jenkins. También estamos cambiando a Prow para interceptar eventos de webhook de Git en lugar de utilizar Jenkins, esto significa que podemos tener una solución altamente disponible, así como entregar la programación de construcciones a Kubernetes.&lt;/p&gt;
&lt;p&gt;TL;DR estamos moviendo muchas de las funcionalidades del master de Jenkins a la plataforma Kubernetes.&lt;/p&gt;
&lt;p&gt;Tomar este enfoque también significa que podremos habilitar otros motores de pipelines en el futuro.&lt;/p&gt;
&lt;h2 id=&#34;prow&#34;&gt;Prow&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow&#34;&gt;Prow&lt;/a&gt; maneja eventos Git y puede desencadenar flujos de trabajo en Kubernetes.&lt;/p&gt;
&lt;p&gt;Prow puede ejecutarse en un modo de alta disponibilidad donde existen múltiples pods para una URL de entrada de webhook. A diferencia de Jenkins, si realiza una actualización, Jenkins tiene un tiempo de inactividad en el que se pueden perder los eventos de webhook. Esto está en nuestros planes futuros y esperamos tenerlo disponible pronto.&lt;/p&gt;
&lt;h2 id=&#34;nexus&#34;&gt;Nexus&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://help.sonatype.com/repomanager3&#34;&gt;Nexus&lt;/a&gt; es una JVM con sobrepeso que recientemente se mudó a OSGi, sin embargo, hace el trabajo que necesitamos. Dependencias de caché para compilaciones más rápidas y proporciona un repositorio compartido donde los equipos pueden compartir sus artefactos liberados.&lt;/p&gt;
&lt;p&gt;Si alguien desarrollara un servidor de repositorio de artefactos de código abierto en un lenguaje más amigable para la nube como Go, entonces Jenkins X probablemente cambiaría para ahorrar en facturas en la nube.&lt;/p&gt;
&lt;p&gt;En este momento, Jenkins X no utiliza el registro de Docker de Nexus. La razón principal fue que necesitábamos hacer un trabajo para configurar las definiciones de pod con secretos de extracción de imágenes para que podamos utilizar el registro autenticado. Sin embargo, nuestro enfoque recomendado es cambiar al uso de registros de proveedores de nube nativos como &lt;a href=&#34;https://aws.amazon.com/ecr/&#34;&gt;ECR de Amazon&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/container-registry/&#34;&gt;Google Container Registry&lt;/a&gt; o DockerHub, por ejemplo, con la ayuda de Skaffold.&lt;/p&gt;
&lt;h2 id=&#34;docker-registry&#34;&gt;Docker registry&lt;/h2&gt;
&lt;p&gt;Como se indicó anteriormente, no tenemos la intención de usar &lt;a href=&#34;https://github.com/kubernetes/charts/tree/master/stable/docker-registry&#34;&gt;este registro&lt;/a&gt; a largo plazo, ya que preferimos usar registros de proveedores de la nube como &lt;a href=&#34;https://aws.amazon.com/ecr/&#34;&gt;ECR de Amazon&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/container-registry/&#34;&gt;Google Container Registry&lt;/a&gt; o Dockerhub, por ejemplo, con la ayuda de Skaffold.&lt;/p&gt;
&lt;h2 id=&#34;chartmuseum&#34;&gt;ChartMuseum&lt;/h2&gt;
&lt;p&gt;Al momento de crear Jenkins X, había pocas opciones de cómo publicar Helm Charts, la comunidad de Kubernetes usa páginas de GitHub, pero queríamos encontrar una solución que funcione para las personas que usan cualquier proveedor de Git. &lt;a href=&#34;https://github.com/kubernetes-helm/chartmuseum&#34;&gt;ChartMuseum&lt;/a&gt; está escrito en Go, por lo que funciona bien en la nube, admite múltiples almacenamiento en la nube y funciona muy bien con Monocular.&lt;/p&gt;
&lt;h2 id=&#34;monocular&#34;&gt;Monocular&lt;/h2&gt;
&lt;p&gt;Usamos &lt;a href=&#34;https://github.com/kubernetes-helm/monocular&#34;&gt;Monocular&lt;/a&gt; para descubrir las aplicaciones publicadas de nuestros equipos, podríamos usar KubeApps de forma predeterminada si la comunidad lo prefiere, pero habilitaremos KubeApps como complemento independientemente.&lt;/p&gt;
&lt;h2 id=&#34;git&#34;&gt;Git&lt;/h2&gt;
&lt;p&gt;Jenkins X solo trabaja con Git. Hay muchas dependencias e implementaciones de clientes que Jenkins X ya necesita admitir para diferentes proveedores de Git, no escuchamos suficiente demanda para admitir otros sistemas de control de versiones, por lo que por ahora Jenkins X está vinculado a Git.&lt;/p&gt;
&lt;h2 id=&#34;programming-languages&#34;&gt;Programming languages&lt;/h2&gt;
&lt;p&gt;Jenkins X tiene como objetivo ayudar a proporcionar el nivel adecuado de comentarios para que los desarrolladores entiendan cómo funcionan sus aplicaciones y brindarles formas fáciles de experimentar con otros lenguajes que puedan adaptarse mejor a la función y a ejecutarse en la nube. Por ejemplo, hay muchas organizaciones basadas en Java que solo saben cómo escribir, ejecutar y mantener aplicaciones Java. Java es extremadamente intensivo en recursos en comparación con Golang, Rust, Swift, NodeJS, por nombrar algunos, esto genera facturas en la nube mucho más altas cada mes. Con Jenkins X, nuestro objetivo es ayudar a los desarrolladores a experimentar con otras opciones utilizando inicios rápidos y complementos de métricas como Grafana y Prometheus para ver cómo se comportan en la nube.&lt;/p&gt;
&lt;p&gt;Por ejemplo, cualquier microservicio nuevo que creemos en el proyecto Jenkins X tiende a estar en Golang o NodeJS dado el enorme efecto que tiene en nuestra facturación en la nube. Lleva tiempo cambiar a un nuevo lenguaje de programación, pero con Jenkins X esperamos poder mitigar un gran riesgo utilizando inicios rápidos, CI/CD automatizados y una forma relativamente consistente de trabajar en todos los idiomas.&lt;/p&gt;
&lt;h3 id=&#34;maven&#34;&gt;Maven&lt;/h3&gt;
&lt;p&gt;Maven tiene algunas herramientas que mucha gente está acostumbrada a usar y que no se adaptan particularmente bien al CD. Por ejemplo, el &lt;a href=&#34;http://maven.apache.org/maven-release/maven-release-plugin/&#34;&gt;plugin de liberación de Maven&lt;/a&gt; versionará un proyecto y se comprometerá directamente a dominar la nueva versión SNAPSHOT que en el mundo de CD desencadenaría otra versión que resultaría en un bucle recursivo.&lt;/p&gt;
&lt;p&gt;Para proyectos Java, Jenkins X usa la versión &lt;a href=&#34;https://www.mojohaus.org/versions-maven-plugin/set-mojo.html&#34;&gt;maven version:set plugin&lt;/a&gt; para actualizar todos los poms en un proyecto usando la próxima versión de lanzamiento siguiendo el paso #Versioning mencionado anteriormente.&lt;/p&gt;
&lt;p&gt;Si se necesita un nuevo incremento de versión mayor o menor, los usuarios pueden crear una nueva etiqueta Git con el nuevo número mayor/menor y Jenkins X lo respetará. Alternativamente, puede actualizar el padre &lt;code&gt;pom.xml&lt;/code&gt; y cualquier archivo pom hijo él mismo y Jenkins X detectará y usará la nueva versión mayor o menor.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Diagrama</title>
      <link>https://jenkins-x.io/es/docs/concepts/diagram/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/concepts/diagram/</guid>
      <description>
        
        
        &lt;p&gt;Existen varias arquitecturas basadas en cómo elige instalar Jenkins X. A continuación, le mostramos dos arquitecturas comunes.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/ArchitectureStaticJenkins.png&#34;/&gt;
&lt;figcaption&gt;
&lt;h5&gt;La arquitectura muestra un despliegue con una instancia estática de Jenkins&lt;/h5&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/ArchitectureServerlessJenkins.png&#34;/&gt;
&lt;figcaption&gt;
&lt;h5&gt;La arquitectura muestra un despliegue sin servidor (serverless) utilizando los Pipelines de Tekton&lt;/h5&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Preguntas Generales</title>
      <link>https://jenkins-x.io/es/docs/overview/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/overview/faq/</guid>
      <description>
        
        
        &lt;p&gt;Hemos tratado de recopilar problemas comunes aquí con soluciones alternativas. Si su problema no figura aquí, &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new&#34;&gt;háganoslo saber&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;es-jenkins-x-un-proyecto-de-código-abierto&#34;&gt;¿Es Jenkins X un proyecto de código abierto?&lt;/h2&gt;
&lt;p&gt;¡Si! Todo el código fuente y los artefactos de Jenkins X son de código abierto; ¡Apache o MIT y siempre lo serán!&lt;/p&gt;
&lt;h2 id=&#34;cómo-se-compara-jenkins-x-con-jenkins&#34;&gt;¿Cómo se compara Jenkins X con Jenkins?&lt;/h2&gt;
&lt;p&gt;Jenkins X proporciona &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#pipelines-automatizados&#34;&gt;flujos automatizados CI/CD&lt;/a&gt; para aplicaciones en Kubernetes con &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#promoci%C3%B3n&#34;&gt;promoción GitOps a través de entornos&lt;/a&gt; y &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos-de-vista-previa&#34;&gt;vista previa de entornos en PR&lt;/a&gt;. (Vea &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/&#34;&gt;las funcionalidades para más detalles&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Jenkins es un servidor de CI/CD de propósito general que se puede configurar para hacer lo que desee agregando complementos (plugins), cambiando la configuración y escribiendo sus propios flujos de actividades (pipelines).&lt;/p&gt;
&lt;p&gt;En Jenkins X, solamente con la &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/&#34;&gt;instalación de Jenkins X&lt;/a&gt; se configuran automáticamente un grupo de herramientas como Helm, registro de docker, Nexus, etc. Luego puede &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/common-tasks/create-spring/&#34;&gt;crear&lt;/a&gt; / &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;importar&lt;/a&gt; proyectos y obtendrá el flujo CI/CD completamente automatizado junto con las vistas previas. Esto permitirá que sus desarrolladores se concentren en crear aplicaciones mientras usted delega en Jenkins X la administración de su CI+CD.&lt;/p&gt;
&lt;p&gt;Jenkins X admite diferentes motores de ejecución; puede orquestar un servidor Jenkins por equipo reutilizando Jenkins en un contenedor docker. Sin embargo, cuando utilizamos los &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/&#34;&gt;Pipelines de Jenkins X sin servidor&lt;/a&gt;, utilizamos &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; en lugar de Jenkins como motor de los flujos CI/CD para proporcionar una arquitectura nativa en la nube, moderna y de alta disponibilidad.&lt;/p&gt;
&lt;h2 id=&#34;es-jenkins-x-una-bifurcación-de-jenkins&#34;&gt;¿Es Jenkins X una bifurcación de Jenkins?&lt;/h2&gt;
&lt;p&gt;¡No! Jenkins X puede orquestar el servidor Jenkins reutilizándolo dentro de un contenedor y configurándolo para que sea lo más nativo posible.&lt;/p&gt;
&lt;p&gt;Sin embargo, cuando utilizamos los &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/&#34;&gt;Pipelines de Jenkins X sin servidor (serverless)&lt;/a&gt;, utilizamos &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; en lugar de Jenkins como el motor de CI/CD para proporcionar una arquitectura nativa en la nube, moderna y de alta disponibilidad.&lt;/p&gt;
&lt;h2 id=&#34;por-qué-crear-un-subproyecto&#34;&gt;¿Por qué crear un subproyecto?&lt;/h2&gt;
&lt;p&gt;Somos grandes admiradores de &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt; y de la nube. Creemos que es el enfoque futuro a largo plazo para ejecutar software para muchas personas.&lt;/p&gt;
&lt;p&gt;Sin embargo, mucha gente todavía querrá ejecutar Jenkins de la manera regular de jenkins a través de: &lt;code&gt;java -jar jenkins.war&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Entonces, la idea del subproyecto Jenkins X es centrarse al 100% en el caso de uso de Kubernetes y Cloud Native y dejar que el proyecto principal de Jenkins se enfoque en el enfoque clásico de Java.&lt;/p&gt;
&lt;p&gt;Una de las grandes fortalezas de Jenkins siempre ha sido su flexibilidad y su enorme ecosistema de diferentes
complementos y capacidades. El subproyecto Jenkins X por separado ayuda a la comunidad a iterar e ir rápido
mejorando tanto el Cloud Native como las distribuciones clásicas de Jenkins en paralelo.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Preguntas sobre Boot</title>
      <link>https://jenkins-x.io/es/docs/managing-jx/faq/boot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/managing-jx/faq/boot/</guid>
      <description>
        
        
        &lt;p&gt;Para ampliar los detalles vea cómo utilizar &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/&#34;&gt;jx boot&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cómo-actualizo-boot&#34;&gt;¿Cómo actualizo boot?&lt;/h2&gt;
&lt;p&gt;Si está utilizando &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/&#34;&gt;jx boot&lt;/a&gt; puede habilitar las &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/#actualizaciones-autom%C3%A1ticas&#34;&gt;actualizaciones automáticas&lt;/a&gt; o puedes &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/#actualizaciones-manuales&#34;&gt;hacerlas manualmente&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si en algún momento algo va mal (p.ej, se borra el clúster, el namespace o Tekton), siempre puede volver a ejecutar &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/&#34;&gt;jx boot&lt;/a&gt; en su laptop para restaurar el clúster.&lt;/p&gt;
&lt;h2 id=&#34;cómo-adiciono-más-recursos&#34;&gt;¿Cómo adiciono más recursos?&lt;/h2&gt;
&lt;p&gt;Adicione recursos (p.ej, &lt;code&gt;Ingress, ConfigMap, Secret&lt;/code&gt;) a su entorno de desarrollo en como ficheros YAML al directorio boot &lt;code&gt;env/templates&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cómo-adiciono-un-nuevo-entorno&#34;&gt;¿Cómo adiciono un nuevo Entorno?&lt;/h2&gt;
&lt;p&gt;Agregue un nuevo recurso &lt;code&gt;SourceRepository&lt;/code&gt; y &lt;code&gt;Environment&lt;/code&gt; a la carpeta &lt;code&gt;env/templates&lt;/code&gt; para cada nuevo entorno que desee crear. Actualmente solo hemos agregado &lt;code&gt;dev, staging, production&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Desde su clúster en ejecución, siempre puede tomar el recurso &lt;code&gt;SourceRepository&lt;/code&gt; and &lt;code&gt;Environment&lt;/code&gt; a través de lo siguiente (donde XXX es el nombre del repositorio de Staging devuelto a través de &lt;code&gt;kubectl get sr&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl get env staging -oyaml &amp;gt; env/templates/myenv.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl get sr XXX -oyaml &amp;gt; env/templates/myenv-sr.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;luego modifique el YAML para adaptarlo, cambiando los nombres de los recursos para evitar chocar con su repositorio de Staging.&lt;/p&gt;
&lt;h2 id=&#34;cómo-administrar-los-recursos-sourcerepository&#34;&gt;¿Cómo administrar los recursos SourceRepository?&lt;/h2&gt;
&lt;p&gt;Vea cómo actualizar su &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/how-it-works/#repositorio-de-origen&#34;&gt;configuración boot con los últimos recursos SourceRepository&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cómo-enlazo-sourcerepository-a-un-scheduler-personalizado&#34;&gt;¿Cómo enlazo SourceRepository a un Scheduler personalizado?&lt;/h2&gt;
&lt;p&gt;Debe asignar su &lt;code&gt;SourceRepository&lt;/code&gt; a un &lt;code&gt;Scheduler&lt;/code&gt; especificando &lt;code&gt;--scheduler&lt;/code&gt; cuando utilice los comandos &lt;code&gt;jx create quickstart / jx import&lt;/code&gt; en su repositorio o modifique el &lt;code&gt;spec.scheduler.name&lt;/code&gt; de &lt;code&gt;SourceRepository&lt;/code&gt; del CRD en su repositorio Git de desarrollo o especificando un programador predeterminado diferente en el &lt;code&gt;dev environment.spec.teamSettings.defaultScheduler.name&lt;/code&gt; luego la próxima vez que se genere la configuración de prow (en el comando &lt;code&gt;jx create quickstart / jx import / jx boot&lt;/code&gt; actualizará la configuración de prow para usar su programador.&lt;/p&gt;
&lt;p&gt;Consulte también &lt;a href=&#34;https://jenkins-x.io/docs/resources/faq/using/chatops/#how-do-i-add-multiple-parallel-pipelines-to-a-project&#34;&gt;¿Cómo agrego múltiples pipelines paralelas a un proyecto?&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;cómo-adiciono-charts-en-jekins-x&#34;&gt;¿Cómo adiciono charts en Jekins X?&lt;/h2&gt;
&lt;p&gt;Dependerá de en cuál namespaces desea instalar el chart.&lt;/p&gt;
&lt;p&gt;Si está en el entorno de desarrollo (el namespace &lt;code&gt;jx&lt;/code&gt; por defecto), entonces &lt;code&gt;env/requirements.yaml&lt;/code&gt; es donde agregar el chart y para un chart &lt;code&gt;foo&lt;/code&gt; puede agregar &lt;code&gt;env/foo/values.yaml&lt;/code&gt; para configurarlo. (o &lt;code&gt;env/foo/values.tmpl.yaml&lt;/code&gt; si desea utilizar algunas &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/how-it-works/#improvements-to-values-yaml&#34;&gt;plantillas&lt;/a&gt; con ficheros &lt;code&gt;values.yaml&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Sin embargo, si desea que nuestro chart esté en otro namespace, entonces usamos la convención de agregar una carpeta en el directorio &lt;code&gt;system&lt;/code&gt;, en la configuración boot (por ejemplo, como lo hacemos para las entradas, administrador de certificados, velero, malla de servicio, etc.). Entonces, cree una nueva carpeta &lt;code&gt;system&lt;/code&gt;  y agregue el paso &lt;code&gt;jx step helm apply&lt;/code&gt; en el pipeline en &lt;code&gt;jenkins-x.yml&lt;/code&gt; como lo hacemos para &lt;code&gt;cert-manager&lt;/code&gt;, &lt;code&gt;nginx&lt;/code&gt;, &lt;code&gt;velero&lt;/code&gt;, etc.&lt;/p&gt;
&lt;h2 id=&#34;cómo-desactivo-el-controlador-de-entrada&#34;&gt;¿Cómo desactivo el controlador de Entrada?&lt;/h2&gt;
&lt;p&gt;Si ya tiene su propio controlador de Entrada y no desea que &lt;code&gt;jx boot&lt;/code&gt; instale otro, simplemente puede eliminar el paso &lt;code&gt;install-nginx-controller&lt;/code&gt; en el repositorio Git de su entorno de desarrollo. p.ej. &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/jenkins-x.yml#L85-L99&#34;&gt;elimine este paso&lt;/a&gt; del fichero &lt;code&gt;jenkins-x.yml&lt;/code&gt; en el repositorio Git de su entorno de desarrollo.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Preguntas sobre ChatOps</title>
      <link>https://jenkins-x.io/es/docs/using-jx/faq/chatops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/using-jx/faq/chatops/</guid>
      <description>
        
        
        &lt;h2 id=&#34;qué-es-chatops&#34;&gt;¿Qué es ChatOps?&lt;/h2&gt;
&lt;p&gt;Usamos la frase &lt;em&gt;ChatOps&lt;/em&gt; para referirnos a los cambios en el código operativo y la promoción de GitOps a través del chat. Más específicamente, esto generalmente se hace comentando los Pull Requests en el sitio web de su proveedor de Git; aunque en el futuro esto podría ser a través de Slack o consolas web también.&lt;/p&gt;
&lt;h2 id=&#34;cuáles-son-los-beneficios-de-chatops&#34;&gt;¿Cuáles son los beneficios de ChatOps?&lt;/h2&gt;
&lt;p&gt;ChatOps ayuda a los desarrolladores a colaborar en los PR y acelera la mezcla de los PR. Queremos poder mezclar los cambios lo más rápido posible en la rama master para que podamos integrar continuamente el código y minimizar las desventajas de las ramas a largo plazo.&lt;/p&gt;
&lt;p&gt;ChatOps (y &lt;a href=&#34;#qu%C3%A9-hace-hook&#34;&gt;tide en particular&lt;/a&gt;) también ayuda a automatizar y acelerar las tareas, p.ej.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;los desarrolladores no tienen que seguir presionando recargar en una página de PR esperando que se pasen todas las pruebas para que puedan hacer clic en &lt;code&gt;Merge&lt;/code&gt;. Simplemente agregue un comentario &lt;code&gt;/lgtm&lt;/code&gt; o apruebe la revisión del código y el PR se fusionará automáticamente una vez que sus pruebas se vuelvan verdes. ¡Esto también evita que los desarrolladores presionen accidentalmente el botón &lt;code&gt;Merge&lt;/code&gt; antes de que pasen todas las pruebas!&lt;/li&gt;
&lt;li&gt;todas los PR se vuelven a clasificar automáticamente y se prueban contra la rama master antes de mezclarsse, lo que garantiza que no rompamos la rama master accidentalmente&lt;/li&gt;
&lt;li&gt;la mezcla por lotes de los PR es compatible para acelerar la mezcla de los PRs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para ampliar los detalles vea &lt;a href=&#34;#qu%C3%A9-hace-hook&#34;&gt;qué es lo que tide hace&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;qué-tipos-de-webhook-admiten-chatops&#34;&gt;¿Qué tipos de webhook admiten ChatOps?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt; y &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; admiten webhooks y ChatOps, mientras que Jenkins solo admite webhooks.&lt;/p&gt;
&lt;h2 id=&#34;cómo-vuelvo-a-activar-un-pr-de-un-pipeline&#34;&gt;¿Cómo vuelvo a activar un PR de un pipeline?&lt;/h2&gt;
&lt;p&gt;Si un pipeline falla debido a algún error de compilación o falla en la prueba, corrija el código y envíe sus cambios y el pipeline del PR se volverá a ejecutar.&lt;/p&gt;
&lt;p&gt;Si cree que el pipeline falló debido a alguna razón de infraestructura temporal, puede usar ChatOps para reactivar el pipeline comentando el PR:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/retest&lt;/code&gt; vuelve a ejecutar solamente los pipelines fallidos.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/test all&lt;/code&gt; vuelve a a ejecutar todos los pipelines fallidos.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/test foo&lt;/code&gt; vuelve a ejecutar todos los pipelines con nombre &lt;code&gt;foo&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tenga en cuenta que debe estar en el archivo &lt;code&gt;OWNERS&lt;/code&gt; como &lt;a href=&#34;#por-qu%C3%A9-un-pull-request-no-tiene-un-pipeline-activado&#34;&gt;aprobador para que esto funcione&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cómo-agrego-múltiples-pipelines-paralelos-a-un-proyecto&#34;&gt;¿Cómo agrego múltiples pipelines paralelos a un proyecto?&lt;/h2&gt;
&lt;p&gt;Puede ser útil tener varios pipelines para realizar diferentes tipos de pruebas de ejecución prolongada en PR. p.ej. ejecutar el mismo conjunto de pruebas utilizando diferentes bases de datos, configuraciones de microservicios o infraestructura subyacente.&lt;/p&gt;
&lt;p&gt;En Jenkins X puede crear un recurso personalizado &lt;code&gt;Scheduler&lt;/code&gt; en su configuración &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/&#34;&gt;jx boot&lt;/a&gt;, en el fichero &lt;code&gt;env/templates/myscheduler.yaml&lt;/code&gt;, que puede agregar múltiples contextos con nombre en la sección &lt;code&gt;presubmits&lt;/code&gt;. Luego, para cada nombre de contexto, asegúrese de tener un fichero llamado &lt;code&gt;jenkins-x-${context}.yml&lt;/code&gt; en su proyecto.&lt;/p&gt;
&lt;p&gt;Entonces Jenkins X invocará cada contexto a pedido a través de &lt;code&gt;/test mycontext&lt;/code&gt; o automáticamente si habilita &lt;code&gt;alwaysRun: true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Puede ver cómo definimos muchos &lt;a href=&#34;https://github.com/jenkins-x/environment-tekton-weasel-dev/blob/f377a72498282de9ee49b807b4d5ba74321a4fab/env/templates/jx-versions-scheduler.yaml#L18&#34;&gt;contextos de prueba paralelas en la secuencia de versiones aquí&lt;/a&gt;, que todos se ejecutan en paralelo e informan su estado en cada PR en la &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/version-stream/&#34;&gt;secuencia de versiones&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Consulte también &lt;a href=&#34;https://jenkins-x.io/docs/resources/faq/setup/#how-do-i-map-sourcerepository-to-a-custom-scheduler&#34;&gt;¿Cómo asigno SourceRepository a un Scheduler personalizado?&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;qué-hace-hook&#34;&gt;¿Qué hace hook?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hook&lt;/code&gt; es el nombre del microservicio en &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt; y el enlace http en &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; que escucha los webhooks provenientes de su proveedor Git que luego se procesa como un comando ChatOps o como un disparador de un pipeline.&lt;/p&gt;
&lt;h2 id=&#34;qué-hace-tide&#34;&gt;¿Qué hace tide?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tide&lt;/code&gt; es un microservicio en &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; que periódicamente consulta los Pull Request abiertos en los repositorios que ha importado a Jenkins X. Luego realiza la siguiente lógica:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;si un PR ha pasado todas sus pruebas de revisión + CI (p.ej, ha aplicado las etiquetas &lt;code&gt;approved&lt;/code&gt; y/o &lt;code&gt;lgtm&lt;/code&gt; o ha pasado una revisión del código github) y es verde y se basa en la rama master, se mezcla automáticamente.&lt;/li&gt;
&lt;li&gt;si un PR ha pasado todas sus pruebas de revisión + CI pero no se basa en la rama master, sus pipelines se vuelven a activar en función de la rama master para garantizar que el PR sea válido si se mezclara.&lt;/li&gt;
&lt;li&gt;si el procesamiento por lotes está habilitado y hay varias PRs pendientes que están aprobadas y en verde, se activa un pipeline de lote que mezcla múltiples PRs en un solo cambio: si todas esos pipelines se vuelven verdes, todas las PRs se mezclan a la vez y se cierran . Esto acelera enormemente las mezclas de múltiples PRs (ya que evita volver a activar las pruebas de cada RP después de fusionar cada una).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cómo-puedo-hacer-chatops-ha&#34;&gt;¿Cómo puedo hacer ChatOps HA?&lt;/h2&gt;
&lt;p&gt;Para hacer que ChatOps sea altamente accesible, amplíe los despliegues que escuchan las solicitudes http hasta, por ejemplo, 3 réplicas.&lt;/p&gt;
&lt;p&gt;Cuando se utiliza &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; significa modificar las réplicas para el despliegue de &lt;code&gt;lighthouse&lt;/code&gt;. p.ej. en su repositorio git &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/&#34;&gt;boot&lt;/a&gt; intente cambiar el fichero &lt;code&gt;env/lighthouse/values.tmpl.yaml&lt;/code&gt; a:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;replicaCount&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cuando utilice &lt;a href=&#34;https://jenkins-x.io/es/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt;, debe escalar los servicios &lt;code&gt;hook&lt;/code&gt; y &lt;code&gt;pipelinerunner&lt;/code&gt;. p.ej. en su repositorio Git boot intente cambiar el fichero &lt;code&gt;env/prow/values.tmpl.yaml&lt;/code&gt; a:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;hook&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;replicaCount&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;pipelinerunner&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;replicaCount&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;debo-usar-prow-o-lighthouse&#34;&gt;¿Debo usar prow o lighthouse?&lt;/h2&gt;
&lt;p&gt;Si está utilizando un servidor Git que no sea &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt;, le recomendamos &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si está utilizando &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt; recomendamos por ahora &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt;, ya que ha tenido más pruebas que &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aunque &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; es nuestra dirección estratégica. Estamos comenzando a mover gradualmente nuestros repositorios de código abierto a &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt;. En algún momento en el futuro, una vez que hayamos estado usando &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; en producción para todos nuestros repositorios de código abierto y comerciales, &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; se convertirá en nuestra solución recomendada para todos los proveedores Git para que podamos tener una base de código única, más simple y más pequeña para mantener.&lt;/p&gt;
&lt;h2 id=&#34;cómo-manejar-un-pipeline-dañado&#34;&gt;¿Cómo manejar un pipeline dañado?&lt;/h2&gt;
&lt;p&gt;Si tiene un PR pendiente que está bloqueado debido a que alguna de las pruebas falla; puede usar ChatOps para anular su estado a través del comando ChatOps: &lt;code&gt;/override nameOfPipeline&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;por-qué-un-pull-request-no-tiene-un-pipeline-activado&#34;&gt;¿Por qué un Pull Request no tiene un pipeline activado?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/docs/reference/components/prow/&#34;&gt;Prow&lt;/a&gt; y &lt;a href=&#34;https://jenkins-x.io/architecture/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt; usan un archivo &lt;code&gt;OWNERS&lt;/code&gt; almacenado en cada repositorio Git para definir qué desarrolladores pueden revisar y aprobar cambios. Incluso puede limitar esos roles a diferentes carpetas.&lt;/p&gt;
&lt;p&gt;Si un no revisor envía una PR, no activará los pipelines de CI de forma predeterminada hasta que un revisor agregue un comentario &lt;code&gt;/ok-to-test&lt;/code&gt; en el PR.&lt;/p&gt;
&lt;p&gt;Si tiene repositorios públicos de Git, esto también evita el problema de seguridad de un no aprobador que envía una PR para cambiar el pipeline para enviarles por correo electrónico sus credenciales de seguridad en al pipeline CI ;)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Crear MLquickstart</title>
      <link>https://jenkins-x.io/es/docs/using-jx/creating/create-mlquickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/using-jx/creating/create-mlquickstart/</guid>
      <description>
        
        
        &lt;p&gt;El inicio rápido de aprendizaje automático (Machine learning quickstarts) son aplicaciones pre-configuradas de aprendizaje automático que puedes utilizar para iniciar tus propios proyectos.&lt;/p&gt;
&lt;p&gt;Puede crear nuevas aplicaciones desde nuestra lista de inicio rápido de aprendizaje automático a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_mlquickstart/&#34;&gt;jx create mlquickstart&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create mlquickstart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego se le solicita que elija de un listado de aplicaciones posibles.&lt;/p&gt;
&lt;p&gt;Verá que estos vienen en grupos de tres:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;? &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; the quickstart you wish to create  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Use arrows to move, space to &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt;, type to filter&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; machine-learning-quickstarts/ML-python-pytorch-cpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  machine-learning-quickstarts/ML-python-pytorch-cpu-service
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  machine-learning-quickstarts/ML-python-pytorch-cpu-training
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  machine-learning-quickstarts/ML-python-pytorch-mlpc-cpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  machine-learning-quickstarts/ML-python-pytorch-mlpc-cpu-service
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  machine-learning-quickstarts/ML-python-pytorch-mlpc-cpu-training
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  machine-learning-quickstarts/ML-python-pytorch-mlpc-gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  machine-learning-quickstarts/ML-python-pytorch-mlpc-gpu-service
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  machine-learning-quickstarts/ML-python-pytorch-mlpc-gpu-training
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Cada inicio rápido de aprendizaje automático consta de dos proyectos, un proyecto de entrenamiento que administra el script de capacitación para su modelo y un proyecto de servicio que le permite abarcar sus instancias de modelo entrenadas con API de servicio listas para integrarse en su aplicación.&lt;/p&gt;
&lt;p&gt;Si desea crear solo el proyecto &lt;code&gt;-service&lt;/code&gt; o &lt;code&gt;-training&lt;/code&gt;, puede hacerlo seleccionando la opción con el sufijo de nombre correspondiente.&lt;/p&gt;
&lt;p&gt;Sin embargo, la mayoría de las veces, lo que desea hacer es seleccionar &lt;em&gt;el conjunto de proyectos&lt;/em&gt;, que es la primera opción con el mismo nombre de prefijo y sin sufijo. Eso creará un par de proyectos coincidentes que están vinculados. Por ejemplo, si llama al repositorio &lt;code&gt;my-first-ml-project&lt;/code&gt; y selecciona el conjunto de proyectos &lt;code&gt;ML-python-pytorch-cpu&lt;/code&gt;, creará dos proyectos independientes en la carpeta actual, &lt;code&gt;my-first-ml-project-training&lt;/code&gt; y &lt;code&gt;my-first-ml-project-service&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Si los crea individualmente, es importante que sus proyectos compartan el mismo nombre raíz y que terminen con los sufijos &lt;code&gt;-training&lt;/code&gt; y &lt;code&gt;-service&lt;/code&gt; para que puedan integrarse automáticamente durante el proceso de construcción.&lt;/p&gt;
&lt;p&gt;Puede utilizar un filtro de texto para filtrar los nombres de los proyectos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create mlquickstart -f gpu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;qué-sucede-cuando-se-crea-un-inicio-rápido&#34;&gt;¿Qué sucede cuando se crea un inicio rápido?&lt;/h3&gt;
&lt;p&gt;Una vez que haya elegido el proyecto a crear y le haya dado un nombre, se automatizará lo siguiente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;crea un par de proyectos desde el inicio rápido en subdirectorios&lt;/li&gt;
&lt;li&gt;adiciona el código de ambos en un par de repositorios Git&lt;/li&gt;
&lt;li&gt;crea un repositorio Git  para cada repositorio Git local en una plataforma como &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;empuja el código de los repositorios locales hacia los repositorios remotos&lt;/li&gt;
&lt;li&gt;adiciona los siguientes ficheros:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para construir la imagen Docker de la aplicación&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; para implementar el pipeline CI/CD para las construcciones de entrenamiento y servicio&lt;/li&gt;
&lt;li&gt;charts de Helm para ejecutar la aplicación en Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;registra un enlaces (webhooks) en el repositorio Git remoto hacia los equipos del servidor Jenkins X&lt;/li&gt;
&lt;li&gt;desencadena los pipelines de entrenamiento y despliegue del servicio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Una vez que cree un inicio rápido de aprendizaje automático, los proyectos de entrenamiento y servicio se construirán simultáneamente. El proyecto de servicio se desplegará, pero la primera vez no se iniciará porque todavía no tiene un modelo de entrenamiento para trabajar.&lt;/p&gt;
&lt;p&gt;Mientras tanto, el proyecto de entrenamiento comenzará a trabajar en la capacitación del modelo y, una vez capacitado, realizará algunas pruebas de aceptación para verificar que la instancia del modelo capacitado sea lo suficientemente precisa como para que valga la pena promoverla para futuras pruebas. Si el modelo no ha aprendido lo suficientemente bien, la construcción del entrenamiento fallará en este punto.&lt;/p&gt;
&lt;p&gt;Puede reiniciar el entrenamiento con el comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx start pipeline
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;y luego seleccione el nombre del proyecto de entrenamiento que desea ejecutar nuevamente, o puede editar su secuencia de comandos de capacitación, confirmar sus cambios y enviarlos para activar automáticamente otra ejecución de capacitación.&lt;/p&gt;
&lt;p&gt;Una vez completado el entrenamiento con éxito, la versión de su modelo que acaba de recibir capacitación y las métricas asociadas con esta ejecución se pasarán a su proyecto &lt;code&gt;-service&lt;/code&gt; mediante un PR. Ahora debe revisar el repositorio del proyecto &lt;code&gt;-service&lt;/code&gt; y verificar las métricas de capacitación para verificar su idoneidad. El proyecto &lt;code&gt;-service&lt;/code&gt; se reconstruirá automáticamente utilizando la instancia del modelo recién entrenado y se desplegará en un entorno de vista previa donde puede probarlo utilizando su API.&lt;/p&gt;
&lt;p&gt;Si se aprueban todas las comprobaciones de control de calidad, puede cerrar la sesión de la misma manera que lo haría para cualquier otra compilación dentro de Jenkins-X (haga que los aprobadores y revisores issue /approve y /lgtm comentarios en el hilo del PR).&lt;/p&gt;
&lt;p&gt;Una vez que se cierra la sesión, la instancia del modelo entrenado se mezcla en la rama &lt;code&gt;master&lt;/code&gt; de su proyecto &lt;code&gt;-service&lt;/code&gt;, se reconstruye y se despliega en etapas para pruebas e integración adicionales.&lt;/p&gt;
&lt;p&gt;Cada vez que reinicie el proyecto de entrenamiento, obtendrá una nueva instancia de modelo que puede elegir promover de la misma manera. Todos los modelos se versionan a través de Git, por lo que puede realizar un seguimiento de cada instancia y sus métricas.&lt;/p&gt;
&lt;h3 id=&#34;cómo-funciona-el-inicio-rápido&#34;&gt;¿Cómo funciona el inicio rápido?&lt;/h3&gt;
&lt;p&gt;La fuente de estos proyectos de Inicio Rápido se mantiene en &lt;a href=&#34;https://github.com/machine-learning-quickstarts&#34;&gt;la organización GitHub de machine-learning-quickstarts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Al igual que con los inicios rápidos convencionales de Jenkins-X, utilizamos &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;los paquetes de compilación Jenkins X&lt;/a&gt; para que utilizar el paquete adecuado para el proyecto utilizando el lenguaje de código fuente y los tipos frameworks de aprendizaje automático para elegir la combinación más adecuada.&lt;/p&gt;
&lt;p&gt;Cuando utilice &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/&#34;&gt;jx create&lt;/a&gt;, &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/install-on-cluster/&#34;&gt;jx install&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx init&lt;/a&gt;, &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;los paquetes de compilación de Jenkins X&lt;/a&gt; serán clonados en su carpeta local &lt;code&gt;~/.jx/draft/packs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Entonces, cuando creas un proyecto de inicio rápido de aprendizaje automático, &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;los paquetes de compilación de Jenkins X&lt;/a&gt; son utilizado para:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;buscar el paquete correspondiente al lenguaje de programación. p.ej aquí está la actual &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34;&gt;lista de paquetes para lenguajes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;el paquete de lenguaje es utilizado para seleccionar los siguientes ficheros correspondientes si no existen:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para crear la imagen Docker de la aplicación&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jenkins-x.yml&lt;/code&gt; para implementar los pipelines CI/CD utilizando pipelines declarativos como código&lt;/li&gt;
&lt;li&gt;Charts Helms para desplegar la aplicación en Kubernetes y para implementar &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos-de-vista-previa&#34;&gt;Vistas Previas de Entornos&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;adicionar-tus-propios-inicios-rápidos&#34;&gt;Adicionar tus propios Inicios Rápidos&lt;/h2&gt;
&lt;p&gt;Si desea enviar un nuevo inicio rápido a Jenkins X, simplemente &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new?labels=quickstart&amp;amp;title=Add%20mlquickstart&amp;amp;body=Please%20add%20this%20github%20mlquickstart:&#34;&gt;plantee un problema&lt;/a&gt; con la URL en GitHub de su inicio rápido y podemos bifurcarlo en la &lt;a href=&#34;https://github.com/machine-learning-quickstarts&#34;&gt;organización de inicio rápido&lt;/a&gt; para que aparezca en el menú &lt;code&gt;jx create mlquickstart&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O si forma parte de un proyecto de código abierto y desea seleccionar su propio conjunto de inicios rápidos para su proyecto; puede &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new?labels=quickstart&amp;amp;title=Add%20mlquickstart&amp;amp;body=Please%20add%20this%20github%20mlquickstart:&#34;&gt;plantear un problema&lt;/a&gt; proporcionándonos detalles de la organización de GitHub donde están los inicios rápidos y lo agregaremos como una organización predeterminada en el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_mlquickstart/&#34;&gt;jx create mlquickstart&lt;/a&gt;. Es más fácil para &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_mlquickstart/&#34;&gt;jx create mlquickstart&lt;/a&gt; si mantiene los inicios rápidos en una organización separada de inicio rápido en GitHub.&lt;/p&gt;
&lt;p&gt;Hasta que lo hagamos, puede seguir usando sus propios Inicios Rápidos en el comando &lt;code&gt;jx create mlquickstart&lt;/code&gt; a través del parámetro &lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--organisation&lt;/code&gt;. p.ej.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create mlquickstart  --organisations my-github-org
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego, todos los inicios rápidos de aprendizaje automático que se encuentran en &lt;code&gt;my-github-org&lt;/code&gt; se enumerarán además de los valores predeterminados.&lt;/p&gt;
&lt;p&gt;Tenga en cuenta que hay algunos estándares para crear inicios rápidos de aprendizaje automático:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Todos los nombres de inicio rápido deben comenzar con las letras &lt;code&gt;ML-&lt;/code&gt; para distinguirlo de un inicio rápido convencional&lt;/li&gt;
&lt;li&gt;Los proyectos de entrenamiento deben tener sufijos &lt;code&gt;-training&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Los proyectos de servicio deben tener el sufijo &lt;code&gt;-service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Todos los componentes de un conjunto de proyectos deben compartir el mismo prefijo raíz a su nombre&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para crear un conjunto de proyectos de aprendizaje automático, cree un nuevo repositorio en su organización de inicio rápido de modo que el nombre sea el prefijo compartido para su inicio rápido, por ejemplo: &lt;code&gt;machine-learning-quickstarts/ML-python-pytorch-cpu&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Intente elegir nombres explicativos para que quede claro qué lenguaje, framework y hardware están asociados con este conjunto de proyectos.&lt;/p&gt;
&lt;p&gt;Dentro de su repositorio de conjuntos de proyectos, cree un único archivo llamado &lt;code&gt;projectset&lt;/code&gt; que tenga el siguiente formato:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repo&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ML-python-pytorch-cpu-service&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tail&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-service&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Repo&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ML-python-pytorch-cpu-training&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tail&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-training&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;personalizar-sus-equipos-de-inicio-rápido&#34;&gt;Personalizar sus equipos de Inicio Rápido&lt;/h2&gt;
&lt;p&gt;Puede configurar a nivel de equipo los inicios rápidos que se le presentan en el comando &lt;code&gt;jx create mlquickstart&lt;/code&gt;. Estas configuraciones se almacenan en el recurso &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/&#34;&gt;Environment Custom Resource&lt;/a&gt; en Kubernetes.&lt;/p&gt;
&lt;p&gt;Para agregar la ubicación de un conjunto de inicios rápidos de aprendizaje automático, puede usar el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_quickstartlocation/&#34;&gt;jx create quickstartlocation&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create quickstartlocation --url https://mygit.server.com --owner my-mlquickstarts --includes&lt;span style=&#34;color:#f92672&#34;&gt;=[&lt;/span&gt;ML-*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Tenga en cuenta que DEBE especificar la opción &lt;code&gt;--includes=[ML-*]&lt;/code&gt; o sus inicios rápidos se agregarán a la lista de inicio rápido convencional en lugar de a la lista de aprendizaje automático.&lt;/p&gt;
&lt;p&gt;Si omite el parámetro &lt;code&gt;--url&lt;/code&gt;, el comando asumirá que es un repositorio de &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;. Tenga en cuenta que se admiten repositorios públicos y privados.&lt;/p&gt;
&lt;p&gt;Esto significa que puede tener sus propios inicios rápidos privados compartidos para reutilizar dentro de su organización. Por supuesto, obviamente preferimos que &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new?labels=quickstart&amp;amp;title=Add%20mlquickstart&amp;amp;body=Please%20add%20this%20github%20mlquickstart:&#34;&gt;comparta sus inicios rápidos con nosotros a través del código abierto&lt;/a&gt;, luego podemos incluir su inicio rápido con toda la comunidad, pero puede haber ocasiones en las que desee seleccionar sus propios inicios rápidos internos utilizando un software propietario.&lt;/p&gt;
&lt;p&gt;También puede especificar otros patrones como &lt;code&gt;--includes&lt;/code&gt; o &lt;code&gt;--excludes&lt;/code&gt; para filtrar los nombres de los repositorios donde &lt;code&gt;*&lt;/code&gt; coincide con cualquier cosa y &lt;code&gt;foo*&lt;/code&gt; coincide con cualquier cosa que comience por &lt;code&gt;foo&lt;/code&gt;. p.ej. puede incluir los lenguajes y las tecnologías que admite su organización y excluir el resto, etc.&lt;/p&gt;
&lt;p&gt;También tenga en cuenta que puede usar el alias de &lt;code&gt;qsloc&lt;/code&gt; en lugar de &lt;code&gt;quickstartlocation&lt;/code&gt; si desea alias más cortos;)&lt;/p&gt;
&lt;p&gt;Luego puede ver las ubicaciones actuales de inicio rápido para su equipo a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_quickstartlocation/&#34;&gt;jx get quickstartlocations&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get quickstartlocations
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O utilizando la abreviatura&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get qsloc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;También está el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_delete_quickstartlocation/&#34;&gt;jx delete quickstartlocation&lt;/a&gt; si necesita eliminar una organización Git.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Crear un clúster</title>
      <link>https://jenkins-x.io/es/docs/getting-started/demos-talks-posts/create_cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/demos-talks-posts/create_cluster/</guid>
      <description>
        
        
        &lt;p&gt;Este &lt;a href=&#34;https://www.youtube.com/watch?v=ELA4tytdFeA&#34;&gt;demo&lt;/a&gt; &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/create-cluster/&#34;&gt;crea un nuevo cluster de Kubernetes&lt;/a&gt; utilizando los siguientes comandos en paralelo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster_gke/&#34;&gt;jx create cluster gke&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster_aks/&#34;&gt;jx create cluster aks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/ELA4tytdFeA&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Funcionalidades</title>
      <link>https://jenkins-x.io/es/docs/concepts/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/concepts/features/</guid>
      <description>
        
        
        &lt;h2 id=&#34;línea-de-comando&#34;&gt;Línea de Comando&lt;/h2&gt;
&lt;p&gt;Jenkins X viene con una útil y práctica herramienta de línea de comandos &lt;a href=&#34;https://jenkins-x.io/commands/jx/&#34;&gt;jx&lt;/a&gt; para:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/install/&#34;&gt;instalar Jenkins X&lt;/a&gt; dentro de un clúster de Kubernetes existente&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/create-cluster/&#34;&gt;crear un nuevo cluster de Kubernetes&lt;/a&gt; e instalar Jenkins X dentro de él&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;cargar/importar proyectos&lt;/a&gt; dentro de Jenkins X junto a su flujos de configuración CI/CD&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/developing/create-spring/&#34;&gt;crea nuevas aplicaciones Spring Boot&lt;/a&gt; las cuales son cargadas dentro de Jenkins X junto a sus flujos de configuración CI/CD&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pipelines-automatizados&#34;&gt;Pipelines Automatizados&lt;/h2&gt;
&lt;p&gt;En lugar de tener que tener un conocimiento profundo de las partes internas de Jenkins Pipeline, Jenkins X configurará automáticamente pipelines (flujos de actividades) increíbles para que sus proyectos implementen completamente CI y CD utilizando las &lt;a href=&#34;https://jenkins-x.io/about/concepts/&#34;&gt;mejores prácticas de DevOps&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;entornos&#34;&gt;Entornos&lt;/h2&gt;
&lt;p&gt;Un &lt;em&gt;entorno&lt;/em&gt; es un lugar donde se despliegan las aplicaciones. Los desarrolladores a menudo hacen referencia a los entornos usando un nombre corto como &lt;code&gt;Testing, Staging/UAT or Production&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Con Jenkins X cada &lt;em&gt;equipo&lt;/em&gt; tiene sus propios Entornos. De forma predeterminada, Jenkins X crea los entornos &lt;code&gt;Staging&lt;/code&gt; y &lt;code&gt;Production&lt;/code&gt; para cada equipo, pero puede crear nuevos entornos a través de &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_environment/&#34;&gt;jx create environment&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;También está el entorno &lt;code&gt;Dev&lt;/code&gt;, que es donde se instalan herramientas como Jenkins, Nexus o Prow y donde se ejecutan los pipelines de CI/CD.&lt;/p&gt;
&lt;p&gt;Utilizamos GitOps para gestionar la configuración y la versión de los recursos de Kubernetes que se despliegan en cada entorno. Por lo tanto, cada Entorno tiene su propio repositorio Git que contiene todos los Helm Charts, sus versiones y la configuración para que las aplicaciones se ejecuten en el entorno.&lt;/p&gt;
&lt;p&gt;Un Entorno se asigna a un espacio de nombres (namespace) en un clúster de Kubernetes. Cuando los PR son mezclados en el repositorio Git del entorno, se desencadena la ejecución de los pipelines para aplicar los cambias a través de los Helms Charts en el namespace del entorno.&lt;/p&gt;
&lt;p&gt;Esto significa que tanto los desarrolladores como administradores pueden utilizar el mismo repositorio de Git para administrar todas las configuraciones y versiones de todas las aplicaciones y recursos para un entorno, por lo tanto, todos los cambios en el entorno se capturan en Git. De esta forma es fácil ver quién realizó los cambios y, lo que es más importante, es fácil revertir los cambios cuando sucedan cosas malas.&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/gitops.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;h2 id=&#34;equipos&#34;&gt;Equipos&lt;/h2&gt;
&lt;p&gt;Un equipo en Jenkins X está representado por una instalación de Jenkins X en un namespace separado.&lt;/p&gt;
&lt;p&gt;Puede instalar Jenkins X en diferentes namespaces en el mismo clúster si lo desea utilizando el argumento &lt;code&gt;--namespace&lt;/code&gt; en la línea de comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster/&#34;&gt;jx create cluster&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx install&lt;/a&gt;. Tenga en cuenta que para admitir múltiples instalaciones de Jenkins X en el mismo clúster, debe &lt;a href=&#34;https://jenkins-x.io/news/helm-without-tiller/&#34;&gt;evitar Tiller si está utilizando helm 2.x&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;También puede utilizar la CLI &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_team/&#34;&gt;jx create team&lt;/a&gt; para crear un nuevo &lt;code&gt;Team&lt;/code&gt; &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/&#34;&gt;Custom Resource&lt;/a&gt;. Al utilizar este comando el controlador de equipos creará, en segundo plano, una nueva instalación de Jenkins X en los namespaces del equipo, reutilizando de forma predeterminada el mismo nexus y registro de docker.&lt;/p&gt;
&lt;p&gt;Lea la &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/config/&#34;&gt;guía de configuración&lt;/a&gt; para ampliar los detalles sobre cómo compartir recursos como Nexus entre equipos.&lt;/p&gt;
&lt;h2 id=&#34;promoción&#34;&gt;Promoción&lt;/h2&gt;
&lt;p&gt;La promoción es implementada con GitOps generando una PR en el repositorio Git del entorno para que todos los cambios pasen por Git para su revisión, aprobación y para que cualquier cambio sea fácil de revertir.&lt;/p&gt;
&lt;p&gt;Cuando un nuevo cambio dentro del repositorio Git del entorno se mezcla con la rama master, se activa el pipeline para el entorno, el cual aplica los cambio a los recursos a través de helm; siempre utilizando el código del repositorio Git como única fuente de información.&lt;/p&gt;
&lt;p&gt;Los Pipelines para CD de Jenkins X automatizan la promoción de cambios de versión a través de cada Entorno que se configura con la propiedad &lt;em&gt;promotion strategy&lt;/em&gt; en &lt;code&gt;Auto&lt;/code&gt;. De forma predeterminada, el entorno &lt;code&gt;Staging&lt;/code&gt; utiliza la promoción automática y el entorno &lt;code&gt;Production&lt;/code&gt; utiliza la promoción manual.&lt;/p&gt;
&lt;p&gt;Para promover manualmente una versión de la aplicación hacia un entorno debes utilizar el comando &lt;a href=&#34;https://jenkins-x.io/developing/promote/&#34;&gt;jx promote&lt;/a&gt;.&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/overview.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;h2 id=&#34;entornos-de-vista-previa&#34;&gt;Entornos de Vista Previa&lt;/h2&gt;
&lt;p&gt;Jenkins X le permite activar Entornos de Vista Previa para los PR, de esta forma podrá obtener rápida retroalimentación antes de mezclar los cambios en la rama master. Además de una rápida retroalimentación, esta funcionalidad le permite evitar la aprobación humana dentro de su pipeline de liberación para acelerar las entregas de cambios mezclados a master.&lt;/p&gt;
&lt;p&gt;Cuando el Entorno de Vista Previa esté en funcionamiento, Jenkins X comentará su PR con un enlace para que, con un solo clic, los miembros de su equipo puedan probar la vista previa.&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/pr-comment.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;h2 id=&#34;retroalimentación&#34;&gt;Retroalimentación&lt;/h2&gt;
&lt;p&gt;Como puede ver arriba, Jenkins X agrega comentarios automáticamente en los PR cuando utilizar Entornos de Vista Previa.&lt;/p&gt;
&lt;p&gt;Si los comentarios del commit hacen referencia a los problemas (issues, p.ej. con el texto &lt;code&gt;fixes #123&lt;/code&gt;), los pipelines de Jenkins X generarán notas de la versión como las mostradas en los &lt;a href=&#34;https://github.com/jenkins-x/jx/releases&#34;&gt;jx releases&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Además, a medida que la versión (conjunto de nuevos commits) sea promovida en &lt;code&gt;Staging&lt;/code&gt; o &lt;code&gt;Production&lt;/code&gt;, recibirá comentarios automáticos sobre cada problema solucionado diciendo que el problema solucionado se encuentra disponible para su revisión en el correspondiente entorno. p.ej.&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/issue-comment.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;h2 id=&#34;aplicaciones&#34;&gt;Aplicaciones&lt;/h2&gt;
&lt;p&gt;Una colección de las mejores herramientas de software empaquetadas con charts de helm vienen pre-integradas con Jenkins X, tales como: Nexus, ChartMuseum, Monocular, Prometheus, Grafana, etc.&lt;/p&gt;
&lt;h3 id=&#34;complementos&#34;&gt;Complementos&lt;/h3&gt;
&lt;p&gt;Algunas de estas aplicaciones están ajustadas; como: Nexus, ChartMuseum, Monocular. Otros se proporcionan como un &lt;code&gt;Addon&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para instalar un complemento utilice el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_addon/&#34;&gt;jx create addon&lt;/a&gt;. p.ej.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create addon grafana
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Paquetes de Compilación</title>
      <link>https://jenkins-x.io/es/docs/reference/components/build-packs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/build-packs/</guid>
      <description>
        
        
        &lt;p&gt;Usamos paquetes de compilación de estilo &lt;a href=&#34;https://draft.sh/&#34;&gt;draft&lt;/a&gt; para diferentes lenguajes, tiempos de ejecución y herramientas de compilación para agregar los archivos de configuración necesarios a los proyectos a medida que los &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;importamos&lt;/a&gt; o los &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/common-tasks/create-spring/&#34;&gt;creamos&lt;/a&gt; para que podamos compilarlos e desplegarlos en Kubernetes.&lt;/p&gt;
&lt;p&gt;Los paquetes de compilación se utilizan para predeterminar los siguientes archivos si aún no existen en el proyecto que se está creando/importando:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para convertir el código en una imagen de docker para ejecutarla en Kubernetes&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; para definir de forma declarativa el pipeline de Jenkins para definir los pasos CI/CD de la aplicación&lt;/li&gt;
&lt;li&gt;helm chart en la carpeta &lt;code&gt;charts&lt;/code&gt; para generar los recursos de Kubernetes para ejecutar la apliación&lt;/li&gt;
&lt;li&gt;un &lt;em&gt;chart de vista previa&lt;/em&gt; en la carpeta &lt;code&gt;charts/preview&lt;/code&gt; para definir las dependencias para el despliegue hacia el &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos-de-vista-previa&#34;&gt;entorno de vista previa&lt;/a&gt; en una solicitud de extracción.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Los paquetes de compilación predeterminados están en &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&lt;/a&gt; con una carpeta para cada lenguaje o herramienta de compilación.&lt;/p&gt;
&lt;p&gt;La línea de comando &lt;code&gt;jx&lt;/code&gt; clona los paquetes de compilación en la carpeta &lt;code&gt;.~/.jx/draft/packs/&lt;/code&gt; y los actualiza a través del &lt;code&gt;git pull&lt;/code&gt; cada vez que intenta crear o importar un proyecto.&lt;/p&gt;
&lt;h2 id=&#34;modelo-de-extensión-pipeline&#34;&gt;Modelo de extensión Pipeline&lt;/h2&gt;
&lt;p&gt;Como parte de la transición de &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/cloud-native-jenkins/&#34;&gt;Jenkins hacia ser nativa de la nube&lt;/a&gt;, hemos reestructurado nuestros &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/&#34;&gt;paquetes de compilación&lt;/a&gt; para que sean más modulares y más fáciles de componer y reutilizar en las cargas de trabajo.&lt;/p&gt;
&lt;p&gt;Por ejemplo, el paquete de compilación &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;jenkins-x-kubernetes&lt;/a&gt; hereda del paquete de compilación &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic&#34;&gt;jenkins-x-classic&lt;/a&gt;, reutilizando el CI y los pipelines de liberación, pero luego agregando las cargas de trabajo específicas de Kubernetes (por ejemplo, construyendo imágenes de docker, creando charts de helm, &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#entornos-de-vista-previa&#34;&gt;vista previa de entornos&lt;/a&gt; y &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#promoci%C3%B3n&#34;&gt;promoción a través de GitOps&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Para hacer esto, hemos introducido un nuevo formato de archivo YAML simple para definir pipelines.&lt;/p&gt;
&lt;h2 id=&#34;pipelines&#34;&gt;Pipelines&lt;/h2&gt;
&lt;p&gt;Cada fichero Pipeline YAML tiene un número de pipelines separados lógicamente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;release&lt;/code&gt; para procesar las mezclas a la rama &lt;code&gt;master&lt;/code&gt; que comúnmente crea una nueva versión y liberación, luego desencadena una promoción&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pullRequest&lt;/code&gt; para el procesamiento de las solicitudes de extracción (Pull Requests)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;feature&lt;/code&gt; para el procesamiento de las mezclas de las ramas de funcionalidades. Sin embargo, tenga en cuenta que el &lt;a href=&#34;https://jenkins-x.io/about/accelerate/&#34;&gt;libro accelerate&lt;/a&gt; no recomienda las ramas de funcionalidades a largo plazo. En su lugar, considere utilizar el desarrollo basado en troncales, que es una práctica de equipos de alto rendimiento.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ciclos-de-vida&#34;&gt;Ciclos de Vida&lt;/h2&gt;
&lt;p&gt;Luego, cada pipeline tiene una serie de fases distintas del ciclo de vida, algo así como Maven tiene &lt;code&gt;clean&lt;/code&gt;,&lt;code&gt; compile&lt;/code&gt;, &lt;code&gt;compile-test&lt;/code&gt;,&lt;code&gt; package&lt;/code&gt; etc.&lt;/p&gt;
&lt;p&gt;Estas fases de ciclos de vida en Jenkins X Pipeline YAML son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;preBuild&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;postBuild&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;promote&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;extensible&#34;&gt;Extensible&lt;/h2&gt;
&lt;p&gt;Un Pipeline YAML puede extender otro archivo YAML. Puede hacer referencia a un pipeline base YAML a través de:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;usando &lt;code&gt;file&lt;/code&gt; para hacer referencia a una ruta de archivo relativa en el mismo paquete de compilación &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L1-L2&#34;&gt;como este ejemplo usando &lt;code&gt;file&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;usando &lt;code&gt;import&lt;/code&gt; para hacer referencia a un archivo YAML que se importa como este &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/45819e05fa197d9069af682fbbcad0af8d8d605a/packs/maven/pipeline.yaml#L2-L3&#34;&gt;ejemplo usando import&lt;/a&gt; que luego se refiere a un &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/45819e05fa197d9069af682fbbcad0af8d8d605a/packs/imports.yaml#L2-L4&#34;&gt;módulo importado nombrado a través de git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;anteponer-pasos&#34;&gt;Anteponer pasos&lt;/h2&gt;
&lt;p&gt;Al igual que las clases en lenguajes como Java, puede anteponer los pasos en un Pipeline YAML desde un Pipeline YAML base. Esto le permite reutilizar los pasos en el ciclo de vida de un pipeline base y luego agregar sus propios pasos adicionales.&lt;/p&gt;
&lt;p&gt;Por defecto, todos los pasos que defina se agregan después de los pasos YAML del pipeline base, &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/0520fe3d9740cbcb1cc9754e173fe7726219f58e/pkg/jx/cmd/test_data/step_buildpack_apply/inheritence/pipeline.yaml#L7&#34;&gt;como en este ejemplo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Puede agregar pasos antes de los pasos del pipeline base utilizando la propiedad &lt;code&gt;preSteps:&lt;/code&gt; c&lt;a href=&#34;https://github.com/jenkins-x/jx/blob/0520fe3d9740cbcb1cc9754e173fe7726219f58e/pkg/jx/cmd/test_data/step_buildpack_apply/inheritence2/pipeline.yaml#L6&#34;&gt;omo este ejemplo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si desea reemplazar por completo todos los pasos de un pipeline base para un ciclo de vida particular, puede usar &lt;code&gt;replace: true&lt;/code&gt; como &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/0520fe3d9740cbcb1cc9754e173fe7726219f58e/pkg/jx/cmd/test_data/step_buildpack_apply/inheritence2/pipeline.yaml#L11-L14&#34;&gt;en este ejemplo&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pipeline-de-ejemplo&#34;&gt;Pipeline de ejemplo&lt;/h2&gt;
&lt;p&gt;Por ejemplo, para las bibliotecas maven, &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml&#34;&gt;usamos este archivo pipeline.yaml&lt;/a&gt; que:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L1-L2&#34;&gt;extiende&lt;/a&gt; el &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/pipeline.yaml&#34;&gt;pipeline común&lt;/a&gt; que configura git y define pasos comunes de compilación posterior&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L3-L5&#34;&gt;configura el agente&lt;/a&gt; en términos de &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/pod-templates/&#34;&gt;plantilla de pod&lt;/a&gt; y nombre del contenedor&lt;/li&gt;
&lt;li&gt;define los pasos para los &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L7-L11&#34;&gt;build steps&lt;/a&gt; del pipeline del &lt;code&gt;pull request&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;define el &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L13-L18&#34;&gt;grupo de pasos de versión&lt;/a&gt; del pipeline de liberación y los &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic/blob/f7027df958eb385d50fec0c0368e606a6d5eb9df/packs/maven/pipeline.yaml#L19-L21&#34;&gt;pasos de compilación&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Luego, el &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/45819e05fa197d9069af682fbbcad0af8d8d605a/packs/maven/pipeline.yaml&#34;&gt;pipeline de maven kubernetes.yaml&lt;/a&gt; se &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/45819e05fa197d9069af682fbbcad0af8d8d605a/packs/maven/pipeline.yaml#L2-L3&#34;&gt;extiende&lt;/a&gt; desde el pipeline clásico para agregar los pasos kubernetes.&lt;/p&gt;
&lt;h1 id=&#34;crear-nuevos-paquetes-de-compilación&#34;&gt;Crear nuevos paquetes de compilación&lt;/h1&gt;
&lt;p&gt;Nos encantan las &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;contribuciones&lt;/a&gt;, así que considere agregar nuevos paquetes de compilación y &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/pod-templates/&#34;&gt;plantillas de pod&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aquí hay instrucciones sobre cómo crear un nuevo paquete de compilación. Por favor, si algo no está claro, &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;únase a la comunidad y solo pregunte&lt;/a&gt;, aquí estamos encantados de ayudar.&lt;/p&gt;
&lt;p&gt;El mejor lugar para comenzar es una aplicación de &lt;em&gt;inicio rápido&lt;/em&gt;. Un proyecto de muestra que puede usar como prueba. Así que cree/encuentre un proyecto de ejemplo adecuado y luego &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;impórtelo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Luego, agregue manualmente un &lt;code&gt;Dockerfile&lt;/code&gt; y un &lt;code&gt;Jenkinsfile&lt;/code&gt; si aún no ha agregado uno para usted. Puede comenzar con los archivos de las &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34;&gt;carpetas del paquete de compilación actual&lt;/a&gt;, utilizando el lenguaje/framework más similar al suyo.&lt;/p&gt;
&lt;p&gt;Si su paquete de compilación está utilizando herramientas de compilación que aún no están disponibles en una de las &lt;a href=&#34;https://jenkins-x.io/es/docs/reference/components/pod-templates/&#34;&gt;plantillas de pod&lt;/a&gt; existentes, entonces deberá &lt;a href=&#34;https://jenkins-x.io/es/docs/reference/components/pod-templates/#enviar-nuevas-plantillas-de-pod&#34;&gt;enviar una nueva plantilla de pod&lt;/a&gt;, probablemente también utilizando una nueva imagen del contenedor de compilación.&lt;/p&gt;
&lt;p&gt;Una vez que tenga una plantilla de pod para usar, por ejemplo, &lt;code&gt;jenkins-foo&lt;/code&gt;, consulte en su &lt;code&gt;Jenkinsfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// my declarative Jenkinsfile
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipeline &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    agent &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      label &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins-foo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    environment &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      stage&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CI Build and push snapshot&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        steps &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          container&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sh &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo deploy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Una vez que su &lt;code&gt;Jenkinsfile&lt;/code&gt; sea capaz de hacer CI/CD para su lenguage/tiempo de ejecución en su proyecto de muestra, entonces deberíamos poder tomar el &lt;code&gt;Dockerfile&lt;/code&gt;, el &lt;code&gt;Jenkinsfile&lt;/code&gt; y la carpeta de charts y copiarlos en una carpeta en su bifurcación del &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;jenkins-x/draft-packs repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Puede probarlo localmente agregando estos archivos a su clon local del repositorio de paquetes de compilación en &lt;code&gt;~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;p.ej.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export PACK&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/$PACK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp Dockerfile Jenkinsfile  ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/$PACK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# the charts will be in some folder charts/somefoo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -r charts/somefoo ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/$PACK/charts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Una vez que su paquete de compilación esté en una carpeta en &lt;code&gt;~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/&lt;/code&gt;, entonces debería ser utilizable por el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; que utiliza la detección del lenguaje de programación para encontrar el paquete de compilación más adecuado para usar al importar un proyecto. Si su paquete de compilación requiere una lógica personalizada para detectarlo, avísenos y podemos ayudarlo agregando un parche en el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; para que funcione mejor para su paquete de compilación. Por ejemplo, tenemos una lógica personalizada para &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/712d9edf5e55aafaadfb3e0ac57692bb44634b1c/pkg/jx/cmd/common_buildpacks.go#L82:L108&#34;&gt;manejar mejor a Maven y Gradle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si necesitas más ayuda &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;únete a la comunidad&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Jenkins Nativo de la Nube</title>
      <link>https://jenkins-x.io/es/docs/reference/components/cloud-native-jenkins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/cloud-native-jenkins/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X ayuda a admitir &lt;em&gt;Jenkins nativo en la nube&lt;/em&gt; a través de:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;orquestando tanto &lt;a href=&#34;https://jenkins-x.io/news/serverless-jenkins/&#34;&gt;Jenkins sin servidor&lt;/a&gt; con &lt;a href=&#34;https://jenkins-x.io/architecture/prow/&#34;&gt;prow&lt;/a&gt; como Jenkins Estático con maestros por equipo. Esto permite que los equipos se muevan hacia un sistema sin servidor mientras que también traen maestros estáticos.&lt;/li&gt;
&lt;li&gt;cada equipo puede instalar su propio Jenkins X en su propio namespace (a través de &lt;code&gt;jx install --namespace myteam&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;soporte para diferentes cargas de trabajo por equipo (ver &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_buildpack/&#34;&gt;jx edit buildpack&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;diferentes-cargas-de-trabajo&#34;&gt;Diferentes cargas de trabajo&lt;/h2&gt;
&lt;p&gt;Algunos equipos desarrollan aplicaciones nativas en la nube en Kubernetes y, por lo tanto, deberían usar la opción &lt;code&gt;kubernetes workloads&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para los equipos que no implementan aplicaciones en Kubernetes, como la entrega de bibliotecas o binarios, hay una nueva opción de &lt;code&gt;carga de trabajo de biblioteca&lt;/code&gt; que tiene CI y versiones automatizadas pero no CD.&lt;/p&gt;
&lt;p&gt;Cuando &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/&#34;&gt;crea un clúster&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/install-on-cluster/&#34;&gt;instala Jenkins X&lt;/a&gt;, se le solicita que elija entre los paquetes de construcción disponibles.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;? Pick workload build pack:   &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Use arrows to move, type to filter&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; Kubernetes Workloads: Automated CI+CD with GitOps Promotion
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Library Workloads: CI+Release but no CD
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puede cambiar esta configuración en cualquier momento a través de &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_buildpack/&#34;&gt;jx edit buildpack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Por defecto, simplemente presione enter para apegarse a la opción de cargas de trabajo de Kubernetes. Sin embargo, si tiene un número significativo de bibliotecas que desea administrar, puede configurar un equipo separado para esto e importar sus diversos proyectos de biblioteca allí.&lt;/p&gt;
&lt;h2 id=&#34;cargas-de-trabajo-actuales&#34;&gt;Cargas de trabajo actuales&lt;/h2&gt;
&lt;p&gt;Almacenamos nuestros paquetes de construcción en la organización &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/&#34;&gt;jenkins-x-buildpacks&lt;/a&gt; en GitHub. Actualmente apoyamos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;el paquete de construcción &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-classic&#34;&gt;jenkins-x-classic&lt;/a&gt; es compatible con las versiones CI+Release, pero no incluye el CD. p.ej. hacer CI y liberar sus bibliotecas Java o módulos de Nodo pero no desplegarlas en Kubernetes.&lt;/li&gt;
&lt;li&gt;el paquete de construcción &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;jenkins-x-kubernetes&lt;/a&gt; admite el CI+CD automatizado con la promoción GitOps y entornos de vista previa para &lt;code&gt;cargas de trabajo de Kubernetes&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sin embargo, debería poder extender cualquiera de estos paquetes de construcción para agregar plataformas y capacidades alternativas.&lt;/p&gt;
&lt;h2 id=&#34;escribiendo-su-propio-paquete-de-construcción&#34;&gt;Escribiendo su propio paquete de construcción&lt;/h2&gt;
&lt;p&gt;Queremos que &lt;a href=&#34;https://jenkins-x.io/docs/contributing/addons/&#34;&gt;extienda Jenkins X&lt;/a&gt;, así que consulte la documentación sobre [cómo crear sus propios paquetes de construcción]/docs/resources/guides/managing-jx/common-tasks/build-packs/#creating-new-build-packs).&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Azure</title>
      <link>https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/azure/</guid>
      <description>
        
        
        &lt;p&gt;Debes utilizar &lt;a href=&#34;https://cloudblogs.microsoft.com/opensource/2019/03/06/jenkins-x-azure-kubernetes-service-setup/&#34;&gt;este provechoso blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;De lo contrario garantice &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/install/&#34;&gt;tener instalado jx CLI&lt;/a&gt; y ejecute el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create cluster aks --skip-installation
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Crear Spring Boot</title>
      <link>https://jenkins-x.io/es/docs/using-jx/creating/create-spring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/using-jx/creating/create-spring/</guid>
      <description>
        
        
        &lt;p&gt;Los desarrolladores de microservicios de Java pueden aprovechar los recursos recomendados de &lt;a href=&#34;https://spring.io/projects/spring-boot&#34;&gt;Spring
Boot&lt;/a&gt;, así como sus componentes pre-configurados. Este framework toma la plataforma Spring y agrega componentes pre-establecidos, bibliotecas de terceros, empaquetadores de software y herramientas de línea de comandos para ejecutar scripts especializados.&lt;/p&gt;
&lt;p&gt;El objetivo de Spring Boot es crear software basado en Spring, como microservicios, que se puede desplegar utilizando la línea de comando &lt;code&gt;java&lt;/code&gt; o los ficheros de empaquetado &lt;em&gt;Web Application Resource&lt;/em&gt; (WAR). Spring Boot usa Spring como base para el desarrollo, y lo mejora con componentes que proporcionan un desarrollo y despliegues más rápidos, así como configuración para comenzar a desarrollar microservicios, y un marco de plugin con soporte para funcionalidades de los proyectos Maven y Gradle.&lt;/p&gt;
&lt;h2 id=&#34;spring-boot-y-jenkins-x&#34;&gt;Spring Boot y Jenkins X&lt;/h2&gt;
&lt;p&gt;Puede incorporar Jenkins X en su proyecto Spring Boot de dos formas:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Importando un proyecto existente de Spring BootBy utilizando &lt;code&gt;jx import&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creando una aplicación Spring Boot desde cero utilizando &lt;code&gt;jx create spring&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;importando-un-proyecto-existente-de-spring-boot&#34;&gt;Importando un proyecto existente de Spring Boot&lt;/h2&gt;
&lt;p&gt;Si usted tiene un proyecto en Spring Boot (tal vez creado utilizando &lt;a href=&#34;http://start.spring.io/&#34;&gt;Spring Boot Initializr&lt;/a&gt;) y desea gestionar sus construcciones con Jenkins X, utilice el comando &lt;code&gt;jx import&lt;/code&gt; para:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;incluir tu código en un servidor Git como puede ser GitHub&lt;/li&gt;
&lt;li&gt;adicionar el fichero &lt;code&gt;Dockerfile&lt;/code&gt; para construir la imagen Docker&lt;/li&gt;
&lt;li&gt;adicionar el fichero &lt;code&gt;pipeline.yaml&lt;/code&gt; al directorio local &lt;code&gt;~/.jx/&lt;/code&gt; para gestionar el pipeline del desarrollo&lt;/li&gt;
&lt;li&gt;adicionar el chart de Helm para ejecutar la aplicación en Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Los pasos para lograr este objetivo son:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Vaya al directorio de su proyecto Spring Boot:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd my-springapp/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;Ejecute el comando import desde la línea de comando:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx import
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le pregunta su nombre de usuario Git (p.ej &lt;code&gt;myuser&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le pregunta si desea inicializar su proyecto en Git.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicaicón le pregunta qué organización utilizar para las construcciones (p.ej, &lt;code&gt;myorg&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le pregunta qué nombre ponerle al repositorio remoto en Git (p.ej &lt;code&gt;my-springapp&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ahora puede realizar compilaciones, adicionar código del proyecto en su repositorio Git recién creado, y Jenkins X procesará automáticamente los PR y creará &lt;a href=&#34;https://jenkins-x.io/docs/reference/preview/&#34;&gt;vistas previas&lt;/a&gt; de sus aplicaciones para pruebas y validación.&lt;/p&gt;
&lt;h2 id=&#34;creando-una-aplicación-spring-boot&#34;&gt;Creando una aplicación Spring Boot&lt;/h2&gt;
&lt;p&gt;Si está evaluando Spring Boot para su entorno Jenkins X y necesita una aplicación de ejemplo con estas características, así como su configuración de pipelines CI/CD con promociones GitOps, utilice &lt;code&gt;jx create&lt;/code&gt; para lograr su objetivo.&lt;/p&gt;
&lt;p&gt;Los pasos para lograrlo son los siguientes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ejecute siguiente comando para crear la aplicación Spring Boot:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create spring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le preguntará por su usuario en Git (p.ej &lt;code&gt;myuser&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le permitirá seleccionar la organización que desee utilizar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le preguntará por el nombre del repositorio, (p.ej &lt;code&gt;my-springapp1&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le preguntará por el lenguaje de programación que va a utilizar (por defecto &lt;code&gt;java&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le preguntará por el ID del grupo (por defecto, &lt;code&gt;com.example&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le preguntará por alguna entrada o dependencia que desee utilizar durante el desarrollo de la aplicación.
Le recomendamos que como mínimo utilice las dependencias &lt;code&gt;Acurator&lt;/code&gt; y &lt;code&gt;Web&lt;/code&gt;, las cuales pueden ser seleccionadas utilizando la &lt;code&gt;Barra de Espacio&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;La aplicación le mostrará para inicializar el repositorio Git.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Esta es una &lt;a href=&#34;https://jenkins-x.io/docs/resources/demos-talks-posts/create_spring/&#34;&gt;demostración utilizando el comando jx create spring&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;También puede adicionar algunas opciones al comado &lt;code&gt;jx create&lt;/code&gt; como por ejemplo, especificar las dependencias:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create spring -d web -d actuator
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;El argumento &lt;code&gt;-d&lt;/code&gt; le permite especificar las dependencias de Spring Boot que desea agregar a su aplicación. En el ejemplo anterior, el comando llama al argumento &lt;code&gt;web&lt;/code&gt;, que pasa en la dependencia de Web Starter para crear aplicaciones web RESTful; la dependencia del &lt;code&gt;acurator&lt;/code&gt; para monitorear el estado y las métricas de su aplicación. Cuando omite los argumentos &lt;code&gt;-d&lt;/code&gt;, el comando &lt;code&gt;jx&lt;/code&gt; le preguntará que elija las dependencias a través de un asistente de CLI.&lt;/p&gt;
&lt;p&gt;Recomendamos que siempre incluya la dependencia &lt;strong&gt;actuator&lt;/strong&gt; en sus aplicaciones Spring Boot, ya que ayuda a proporcionar comprobaciones de &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/&#34;&gt;Liveness and Readiness probes&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;proyectos-spring-boot-gestionados-por-jenkins-x&#34;&gt;Proyectos Spring Boot gestionados por Jenkins X&lt;/h2&gt;
&lt;p&gt;Los dos métodos para configurar proyectos Spring Boot en Jenkins X realizan varias acciones:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Crea una nueva aplicación Spring Boot en un subdirectorio local&lt;/li&gt;
&lt;li&gt;Adiciona el código fuente a un repositorio Git&lt;/li&gt;
&lt;li&gt;Crea un repositorio Git remoto en plataformas como &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Agrega el código al repositorio Git remoto&lt;/li&gt;
&lt;li&gt;Agrega los siguientes ficheros al proyecto:
&lt;ul&gt;
&lt;li&gt;Un &lt;code&gt;Dockerfile&lt;/code&gt; para construir la imagen de Docker del proyecto&lt;/li&gt;
&lt;li&gt;Un &lt;code&gt;pipeline.yaml&lt;/code&gt; para implementar el pipeline CI/CD&lt;/li&gt;
&lt;li&gt;Un chart de Helm para ejecutar la aplicacion en Kubernetes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Registra un enlace (p.ej &lt;code&gt;http://hook-jx.192.169.1.100.nip.io/hook&lt;/code&gt;) en el repositorio Git remoto&lt;/li&gt;
&lt;li&gt;Inicia el primer pipeline de construcción&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ahora puede usar su subdirectorio de proyecto local habilitado para Git para realizar cambios en su aplicación Spring Boot, enviar esos cambios a Git y hacer que Jenkins X construya automáticamente, cree &lt;a href=&#34;https://jenkins-x.io/docs/reference/preview/&#34;&gt;vistas previas&lt;/a&gt; para pruebas y validación, y &lt;a href=&#34;https://jenkins-x.io/developing/promote/&#34;&gt;promueva&lt;/a&gt; su aplicación a producción para uso general.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Crear un clúster en GKE</title>
      <link>https://jenkins-x.io/es/docs/getting-started/demos-talks-posts/create_cluster_gke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/demos-talks-posts/create_cluster_gke/</guid>
      <description>
        
        
        &lt;p&gt;Este &lt;a href=&#34;https://www.youtube.com/watch?v=r8-J9Qg-p9U&#34;&gt;demo&lt;/a&gt; utiliza el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster_gke/&#34;&gt;jx create cluster gke&lt;/a&gt; para &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/create-cluster/&#34;&gt;crear un nuevo clúster de Kubernetes&lt;/a&gt;:&lt;/p&gt;
&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/r8-J9Qg-p9U&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Pipelines en Jenkins X</title>
      <link>https://jenkins-x.io/es/docs/concepts/jenkins-x-pipelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/concepts/jenkins-x-pipelines/</guid>
      <description>
        
        
        &lt;p&gt;Hemos &lt;a href=&#34;https://jenkins-x.io/news/jenkins-x-next-gen-pipeline-engine/&#34;&gt;anunciado recientemente&lt;/a&gt; la incorporación de los &lt;strong&gt;Pipelines en Jenkins X&lt;/strong&gt;. Estos Pipelines son ejecuciones sin servidor basados en el motor de &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton Pipelines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tekton es un proyecto open source diseñado como solución moderna nativa de la nube para ejecutar pipelines.&lt;/p&gt;
&lt;p&gt;El trabajo aquí todavía es experimental, pero nos encantaría recibir comentarios y ayuda de la comunidad para impulsarlo.&lt;/p&gt;
&lt;h2 id=&#34;probar-los-pipelines-de-jenkins-x&#34;&gt;Probar los Pipelines de Jenkins X&lt;/h2&gt;
&lt;p&gt;En este momento, para habilitar una instalación basada en Tekton, puede crear un nuevo clúster usando &lt;code&gt;jx&lt;/code&gt; junto con estos indicadores:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create cluster gke --tekton
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;O bien, si desea participar en la próxima generación de Jenkins X con GitOps incorporado para su entorno de desarrollo, utilizando Tekton y Vault para el almacenamiento de Secretos, utilice el siguiente comando (solo funciona en GCP y AWS en este momento):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create cluster gke --ng
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;La experiencia general del desarrollador, los complementos CLI e IDE deberían funcionar como antes, ¡pero utilizando los Recursos Personalizados de &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton Pipelines&lt;/a&gt; como maquinaria en lugar de crear un servidor Jenkins por equipo!&lt;/p&gt;
&lt;h2 id=&#34;utilizando-un-inicio-rápido&#34;&gt;Utilizando un Inicio Rápido&lt;/h2&gt;
&lt;p&gt;Una vez que se inicia su clúster, puede crear un nuevo inicio rápido, hemos estado usando el NodeJS de manera confiable.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create quickstart
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se crea un &lt;code&gt;prowjob&lt;/code&gt; (trabajo/ejecución de prow), un nuevo controlador pipelines prow vigila estos trabajos y cuando recibe un evento verificará si tiene una especificación &lt;code&gt;pipelinerun&lt;/code&gt; presente, si no, publicará el &lt;code&gt;prowjob&lt;/code&gt; en un nuevo servicio &lt;code&gt;pipelinerunner&lt;/code&gt; de Jenkins X que a su vez clona el repositorio que luego traducen a su &lt;code&gt;jenkins-x.yml&lt;/code&gt; en recursos comunes de Tekton Pipeline. Una vez que se crean, el controlador &lt;code&gt;tekton-pipeline-controller&lt;/code&gt; ejecuta las construcciones.&lt;/p&gt;
&lt;h2 id=&#34;diferencias-con-los-pipelines-de-jenkins&#34;&gt;Diferencias con los Pipelines de Jenkins&lt;/h2&gt;
&lt;p&gt;El Pipeline en Jenkins X utiliza un nuevo archivo &lt;code&gt;jenkins-x.yml&lt;/code&gt; que es YAML en lugar del fichero Groovy &lt;code&gt;Jenkinsfile&lt;/code&gt; utilizado por Jenkins.&lt;/p&gt;
&lt;p&gt;Sin embargo, todavía se están reutilizando los mismos paquetes de construcción reutilizables y de composición por detrás del telón. (Los paquetes de construcción de Jenkins X - &lt;a href=&#34;https://jenkins-x.io/docs/create-project/build-packs/&#34;&gt;build packs&lt;/a&gt; - en realidad están escritos en YAML en los Pipelines de Jenkins X).&lt;/p&gt;
&lt;p&gt;Una cosa que notará es que con los Pipelines de Jenkins X no necesitamos copiar/pegar un gran archivo &lt;code&gt;Jenkinsfile&lt;/code&gt; en el repositorio Git de cada aplicación; por lo general, el archivo &lt;code&gt;jenkins-x.yml&lt;/code&gt; generado es pequeño, como este:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;buildPack&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;maven&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;¡Eso es! Lo que eso significa básicamente es que, en tiempo de ejecución, el Pipeline de Jenkins X utilizará los paquetes de construcción - &lt;a href=&#34;https://jenkins-x.io/docs/create-project/build-packs/&#34;&gt;build packs&lt;/a&gt; - para generar el Pipeline de Tekton.&lt;/p&gt;
&lt;h2 id=&#34;personalizar-el-pipelines&#34;&gt;Personalizar el Pipelines&lt;/h2&gt;
&lt;p&gt;Tener paquetes de compilación - &lt;a href=&#34;https://jenkins-x.io/docs/create-project/build-packs/&#34;&gt;build packs&lt;/a&gt; - automatizados para hacer todo su CI+CD es bastante impresionante, ya que la mayoría de las veces sus microservicios se compilarán, probarán, empaquetarán, lanzarán y promocionarán de la misma manera. ¡CI+CD es a menudo un trabajo pesado indiferenciado que deberíamos automatizar!&lt;/p&gt;
&lt;p&gt;Sin embargo, hay veces que desea &lt;a href=&#34;https://jenkins-x.io/docs/create-project/build-packs/#pipelines&#34;&gt;personalizar un pipeline&lt;/a&gt; en particular (liberación, PR, característica, etc.) o modificar pasos involucrados dentro del &lt;a href=&#34;https://jenkins-x.io/docs/first-projects/build-packs/#life-cycles&#34;&gt;ciclo de vida&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Puede leer más sobre el &lt;a href=&#34;https://jenkins-x.io/docs/create-project/build-packs/#pipeline-extension-model&#34;&gt;modelo de extensión&lt;/a&gt; para descubrir todo lo que puede hacer. Básicamente, puede agregar pasos antes/después de cualquier ciclo de vida o reemplazar completamente un conjunto de ciclos de vida o incluso optar por salir del paquete de compilación por completo e alinear sus pipelines dentro de su &lt;code&gt;jenkins-x.yml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Para una forma rápida de agregar un nuevo paso en el ciclo de vida de su pipeline, utilice el comando &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx create step&lt;/a&gt;:&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/architecture/create-step.gif&#34; /&gt;
&lt;figcaption&gt;
&lt;h5&gt;Crea un nuevo paso en su Pipeline de Jenkins X a través del CLI&lt;/h5&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;También puede agregar o anular una variable de entorno en su pipeline a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_variable/&#34;&gt;jx create variable&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;modificaciones-en-vs-code&#34;&gt;Modificaciones en VS Code&lt;/h2&gt;
&lt;p&gt;Si está utilizando &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VS Code&lt;/a&gt;, le recomendamos que instale la &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml&#34;&gt;extensión de lenguaje YAML&lt;/a&gt; de Red Hat.&lt;/p&gt;
&lt;p&gt;Esta extensión le permite editar archivos YAML con validación de esquema JSON de forma opcional.&lt;/p&gt;
&lt;p&gt;El esquema JSON de Jenkins X ya está registrado en &lt;a href=&#34;http://schemastore.org/json/&#34;&gt;schemastore.org&lt;/a&gt;, por lo tanto, editar su archivo &lt;code&gt;jenkins-x.yml&lt;/code&gt; en VS Code incluirá la finalización inteligente y la validación.&lt;/p&gt;
&lt;figure&gt;
&lt;embed src=&#34;https://jenkins-x.io/images/architecture/yaml-edit.mp4&#34; autostart=&#34;false&#34; height=&#34;400&#34; width=&#34;600&#34; /&gt;
&lt;figcaption&gt;
&lt;h5&gt;Editar el Pipeline de Jenkins X en VS Code&lt;/h5&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Nos encantaría mejorar esta experiencia de usuario, por si te &lt;a href=&#34;https://jenkins-x.io/docs/contributing/&#34;&gt;apetece ayudar&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;modificaciones-en-idea&#34;&gt;Modificaciones en IDEA&lt;/h2&gt;
&lt;p&gt;Esto ya debería estar incluido de fábrica debido a que el esquema JSON de Jenkins X está registrado en &lt;a href=&#34;http://schemastore.org/json/&#34;&gt;schemastore.org&lt;/a&gt;, por lo que editar su archivo &lt;code&gt;jenkins-x.yml&lt;/code&gt; en IDEA incluirá la finalización inteligente y la validación.&lt;/p&gt;
&lt;p&gt;Nos encantaría mejorar esta experiencia de usuario, por si te &lt;a href=&#34;https://jenkins-x.io/docs/contributing/&#34;&gt;gustaría ayudar&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;variables-de-entorno-predeterminadas&#34;&gt;Variables de entorno predeterminadas&lt;/h2&gt;
&lt;p&gt;Las siguientes variables de entorno están disponibles para su uso en los pasos del Pipeline de Jenkins X:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Nombre&lt;/th&gt;
&lt;th&gt;Descripción&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;DOCKER_REGISTRY&lt;/td&gt;
&lt;td&gt;el servidor de registro de docker (p.ej. &lt;code&gt;docker.io&lt;/code&gt; o &lt;code&gt;gcr.io&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BUILD_NUMBER&lt;/td&gt;
&lt;td&gt;el número de construcción (1, 2, 3) comienza en &lt;code&gt;1&lt;/code&gt; para cada repo y rama&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PIPELINE_KIND&lt;/td&gt;
&lt;td&gt;el tipo de pipeline p.ej &lt;code&gt;release&lt;/code&gt; o &lt;code&gt;pullrequest&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PIPELINE_CONTEXT&lt;/td&gt;
&lt;td&gt;el contexto del pipeline si existen múltiples pipelines por PR (para diferenciar tests/governance/lint etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;REPO_OWNER&lt;/td&gt;
&lt;td&gt;el dueño del repositorio Git&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;REPO_NAME&lt;/td&gt;
&lt;td&gt;el nombre del repositorio Git&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JOB_NAME&lt;/td&gt;
&lt;td&gt;el nombre de la tarea que normalmente tiene este aspecto &lt;code&gt;$REPO_OWNER/$REPO_NAME/$BRANCH_NAME&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;APP_NAME&lt;/td&gt;
&lt;td&gt;el nombre de la applicación que normalmente es &lt;code&gt;$REPO_NAME&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BRANCH_NAME&lt;/td&gt;
&lt;td&gt;el nombre de la rama p.ej &lt;code&gt;master&lt;/code&gt; o &lt;code&gt;PR-123&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JX_BATCH_MODE&lt;/td&gt;
&lt;td&gt;indica a jx que utilice bash si el valor es &lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;VERSION&lt;/td&gt;
&lt;td&gt;contiene el número de versión que ha sido liberada o la versión de la vista previa del PR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BUILD_ID&lt;/td&gt;
&lt;td&gt;igual que &lt;code&gt;$BUILD_NUMBER&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JOB_TYPE&lt;/td&gt;
&lt;td&gt;la tipo de tarea de prow p.ej &lt;code&gt;presubmit&lt;/code&gt; para el PR o &lt;code&gt;postsubmit&lt;/code&gt; para la liberación&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PULL_BASE_REF&lt;/td&gt;
&lt;td&gt;la rama/referencia en Git&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PULL_BASE_SHA&lt;/td&gt;
&lt;td&gt;el SHA en Git que ha sido construido&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PULL_NUMBER&lt;/td&gt;
&lt;td&gt;para los PRs este será el número sin el prefijo &lt;code&gt;PR-&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PULL_REFS&lt;/td&gt;
&lt;td&gt;para combinar por lotes todas las referencias de Git&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Prow</title>
      <link>https://jenkins-x.io/es/docs/reference/components/prow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/prow/</guid>
      <description>
        
        
        &lt;p&gt;Prow es un sistema CI/CD basado en Kubernetes. Los trabajos pueden ser activados por varios tipos de eventos e informar su estado a muchos servicios diferentes. Además de la ejecución del trabajo, Prow proporciona automatización de GitHub en forma de cumplimiento de políticas, operaciones de chat a través de comandos de estilo /foo y mezclas automáticamente las solicitudes de extracción (Pull Request, PR).&lt;/p&gt;
&lt;p&gt;Prow tiene una arquitectura de microservicio implementada como una colección de contenedor que se ejecutan como despliegues de Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;hook&#34;&gt;hook&lt;/h2&gt;
&lt;p&gt;Hay un &lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow/cmd/hook&#34;&gt;binario llamado hook&lt;/a&gt; que recibe todos los enganches web de GitHub. Es un servidor sin estado que escucha los webhooks de GitHub y los envía a los plugins apropiados. Los plugins de Hook se usan para activar trabajos, implementar comandos en &lt;code&gt;slash&lt;/code&gt;, publicar en Slack y más. El enlace binario expone un punto final /hook para recibir las solicitudes de enlace web del servidor Git (básicamente todos los enlaces web van a /hook). Hay una regla de ingreso que expone ese punto final al exterior del clúster.&lt;/p&gt;
&lt;h2 id=&#34;prow-plugins&#34;&gt;Prow Plugins&lt;/h2&gt;
&lt;p&gt;El &lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow/cmd/hook&#34;&gt;binario hook&lt;/a&gt; usa diferentes plugins que se pueden habilitar/deshabilitar de forma independiente, para hacer cosas diferentes. Básicamente son controladores de eventos para los diferentes eventos de GitHub recibidos a través de enlaces web. Estos plugins se configuran utilizando una configuración yaml que se pasa desde un ConfigMap de Kubernetes para establecer el enlace, y se puede habilitar por repositorio u organización.
Todos los plugins tienen la misma interfaz. El proceso de enlace pasa dos objetos a cada plugin es: un cliente del plugin que les permite hablar con k8s, git, GitHub, los archivos de propietarios en git repo, slack, etc., y el evento deserializado de GitHub (como IssueCommentEvent).&lt;/p&gt;
&lt;h3 id=&#34;lgtm-plugin&#34;&gt;lgtm plugin&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow/plugins/lgtm&#34;&gt;El plugin LGTM&lt;/a&gt; es un buen ejemplo para comenzar a usar plugins. Es un complemento que agrega la etiqueta LGTM cuando alguien comenta /lgtm en una solicitud de extracción.&lt;/p&gt;
&lt;h3 id=&#34;updateconfig-plugin&#34;&gt;UpdateConfig plugin&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow/plugins/updateconfig&#34;&gt;Un plugin que actualiza automáticamente un ConfigMap&lt;/a&gt; cada vez que se mezcla un PR en un repositorio. De esta forma, puede mantener actualizados automáticamente sus ConfigMaps, siguiendo un flujo de GitOps.
Puede asignar archivos específicos a ConfigMaps, o incluso usar expresiones regulares.
Normalmente se usa para actualizar el ConfigMap que contiene la configuración de Prow, por lo que cada vez que un PR se mezcla con cambios en los archivos que contienen la configuración de Prow, ConfigMap se actualizará automáticamente.&lt;/p&gt;
&lt;h3 id=&#34;trigger-plugin&#34;&gt;Trigger plugin&lt;/h3&gt;
&lt;p&gt;Probablemente el plugin más importante. Es un plugin que reacciona a los comentarios en los PR, por lo que podemos desencadenar construcciones (escribiendo &amp;ldquo;prueba&amp;rdquo; como un comentario o cualquier otro desencadenante). Determina qué trabajos ejecutar en función de la configuración del trabajo. Cuando encuentra un trabajo que necesita ser activado, crea un &lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/apis/prowjobs/v1/types.go#L85&#34;&gt;ProwJob CRD&lt;/a&gt;, utilizando la configuración que se encuentra en el enganche del ConfigMap (de esa manera puede crear un objeto &lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/apis/prowjobs/v1/types.go#L85&#34;&gt;ProwJob&lt;/a&gt; diferente dependiendo de la organización o repositorio, como usar un agente de construcción diferente (Jenkins vs Knative vs pods), el tipo de trabajo, etc. Este CRD contiene algunos campos interesantes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;agent: para seleccionar qué controlador k8s se encargará de este trabajo&lt;/li&gt;
&lt;li&gt;refs: Repositorio y revisión de GitHub para usar para el código fuente&lt;/li&gt;
&lt;li&gt;type: ya sea envío previo o posterior al envío (ejecute el trabajo antes de mezclar o publicar)&lt;/li&gt;
&lt;li&gt;pod_spec: especificación para crear un objeto Pod, si usamos &lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow/plank&#34;&gt;plank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;build_spec: especificación para crear un &lt;a href=&#34;https://github.com/knative/docs/blob/master/build/builds.md&#34;&gt;objeto Knative Build&lt;/a&gt;, si se está utilizando &lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/cmd/build/controller.go&#34;&gt;prow-build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El ciclo de vida de un &lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/apis/prowjobs/v1/types.go#L85&#34;&gt;ProwJob&lt;/a&gt; es gestionado por el controlador de ProwJob que está ejecutándose en el clúster. Los posibles estados del ProwJob son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;triggered: el trabajo ha sido creado pero aún no está programado.&lt;/li&gt;
&lt;li&gt;pending: el trabajo ha sido programado pero no ejecutado.&lt;/li&gt;
&lt;li&gt;Success/failure: El trabajo se ha completado.&lt;/li&gt;
&lt;li&gt;aborted: significa que Prow detuvo el trabajo antes de tiempo (nueva confirmación empujada, tal vez).&lt;/li&gt;
&lt;li&gt;error: significa que el trabajo no ha sido programado (tal vez por una mala configuración).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;job-type&#34;&gt;Job Type&lt;/h4&gt;
&lt;p&gt;En la configuración de Prow, puede configurar trabajos de Presubmits y Postsubmits por repositorio que se activan con el plugin de activación. Los envíos previos (&lt;code&gt;Presubmits&lt;/code&gt;) se ejecutan cuando el código PR cambia (abriendo un nuevo PR o enviando código a la rama del PR), para que pueda probar los cambios en su nuevo código. Las publicaciones posteriores (&lt;code&gt;Postsubmits&lt;/code&gt;) se ejecutan cada vez que aparece una nueva confirmación en una rama de origen (evento push de GitHub).&lt;/p&gt;
&lt;p&gt;El caso de uso para envíos posteriores es donde puede haber menos de 100 mezclas por día en un repositorio de gran volumen, pero podría haber diez o cien veces más que muchos trabajos de envío previo ejecutados. Los envíos de correos se pueden usar cuando algo es muy costoso de probar y no necesariamente bloquea la mezcla, pero sí desea señal. Del mismo modo, la forma en que mezcla el sistema es que su verificación previa al envío se ejecutará con su código mezclado en la rama a la que se dirige, por lo que técnicamente el compromiso de mezcla que termina en la rama &lt;code&gt;master&lt;/code&gt; ya se ha probado de manera efectiva y, a menudo, esto significa que puede desea un trabajo de envío previo pero no duplicarlo también, ya que no le da más señal.&lt;/p&gt;
&lt;h3 id=&#34;prowjob-controllers&#34;&gt;ProwJob controllers&lt;/h3&gt;
&lt;p&gt;Más tarde, podemos usar diferentes operadores de Kubernetes que reaccionan a los objetos ProwJob para ejecutar nuestras construcciones, en función del campo del agente (cada operador busca ProwJobs con un valor de agente específico):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/plank/controller.go&#34;&gt;Plank&lt;/a&gt; es uno que utiliza pods de Kubernetes. Usa el campo &lt;code&gt;pod_spec&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/cmd/build/controller.go&#34;&gt;prow-build&lt;/a&gt; es un operador de construcción que utiliza Knative Build CRD. Utiliza el campo &lt;code&gt;build_spec&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;There is a &lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/jenkins/controller.go&#34;&gt;jenkins-operator&lt;/a&gt; que se ejecuta en Jenkins. Esto no se recomienda actualmente.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Estos controladores administran &lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/life_of_a_prow_job.md&#34;&gt;el ciclo de vida de un ProwJob&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;plankhttpsgithubcomkubernetestest-infratreemasterprowplank&#34;&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow/plank&#34;&gt;plank&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Plank es un operador de Kubernetes que reacciona a los recursos personalizados de ProwJob. Crea un Pod para ejecutar la compilación asociada con el objeto ProwJob. El objeto ProwJob en sí contiene un PodSpec.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Si ProwJob no tiene un Pod, crea un pod para ejecutar la construcción. Use init-container para hacer la obtención de VCS.&lt;/li&gt;
&lt;li&gt;Si ProwJob tiene un Pod con estado completado, marque ProwJob como completado.&lt;/li&gt;
&lt;li&gt;Si se completa ProwJob, no haga nada.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nosotros utilizamos construcciones Knative en Jenkins X, que utilizan el &lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/cmd/build/controller.go&#34;&gt;controlador prow-build&lt;/a&gt;, por lo que no tiene que preocuparse por plank.&lt;/p&gt;
&lt;h4 id=&#34;prow-buildhttpsgithubcomkubernetestest-infrablobmasterprowcmdbuildcontrollergo&#34;&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/cmd/build/controller.go&#34;&gt;prow-build&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Operador de Kubernetes que observa los objetos de ProwJob y reacciona a aquellos cuyo campo de agente es el agente de construcción Knative. Creará &lt;a href=&#34;https://github.com/knative/docs/blob/master/build/builds.md&#34;&gt;un objeto Knative Build&lt;/a&gt; basado en el campo &lt;code&gt;build_spec&lt;/code&gt; del objeto ProwJob.
&lt;a href=&#34;https://github.com/knative/build/blob/master/cmd/controller/main.go&#34;&gt;El controlador de construcción de Knative&lt;/a&gt; reacciona y crea un Pod para ejecutar la construcción. Todos los ProwJob, Build y Pod tienen el mismo nombre (un UUID).&lt;/p&gt;
&lt;p&gt;El objeto Build contiene campos interesantes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;serviceAccountName: &lt;a href=&#34;https://github.com/knative/docs/blob/master/build/auth.md&#34;&gt;ServiceAccount contiene los Secrets necesarios para acceder al servidor Git o al registro Docker&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;source: Repositorio y revisión de Git para usar para el código fuente.&lt;/li&gt;
&lt;li&gt;steps: Especifica una o más imágenes de contenedores que desea ejecutar en su construcción. Cada imagen de contenedor se ejecuta hasta su finalización o hasta que se detecta la primera falla.&lt;/li&gt;
&lt;li&gt;template: contiene el nombre de un Knative BuildTemplate registrado, junto con las variables de entorno para pasar al objeto Build. La plantilla debe ser un objeto BuildTemplate que exista en el clúster. &lt;strong&gt;Si se define el campo de plantilla, el campo de pasos se ignorará&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;steps&#34;&gt;Steps&lt;/h5&gt;
&lt;p&gt;Los pasos en una compilación son las diferentes acciones que se ejecutarán como parte de esa construcción. Cada paso en una construcción que debe especificar una imagen del Builder, o el tipo de imagen del contenedor que se adhiere al &lt;a href=&#34;https://github.com/knative/docs/blob/master/build/builder-contract.md&#34;&gt;Contrato del constructor Knative&lt;/a&gt; . Estos pasos/imágenes del constructor&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Se ejecutan y evalúan en orden, comenzando desde la parte superior del archivo de configuración.&lt;/li&gt;
&lt;li&gt;Cada uno se ejecuta hasta su finalización o hasta que se detecta la primera falla.&lt;/li&gt;
&lt;li&gt;Tener dos volúmenes que se comparten entre todos los pasos. Uno se montará en /workspace, que contiene el código especificado en el campo fuente Build. Otro es /builder/home que está montado en $HOME, y se usa principalmente para guardar archivos de credenciales que se usarán en diferentes pasos.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Una imagen del builder es una imagen especial que podemos ejecutar como un paso de Build CRD, y que normalmente es un contenedor especialmente diseñado cuyo punto de entrada es una herramienta que realiza algunas acciones y sale con un estado cero en caso de éxito. Estos puntos de entrada suelen ser herramientas de línea de comandos, por ejemplo, git, docker, mvn, etc.&lt;/p&gt;
&lt;h5 id=&#34;buildtemplate&#34;&gt;BuildTemplate&lt;/h5&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/knative/docs/blob/master/build/build-templates.md&#34;&gt;Un BuildTemplate&lt;/a&gt; encapsula un proceso de compilación compartida con algunas capacidades de parametrización limitadas.&lt;/p&gt;
&lt;p&gt;Una plantilla contiene pasos para ejecutar en la compilación. En lugar de especificar los mismos pasos en diferentes compilaciones, podemos reutilizar esos pasos creando una BuildTemplate que contenga estos pasos. Utilizamos BuildTemplates para compartir pasos entre diferentes Builds. Hay &lt;a href=&#34;https://github.com/knative/build-templates/&#34;&gt;BuildTemplates de la comunidad&lt;/a&gt; que puede usar, o puede definir sus propias plantillas.&lt;/p&gt;
&lt;h6 id=&#34;jenkins-x-build-templates&#34;&gt;Jenkins X Build Templates&lt;/h6&gt;
&lt;p&gt;Jenkins X utiliza BuildTemplates personalizadas para ejecutar las compilaciones de las aplicaciones. En &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-serverless&#34;&gt;este repositorio&lt;/a&gt; puede encontrar las diferentes BuildTemplates disponibles, según el lenguaje de la aplicación. Estas BuildTemplates usan una imagen de constructor de Step diferente según el lenguaje, ya que tienen que construir la aplicación usando diferentes herramientas como maven, go o Gradle. Por lo tanto, cada imagen de Builder tiene diferentes herramientas instaladas, aunque eventualmente todas las imágenes de Builder básicamente ejecutan &lt;a href=&#34;https://jenkins-x.io/news/serverless-jenkins/&#34;&gt;Jenkins sin servidor&lt;/a&gt; (también conocido como &lt;a href=&#34;https://github.com/jenkinsci/jenkinsfile-runner&#34;&gt;Jenkinsfile-Runner&lt;/a&gt;). Eso permite que nuestras compilaciones definan los pasos en un Jenkinsfile. Todos estos pasos se ejecutan dentro del mismo &lt;a href=&#34;https://hub.docker.com/r/jenkins/jenkinsfile-runner/dockerfile/&#34;&gt;contenedor Jenkinsfile Runner&lt;/a&gt;, que no coincide con el modelo de pasos de Knative Build.&lt;/p&gt;
&lt;h5 id=&#34;el-trabajo-se-ejecuta-dentro-del-pod&#34;&gt;El trabajo se ejecuta dentro del Pod&lt;/h5&gt;
&lt;p&gt;El Pod que se creó para ejecutar la compilación real tiene un contenedor que no hace nada, pero tiene contenedores de inicio para realizar los pasos necesarios para ejecutar el trabajo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/knative/build/tree/master/cmd/creds-init&#34;&gt;creds-init&lt;/a&gt;: Los Secrets de la cuenta de servicio se montan en /var/build-secrets/ para que este contenedor tenga acceso a ellos. Los agrega en sus respectivos archivos de credenciales en $HOME, que es otro volumen compartido entre todos los pasos. Típicamente credenciales para el servidor git y el registro de docker.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/knative/build/tree/master/cmd/git-init&#34;&gt;git-init&lt;/a&gt;: clona el repositorio SHA/revisión Git especificado en uno de los volúmenes compartidos /workspace&lt;/li&gt;
&lt;li&gt;Otro contenedor de inicio para cada paso definido en Build o BuildTemplate.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recuerde que cada contenedor de inicio usa su propia imagen de contenedor. Además, tienen diferentes namespaces de Linux del sistema de archivos. Pero tienen algunos volúmenes compartidos como las carpetas $HOME y /workspace.&lt;/p&gt;
&lt;h2 id=&#34;sinker&#34;&gt;sinker&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow/cmd/sinker&#34;&gt;Recolector de basura&lt;/a&gt; para ProwJobs y Pods creados para ejecutar compilaciones. Elimina ProwJobs completos después de 2 días y pods completados después de 30 minutos.&lt;/p&gt;
&lt;h2 id=&#34;crier&#34;&gt;crier&lt;/h2&gt;
&lt;p&gt;Otro controlador de Kubernetes que mira CRD de ProwJobs. Contiene diferentes notificadores de los cambios de ProwJob a clientes externos, como la verificación del estado de GitHub o un mensaje a PubSub.&lt;/p&gt;
&lt;p&gt;Se utiliza para actualizar el estado de confirmación de GitHub cuando finaliza ProwJob.&lt;/p&gt;
&lt;h2 id=&#34;deck&#34;&gt;deck&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://prow.k8s.io/&#34;&gt;Presenta una UI de trabajos recientes&lt;/a&gt; e &lt;a href=&#34;https://prow.k8s.io/command-help&#34;&gt;información de ayuda de comandos/plugins&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;tide&#34;&gt;tide&lt;/h2&gt;
&lt;p&gt;Los RP que satisfacen un conjunto de criterios predefinidos se pueden configurar para que &lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/master/prow/cmd/tide/README.md&#34;&gt;Tide&lt;/a&gt; los mezcle automáticamente. Volverá a probar automáticamente los RP que cumplan con los criterios (&amp;ldquo;marea alta&amp;rdquo;) y los mezclará automáticamente cuando tengan resultados de prueba aprobados (&amp;ldquo;marea baja&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;Consultará a GitHub de vez en cuando tratando de mezclar las solicitudes de extracción. No reacciona a los eventos, no es un plugin.&lt;/p&gt;
&lt;h2 id=&#34;esfuerzos-en-curso&#34;&gt;Esfuerzos en curso&lt;/h2&gt;
&lt;p&gt;Uso de contenedores de inicio para los pasos &lt;a href=&#34;https://github.com/knative/build/pull/470&#34;&gt;puede cambiar en el futuro&lt;/a&gt;, debido a limitaciones en los contenedores de inicio.
Knative Build CRD está en desuso en favor de Pipeline CRD. Build CRD será reemplazado por el nuevo Task CRD, pero son muy similares.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Lighthouse</title>
      <link>https://jenkins-x.io/es/docs/reference/components/lighthouse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/lighthouse/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow&#34;&gt;Prow&lt;/a&gt; es una excelente manera de hacer &lt;a href=&#34;https://jenkins-x.io/es/docs/resources/faq/using/chatops/&#34;&gt;ChatOps&lt;/a&gt; con los &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/&#34;&gt;Pipelines de Jenkins X&lt;/a&gt;, aunque desafortunadamente solo es compatible con GitHub.com y es bastante pesado y complejo. Para solucionar este problema, hemos creado &lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;Lighthouse&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;Lighthouse&lt;/a&gt; es un gestor de webhooks ligero basado en &lt;a href=&#34;https://jenkins-x.io/es/docs/resources/faq/using/chatops/&#34;&gt;ChatOps&lt;/a&gt; que puede activar los &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/&#34;&gt;Pipelines de Jenkins X&lt;/a&gt; en webhooks de múltiples proveedores de git como: GitHub, GitHub Enterprise, BitBucket Server, BitBucket Cloud, GitLab, Gogs y Gitea.&lt;/p&gt;
&lt;p&gt;Actualmente, Lighthouse se enfoca en usar &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipelines&lt;/a&gt; con Tekton, aunque a largo plazo podría reutilizarse con Tekton orquestando pipelines de Jenkins a través de la aplicación &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/custom-jenkins/&#34;&gt;Custom Jenkins Server&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;p&gt;Actualmente, Lighthouse admite los &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/tree/master/pkg/prow/plugins&#34;&gt;plugins comunes de prow&lt;/a&gt; y maneja los webhooks de inserción a las ramas y los webhooks de solicitud de extracción para luego activar los pipelines Jenkins X.&lt;/p&gt;
&lt;p&gt;Lighthouse utiliza la misma estructura de archivos &lt;code&gt;config.yaml&lt;/code&gt; and &lt;code&gt;plugins.yaml&lt;/code&gt; de Prow para que podamos migrar fácilmente desde &lt;code&gt;prow &amp;lt;-&amp;gt; lighthouse&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Esto también significa que podemos reutilizar la limpia generación de la configuración de Prow desde los CRD de &lt;code&gt;SourceRepository&lt;/code&gt;, &lt;code&gt;SourceRepositoryGroup&lt;/code&gt; y &lt;code&gt;Scheduler&lt;/code&gt; integrados en &lt;a href=&#34;https://jenkins-x.io/docs/reference/boot/&#34;&gt;jx boot&lt;/a&gt;. p.ej. Aquí está la &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/env/templates/default-scheduler.yaml&#34;&gt;configuración predeterminada del planificador&lt;/a&gt; que se utiliza para cualquier proyecto importado a su clúster Jenkins X; sin tener que tocar los archivos de configuración de Prow. Puede crear muchos planificadores y asociarlos a diferentes recursos de &lt;code&gt;SourceRepository&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;También podemos reutilizar la capacidad de Prow de definir muchos pipelines separados en un repositorio (para PR o versiones) a través de contextos separados. Luego, en una solicitud de extracción, podemos usar &lt;code&gt;/test something&lt;/code&gt; o &lt;code&gt;/test all&lt;/code&gt; para activar los pipelines y usar los comandos &lt;code&gt;/ok-to-test&lt;/code&gt; y &lt;code&gt;/approve&lt;/code&gt; o &lt;code&gt;/lgtm&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;using-lighthouse-with-boot&#34;&gt;Using Lighthouse with boot&lt;/h2&gt;
&lt;p&gt;Hemos integrado &lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;lighthouse&lt;/a&gt; en &lt;a href=&#34;https://jenkins-x.io/docs/reference/boot/&#34;&gt;jx boot&lt;/a&gt;. Para cambiar a &lt;code&gt;lighthouse&lt;/code&gt; desde &lt;code&gt;prow&lt;/code&gt;, debe agregar algo como esto a su fichero &lt;code&gt;jx-requirements.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;webhook&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lighthouse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Una vez modificado su fichero &lt;code&gt;jx-requirements.yml&lt;/code&gt; solo tiene que ejecutar el comando &lt;code&gt;jx boot&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Si está utilizando algo más que github.com como su proveedor de git, también necesitará un poco más de YAML para configurar el proveedor de git. Aquí hay unos ejemplos:&lt;/p&gt;
&lt;h2 id=&#34;github-enterprise&#34;&gt;GitHub Enterprise&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;cluster&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;provider&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gke&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;zone&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;europe-west1-c&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;environmentGitOwner&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myowner&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gitKind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;github&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gitName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ghe&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gitServer&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://my-github.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;webhook&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lighthouse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;bitbucket-server&#34;&gt;BitBucket Server&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;cluster&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;provider&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gke&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;environmentGitOwner&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myowner&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gitKind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bitbucketserver&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gitName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gitServer&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://my-bitbucket-server.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;webhook&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lighthouse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;gitlab&#34;&gt;GitLab&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;cluster&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;provider&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gke&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;environmentGitOwner&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myowner&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gitKind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gitlab&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gitName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gitlab&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;gitServer&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://my-gitlab-server.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;webhook&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;lighthouse&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;comparaciones-con-prow&#34;&gt;Comparaciones con Prow&lt;/h2&gt;
&lt;p&gt;Lighthouse es muy parecido a Prow y actualmente reutiliza el código fuente del complemento Prow y un &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/tree/master/pkg/prow/plugins&#34;&gt;montón de plugins de prow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sin embargo, tiene algunas diferencias:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;en lugar de ser un faro específico de GitHub, utiliza &lt;a href=&#34;https://github.com/jenkins-x/go-scm&#34;&gt;jenkins-x/go-scm&lt;/a&gt; para que pueda ser compatible con cualquier proveedor de git&lt;/li&gt;
&lt;li&gt;lighthouse es principalmente como el servicio &lt;code&gt;hook&lt;/code&gt; de Prow; un controlador de webhook de escala automática: para mantener el tamaño reducido. Esto también significa que si algo sale mal manejando webhooks, solo tiene un pod para investigar.&lt;/li&gt;
&lt;li&gt;lighthouse también es muy ligero. En Jenkins X tenemos alrededor de 10 pods relacionados con Prow; con lighthouse tenemos solo 1 junto con el controlador Tekton en sí. Ese módulo lighthouse también podría escalarse fácilmente de 0 a muchos, ya que se inicia muy rápidamente.&lt;/li&gt;
&lt;li&gt;lighthouse se centra exclusivamente en las tuberías de Tekton, por lo que no requiere un CRD &lt;code&gt;ProwJob&lt;/code&gt;; en cambio, un webhook de inserción a una rama de solicitud de liberación o extracción puede desencadenar cero a muchos CRD de &lt;code&gt;PipelineRun&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;portar-comandos-de-prow&#34;&gt;Portar comandos de Prow&lt;/h2&gt;
&lt;p&gt;Si hay algún comando de Prow que desee que aún no hayamos transferido, es relativamente fácil portar plugins de Prow.&lt;/p&gt;
&lt;p&gt;Hemos reutilizado el código del plugin de Prow y el código de configuración; Por lo tanto, se trata principalmente de cambiar las importaciones de &lt;code&gt;k8s.io/test-infra/prow&lt;/code&gt; a &lt;code&gt;github.com/jenkins-x/lighthouse/pkg/prow&lt;/code&gt;, y luego modificar las estructuras del cliente github de, por ejemplo, &lt;code&gt;github.PullRequest&lt;/code&gt; a &lt;code&gt;scm.PullRequest&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;La mayoría de las estructuras de github mapean 1-1 con los equivalentes &lt;a href=&#34;https://github.com/jenkins-x/go-scm&#34;&gt;jenkins-x/go-scm&lt;/a&gt; (por ejemplo, Issue, Commit, PullRequest) aunque la API go-scm tiende a devolver segmentos a los recursos de forma predeterminada. Sin embargo, hay algunas diferencias de nombres en diferentes partes de la API.&lt;/p&gt;
&lt;p&gt;p.ej. compare la API de &lt;code&gt;githubClient&lt;/code&gt; para &lt;a href=&#34;https://github.com/kubernetes/test-infra/blob/344024d30165cda6f4691cc178f25b16f1a1f5af/prow/plugins/lgtm/lgtm.go#L134-L150&#34;&gt;prow lgtm&lt;/a&gt; versus &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/blob/master/pkg/prow/plugins/lgtm/lgtm.go#L135-L150&#34;&gt;lighthouse lgtm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Todo el código relacionado con el plugin Prow vive en el árbol de paquetes &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/tree/master/pkg/prow&#34;&gt;pkg/prow&lt;/a&gt;. En general, todo lo que hemos hecho es cambiar a &lt;a href=&#34;https://github.com/jenkins-x/go-scm&#34;&gt;jenkins-x/go-scm&lt;/a&gt; y cambiar los agentes de Prow actuales y, en su lugar, usar un solo agente Tekton usando &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/blob/master/pkg/plumber/interface.go#L3-L6&#34;&gt;PlumberClient&lt;/a&gt; para activar los pipelines.&lt;/p&gt;
&lt;h2 id=&#34;variables-de-entornos&#34;&gt;Variables de entornos&lt;/h2&gt;
&lt;p&gt;Las siguientes variables de entornos son utilizadas:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Nombre&lt;/th&gt;
&lt;th&gt;Descripción&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GIT_KIND&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;el tipo de servidor git: &lt;code&gt;github, bitbucket, gitea, stash&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GIT_SERVER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;la URL del servidor si no usa los proveedores públicos alojados de Git: &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt; or &lt;a href=&#34;https://bitbucket.org&#34;&gt;https://bitbucket.org&lt;/a&gt; &lt;a href=&#34;https://gitlab.com&#34;&gt;https://gitlab.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GIT_USER&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;el usuario git (bot name) a utilizar en las operacionse de Git&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;GIT_TOKEN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;el token de git para realizar las operaciones en el repositorio (agregar comentarios, etiquetas, etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;HMAC_TOKEN&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;el token enviado desde el proveedor Git en los webhooks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;JX_SERVICE_ACCOUNT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;la cuenta de servicio que se usará para los pipelines generados&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Antecedentes</title>
      <link>https://jenkins-x.io/es/docs/getting-started/setup/boot/background/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/setup/boot/background/</guid>
      <description>
        
        
        &lt;p&gt;En los últimos 1-2 años, hemos aprendido que hay muchos tipos diferentes de clúster de Kubernetes y formas de configurar cosas como Ingress, DNS, dominios, certificados. Esta gran diversidad implica el aumento de la complejidad en los comandos actuales &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster/&#34;&gt;jx create cluster&lt;/a&gt; y &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx install&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Además, ahora se recomienda usar herramientas como Terraform para administrar todos sus recursos en la nube: crear / actualizar clústeres de Kubernetes, buckets de almacenamiento en la nube, cuentas de servicio, KMS, etc.&lt;/p&gt;
&lt;p&gt;Detectamos también que teníamos muchos segmentos diferentes de lógica de instalación distribuidos por distintos comandos, por ejemplo, &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster/&#34;&gt;jx create cluster&lt;/a&gt;, &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx install&lt;/a&gt;, el uso del &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/manage-via-gitops/&#34;&gt;parámetro &amp;ndash;gitops&lt;/a&gt;. A esto le podemos sumar las diferentes formas de gestionar la información sensible (Secrets). Esta gran matrix de combinaciones hace muy difícil el poder probar y mantener de forma sólida cada comando.&lt;/p&gt;
&lt;p&gt;Además, nos topamos con problemas en los comandos &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster/&#34;&gt;jx create cluster&lt;/a&gt; y &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx install&lt;/a&gt; porque estos deben instalar componentes como el Ingerss Controller y no se estaba dando la posibilidad de modificar/quitar su instalación.&lt;/p&gt;
&lt;p&gt;Los usuarios a menudo tuvieron dificultades para comprender cómo configurar y anular fácilmente las cosas; o actualizar valores después de que las cosas se hayan instalado.&lt;/p&gt;
&lt;p&gt;Por lo tanto, queríamos llegar a un nuevo enfoque limpio, libre de los problemas mencionados anteriormente. Este nuevo enfoque funcionara para todo tipo de instalación y proporcionará una forma estándar de ampliar y personalizar la configuración a través de &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipelines&lt;/a&gt; y del estilo de configuración de Helm.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Crear Aplicación Spring</title>
      <link>https://jenkins-x.io/es/docs/getting-started/demos-talks-posts/create_spring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/demos-talks-posts/create_spring/</guid>
      <description>
        
        
        &lt;p&gt;Este &lt;a href=&#34;https://www.youtube.com/watch?v=kPes3rvT1UM&#34;&gt;demo&lt;/a&gt; utiliza el comando &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx create spring&lt;/a&gt; para &lt;a href=&#34;https://jenkins-x.io/developing/create-spring/&#34;&gt;crear una aplicación Spring Boot con pipelines CI/CD&lt;/a&gt; y &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/features/#promoci%C3%B3n&#34;&gt;Promociones GitOps&lt;/a&gt;:&lt;/p&gt;
&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/kPes3rvT1UM&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Google</title>
      <link>https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/google/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/google/</guid>
      <description>
        
        
        &lt;h2 id=&#34;utilizando-la-consola-de-google-cloud&#34;&gt;Utilizando la Consola de Google Cloud&lt;/h2&gt;
&lt;p&gt;Puedes crear un clúster de Kubernetes in pocos clics en la &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;Consolo de Google Cloud&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Primero garantiza tener creado/seleccionado un proyecto:&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/quickstart/gke-select-project.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;p&gt;Luego puedes dar clic en el botón &lt;code&gt;create cluster&lt;/code&gt; en la página de los &lt;a href=&#34;https://console.cloud.google.com/kubernetes/list&#34;&gt;clústeres de Kubernetes&lt;/a&gt; o intentar &lt;a href=&#34;https://console.cloud.google.com/kubernetes/add&#34;&gt;crear un clúster&lt;/a&gt; directamente.&lt;/p&gt;
&lt;h2 id=&#34;utilizando-gcloud&#34;&gt;Utilizando gcloud&lt;/h2&gt;
&lt;p&gt;La interfaz de líneas de comandos (CLI) para trabajar con Google Cloud es &lt;code&gt;gcloud&lt;/code&gt;. Si no la tienes instalada entonces por favor &lt;a href=&#34;https://cloud.google.com/sdk/install&#34;&gt;instale gcloud&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para crear un cluster con gcloud siga &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-cluster&#34;&gt;las siguientes instrucciones&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;utilizando-google-cloud-shell&#34;&gt;Utilizando Google Cloud Shell&lt;/h2&gt;
&lt;p&gt;Si no quieres instalar &lt;code&gt;gcloud&lt;/code&gt; puedes utilizar &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;Google Cloud Shell&lt;/a&gt; porque tiene incluidos la mayoría de los componentes que necesitarás para la instalación (&lt;code&gt;git, gcloud, kubectl&lt;/code&gt;, etc).&lt;/p&gt;
&lt;p&gt;Primero necesitas abrir utilizar el botón de la barra de herramientas para abrir Google Cloud Shell:&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/quickstart/gke-start-shell.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;p&gt;Una veza abierto podrás crear el clúster utilizando &lt;code&gt;gcloud&lt;/code&gt; juanto a &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-cluster&#34;&gt;las siguientes instrucciones&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;conectando-con-el-clúster&#34;&gt;Conectando con el clúster&lt;/h2&gt;
&lt;p&gt;Una vez creado el clúster vas a necesitar conectarte a él a través de las herramienas &lt;code&gt;kubectl&lt;/code&gt; o &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/install/&#34;&gt;jx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para lograrlo, has clic en el botón &lt;code&gt;Connect&lt;/code&gt; en la página &lt;a href=&#34;https://console.cloud.google.com/kubernetes/list&#34;&gt;Kubernetes Engine page&lt;/a&gt; en la &lt;a href=&#34;https://console.cloud.google.com/&#34;&gt;Consola de Google&lt;/a&gt;.&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/quickstart/gke-connect.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;p&gt;Ahora deberías poder utilizar las herramientas CLI &lt;code&gt;kubectl&lt;/code&gt; y &lt;code&gt;jx&lt;/code&gt; desde su laptop para comunicarte con el clúster GKE. Por ejemplo, el siguiente comando debería listar los nodos presentes en su clúster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get node
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>About: Madurez de las Funcionalidades</title>
      <link>https://jenkins-x.io/es/about/maturity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/about/maturity/</guid>
      <description>
        
        
        &lt;h1 id=&#34;niveles-de-madurez-y-definiciones&#34;&gt;Niveles de Madurez y Definiciones&lt;/h1&gt;
&lt;p&gt;Las funcionalidades generalmente pasarán por los siguientes niveles de madurez (aunque algunas nunca pueden ser obsoletas)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Experimental - en inglés Experimental&lt;/li&gt;
&lt;li&gt;Estable - en inglés Stable&lt;/li&gt;
&lt;li&gt;Producción - en inglés Production&lt;/li&gt;
&lt;li&gt;Obsoleta - en inglés Deprecated&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Cada uno de los niveles se detalla a continuación, incluidas las pasos por las que debe pasar una funcionalidad para &amp;ldquo;subir de nivel&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;experimental&#34;&gt;Experimental&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    TL;DR: Úselo bajo su propio riesgo

&lt;/div&gt;

&lt;p&gt;Este sería el nivel inicial para la mayoría de las nuevas funcionalidades. Es probable que sea el primer impulso de algo que al menos funcione para el contribuyente. No se espera que las funcionalidades en este nivel cumplan con los requisitos, y podría ser una sugerencia de cómo abordar un problema determinado. También podría ser una cosa muy bien estructurada, pensada y pulida que en su mayoría solo necesita ser examinada por otros antes de ser elevada en madurez.&lt;/p&gt;
&lt;p&gt;La conclusión principal para este nivel de madurez es que existe el riesgo de que las cosas cambien (configuración/alcance/comportamiento/etc.) y probablemente no sea algo en lo que deba confiar en un entorno de producción a menos que sienta que sabe lo que está haciendo.&lt;/p&gt;
&lt;h2 id=&#34;estable&#34;&gt;Estable&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    TL;DR: Funcionalidad completa; necesita más pruebas/documentación

&lt;/div&gt;

&lt;p&gt;Después de haber estado en el estado Experimental durante un período de tiempo, y la función ha recibido comentarios de otros, etc., eventualmente debería alcanzar un estado de función completa, donde se puede esperar que funcione en la mayoría de las circunstancias. Es posible que las pruebas automatizadas aún sean pocas y que la documentación también deba desarrollarse un poco más.&lt;/p&gt;
&lt;p&gt;Para que una funcionalidad alcance este nivel, debería haber llegado a un punto en el que no se espera que cambien varios &amp;ldquo;contratos&amp;rdquo; (configuración, API, etc.); al menos no drásticamente. También debe tener algunas pruebas automatizadas y documentación; al menos para los flujos principales. Lo que debería permanecer es, en su mayoría, solo correcciones de errores, pruebas y la documentación completa.&lt;/p&gt;
&lt;h2 id=&#34;producción&#34;&gt;Producción&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    TL;DR: Nivel de produccion. Bien probado y documentado

&lt;/div&gt;

&lt;p&gt;Este es el nivel final de madurez, y como consumidor de una funcionalidad estable, debe esperar que sea sólido, bien probado en varias configuraciones/entornos y bien documentado.&lt;/p&gt;
&lt;p&gt;Las funcionalidades en nivel de producción ciertamente pueden cambiar, pero los cambios deben anunciarse en el registro de cambios y, posiblemente, en el blog, y también deben expresarse claramente en un número de versión (la versión principal/secundaria/parche aumenta cuando sea apropiado). Si una característica de nivel de producción ha cambiado (modificado la configuración de instalación, una nueva opción, etc.) debería ser fácil para un usuario estar al tanto de esto, antes de actualizar a la nueva versión que incluye los cambios.&lt;/p&gt;
&lt;h2 id=&#34;obsoleta&#34;&gt;Obsoleta&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    TL;DR: Esto se eliminará pronto. No usar

&lt;/div&gt;

&lt;p&gt;Eventualmente, algunas funcionalidades quedarán en desuso por cualquier razón (se encontró un mejor enfoque, el problema que resolvió ya no es un problema, etc.). Sin embargo, esto no debería suceder durante la noche, y las obsolescencias deben anunciarse en el registro de cambios y en el blog con al menos un mes de antelación.&lt;/p&gt;
&lt;p&gt;Una vez que una función se ha anunciado como obsoleta, se marcará como tal (ver más abajo para más detalles) y la eliminación final también se expresará claramente en un número de versión (protuberancias de versión mayor/menor cuando corresponda).&lt;/p&gt;
&lt;h1 id=&#34;funciones-experimenales&#34;&gt;Funciones Experimenales&lt;/h1&gt;
&lt;p&gt;Para ayudar a aclarar qué funcionalidades son experimentales y cuáles son estables/producción, puede consultar la documentación (este sitio) o el comando &lt;code&gt;jx --help&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El sitio de documentación tendrá banderas como esta:&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;


    Experimental

&lt;/div&gt;

&lt;p&gt;El comando &lt;code&gt;--help&lt;/code&gt; incluirá la información en la descripción de un comando, de esta forma:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Installing:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  profile          Set your jx profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  boot             &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Experimental&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Boots up Jenkins X in a Kubernetes cluster using GitOps and a Jenkins X Pipeline
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  install          &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Stable&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; Install Jenkins X in the current Kubernetes cluster
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Las funciones/comandos de nivel de producción no se marcarán específicamente.&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;


    En este punto, estas marcas no se han aplicado universalmente. En caso de duda, pregunte en el canal slack &lt;code&gt;# jenkins-x-user&lt;/code&gt;

&lt;/div&gt;

&lt;h2 id=&#34;acceso-a-funciones-experimentales&#34;&gt;Acceso a Funciones Experimentales&lt;/h2&gt;
&lt;p&gt;Como podría involucrarse un poco con algunas funcionalidades experimentales, debe permitir específicamente su uso; si no, simplemente serán ignorados.&lt;/p&gt;
&lt;p&gt;Para habilitar las funciones experimentales, realice una de las siguientes acciones (según dónde necesite acceder a ellas)&lt;/p&gt;
&lt;h3 id=&#34;jx-boot&#34;&gt;JX Boot&lt;/h3&gt;
&lt;p&gt;Actualice su configuración JX Boot para incluirlas a través de: &lt;code&gt;allow-experimental: true&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;jx-cli&#34;&gt;jx CLI&lt;/h3&gt;
&lt;p&gt;Adicione &lt;code&gt;--allow-experimental&lt;/code&gt; al comando para utilizar las funciones experimentales&lt;/p&gt;
&lt;h1 id=&#34;funcionalidades-obsoletas&#34;&gt;Funcionalidades Obsoletas&lt;/h1&gt;
&lt;p&gt;Para resaltar las funcionalidades obsoletas y hacer que sea fácil ver cuáles evitar, la documentación (este sitio) incluirá una advertencia como esta:&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;


    Obsoleta en jx desde 2.0.134. Será eliminada en el 2 de diciembre del 2019.

&lt;/div&gt;

&lt;p&gt;en páginas que se refieren a funciones obsoletas. La advertencia indicará la versión donde la función se detendrá/dejará de incluirse.&lt;/p&gt;
&lt;p&gt;De manera similar a los comandos experimentales y estables, el comando &lt;code&gt;jx --help&lt;/code&gt; resaltará comandos obsoletos con &lt;code&gt;(DEPRECATED)&lt;/code&gt; en la descripción del comando.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Preguntas sobre Tecnología</title>
      <link>https://jenkins-x.io/es/docs/concepts/technology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/concepts/technology/</guid>
      <description>
        
        
        &lt;h2 id=&#34;qué-es-helm&#34;&gt;¿Qué es Helm?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.helm.sh/&#34;&gt;helm&lt;/a&gt; es el administrador de paquetes de código abierto para Kubernetes.&lt;/p&gt;
&lt;p&gt;Funciona como cualquier otro administrador de paquetes (brew, yum, npm, etc) donde existen uno o más repositorios de donde se instalan los paquetes. Los paquetes en helm se llaman cartas náuticas (&lt;code&gt;charts&lt;/code&gt;) para seguir con el tema náutico en Kubernetes. Estos &lt;code&gt;charts&lt;/code&gt; pueden ser buscados, instalados y actualizados.&lt;/p&gt;
&lt;p&gt;Un &lt;a href=&#34;https://docs.helm.sh/developing_charts/#charts&#34;&gt;chart de helm es básicamente un conjunto de ficheros YAML versionados&lt;/a&gt; de Kubernetes que se puede instalar fácilmente en cualquier clúster.&lt;/p&gt;
&lt;p&gt;Helm permite la composición entre charts (un chart puede contener otro chart) a través del fichero &lt;code&gt;requirements.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;qué-es-skaffold&#34;&gt;¿Qué es Skaffold?&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/GoogleContainerTools/skaffold&#34;&gt;skaffold&lt;/a&gt; en una herramienta de código abierto para construir imágenes de docker en los clústeres de Kubernetes y luego desplegarlas/actualizarlas a través de &lt;code&gt;kubectl&lt;/code&gt; o &lt;code&gt;helm&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El reto de construir imágenes de docker dentro del clúster de Kubernetes es seleccionar cómo hacerlo, porque existen varias estrategias a seguir para lograr el mismo objetivo, p.ej:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;utilizar el proceso (daemon) y socket local de docker del clúster de Kubernetes.&lt;/li&gt;
&lt;li&gt;utilizar el servicio de la nube como por ejemplo Google Cloud Builder&lt;/li&gt;
&lt;li&gt;utilizar un enfoque sin docker-daemon como es &lt;a href=&#34;https://github.com/GoogleContainerTools/kaniko&#34;&gt;kaniko&lt;/a&gt; que no necesita tener accesso al daemon de docker.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lo bueno de skaffold es que abstrae su código o CLI de esos detalles; te permite definir la política para construir imágenes de docker en su archivo &lt;code&gt;skaffold.yaml&lt;/code&gt; para cambiar entre docker daemon, GCB o kaniko, etc.&lt;/p&gt;
&lt;p&gt;Skaffold también es realmente útil dentro de &lt;a href=&#34;https://jenkins-x.io/docs/reference/devpods/&#34;&gt;DevPods&lt;/a&gt; para hacer compilaciones incrementales rápidas si cambia el código fuente.&lt;/p&gt;
&lt;h2 id=&#34;cómo-se-compara-helm-con-skaffold&#34;&gt;¿Cómo se compara Helm con Skaffold?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;helm&lt;/code&gt; le permite instalar/actualizar paquetes llamados charts que utilizan una o más imágenes de docker que se encuentran en algún registro de docker junto con algunos ficheros Kubernetes YAML para instalar/actualizar aplicaciones en un clúster de Kubernetes.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;skaffold&lt;/code&gt; es una herramienta para realizar construcciones de imágenes de docker y, opcionalmente, volver a desplegar aplicaciones a través de &lt;code&gt;kubectl&lt;/code&gt; o &lt;code&gt;helm&lt;/code&gt;, ya sea dentro del pipeline CI/CD o cuando se desarrolla localmente.&lt;/p&gt;
&lt;p&gt;Jenkins X utiliza &lt;code&gt;skaffold&lt;/code&gt; en sus pipelines de CI/CD para crear imágenes de docker. Luego se liberan versiones de imágenes de docker y charts de helm en cada mezcla de master. Luego se promueven los cambios a través de &lt;code&gt;helm&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;qué-es-exposecontroller&#34;&gt;¿Qué es exposecontroller?&lt;/h2&gt;
&lt;p&gt;Resulta que exponer servicios fuera del clúster de Kubernetes puede ser complejo. p.ej.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;¿Qué dominio usar?&lt;/li&gt;
&lt;li&gt;¿Debería usar TLS y generar certificados y asociarlos con los dominios?&lt;/li&gt;
&lt;li&gt;¿Estás usando OpenShift si es así, entonces quizás usar &lt;code&gt;Route&lt;/code&gt; es mejor que usar &lt;code&gt;Ingress&lt;/code&gt;?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Entonces, hemos simplificado los microservicios en Jenkins X delegando a un microservicio llamado &lt;a href=&#34;https://github.com/jenkins-x/exposecontroller&#34;&gt;exposecontroller&lt;/a&gt; el trabajo de ocuparse de estas cosas, como p.ej:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exponer todos los &lt;code&gt;Service&lt;/code&gt; que tienen una etiqueta para indicar que están destinados a ser expuestos utilizando el clúster actual&lt;/li&gt;
&lt;li&gt;controla las reglas de exposición de los namespaces como el dominio&lt;/li&gt;
&lt;li&gt;utilizar o no TLS&lt;/li&gt;
&lt;li&gt;utilizar &lt;code&gt;Route&lt;/code&gt; o &lt;code&gt;Ingress&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si mira dentro del repositorio Git de su entorno, puede observar que hay 2 &lt;code&gt;exposecontroller&lt;/code&gt; de forma predeterminada. Ambos &lt;code&gt;exposecontroller&lt;/code&gt; son &lt;a href=&#34;https://github.com/jenkins-x/default-environment-charts/blob/master/env/requirements.yaml&#34;&gt;charts de helm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Estas 2 tareas son utilizadas de forma predeterminada para la generación o limpieza de recursos &lt;code&gt;Ingress&lt;/code&gt; para exponer los recursos &lt;code&gt;Services&lt;/code&gt; etiquetados para a los que desee acceder desde fuera del clúster. p.ej aplicación web o api rest.&lt;/p&gt;
&lt;p&gt;Puede optar por no utilizar exposecontroller si lo desea, simplemente no use las etiquetas de exposecontroller en sus servicios. Si lo desea, puede eliminar el trabajo de exposecontroller de un entorno, ¡aunque no podrá acceder a ninguno de nuestros QuickStarts desde fuera del clúster si lo hace!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Problemas comunes</title>
      <link>https://jenkins-x.io/es/docs/managing-jx/faq/issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/managing-jx/faq/issues/</guid>
      <description>
        
        
        &lt;p&gt;Hemos tratado de recopilar problemas comunes aquí con soluciones alternativas. Si su problema no aparece en esta lista, &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new&#34;&gt;infórmenos&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;jenkins-x-no-se-inicia&#34;&gt;Jenkins X no se inicia&lt;/h2&gt;
&lt;p&gt;Si su instalación no se inicia, podría haber algunas razones diferentes por las que los módulos Jenkins X no se inician.&lt;/p&gt;
&lt;p&gt;Su clúster podría estar sin recursos. Puede revisar los recursos de reserva de su clúster a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_status/&#34;&gt;jx status&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;También tenemos un comando de diagnóstico para detectar problemas comunes, &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_verify_install/&#34;&gt;jx step verify install&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx step verify install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Un problema común para lo cual pudieran no iniciar los pods es si el clúster no tiene una &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/storage-classes/&#34;&gt;clase de almacenamiento predeterminado&lt;/a&gt; configurada, por lo tanto, los recursos &lt;code&gt;Persistent Volume Claims&lt;/code&gt; no pueden obtener los &lt;code&gt;Persistent Volumes&lt;/code&gt; como se describe en las &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/install-on-cluster/&#34;&gt;instrucciones de instalación&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Puede revisar su clase de almacenamiento y volúmenes persistentes a través de:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl get pvc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si las cosas están funcionando debe ver algo similar a esto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl get pvc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                        STATUS    VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jenkins                     Bound     pvc-680b39b5-94f1-11e8-b93d-42010a840238   30Gi       RWO            standard       12h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jenkins-x-chartmuseum       Bound     pvc-6808fb5e-94f1-11e8-b93d-42010a840238   8Gi        RWO            standard       12h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jenkins-x-docker-registry   Bound     pvc-680a415c-94f1-11e8-b93d-42010a840238   100Gi      RWO            standard       12h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jenkins-x-mongodb           Bound     pvc-680d6fd9-94f1-11e8-b93d-42010a840238   8Gi        RWO            standard       12h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jenkins-x-nexus             Bound     pvc-680fc692-94f1-11e8-b93d-42010a840238   8Gi        RWO            standard       12h
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puede ver el estado (&lt;code&gt;status&lt;/code&gt;) en &lt;code&gt;Pending&lt;/code&gt; entonces significa que no tiene la &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/storage-classes/&#34;&gt;clase de almacenamiento predetermianda&lt;/a&gt; configurada en su clúster de Kubernetes, o te puedes haber quedado sin espacio de almacenamiento.&lt;/p&gt;
&lt;p&gt;Por favor, intente crear una &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/storage-classes/&#34;&gt;clase de almacenamiento predeterminada&lt;/a&gt; para su clúster o contacte con el equipo de operaciones - proveedor cloud.&lt;/p&gt;
&lt;p&gt;Si todos los &lt;code&gt;Persistent Volume Claims&lt;/code&gt; tienen el estado &lt;code&gt;Bound&lt;/code&gt; y todavía no se ha iniciado, entonces intente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl get pod
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si un pod no puede iniciarse, intente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl describe pod some-pod-name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Tal vez este comando le de alguna pista. Podría estar relacionado RBAC?&lt;/p&gt;
&lt;p&gt;Si todavía está atascado envíenos la descripción del problema &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new&#34;&gt;create an issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;http-el-servidor-dio-respuesta-http-al-cliente-https&#34;&gt;http: el servidor dio respuesta HTTP al cliente HTTPS&lt;/h2&gt;
&lt;p&gt;Si su pipeline ha fallado con algo similar a esto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The push refers to a repository &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;100.71.203.90:5000/lgil3/jx-test-app&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2018-07-09T21:18:31Z&amp;#34;&lt;/span&gt; level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;fatal msg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build step: pushing [100.71.203.90:5000/lgil3/jx-test-app:0.0.2]: Get https://100.71.203.90:5000/v1/_ping: http: server gave HTTP response to HTTPS client&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esto significa que está utilizando el registro de Docker interno de Jenkins X para sus imágenes, pero el servicio de Docker de su clúster de Kubernetes no ha sido configurado para registros inseguros (&lt;code&gt;insecure-registries&lt;/code&gt;), por lo que tiene que utilizar &lt;code&gt;http&lt;/code&gt; para acceder al servicio del registro Docker &lt;code&gt;jenkins-x-docker-registry&lt;/code&gt; en su cluster.&lt;/p&gt;
&lt;p&gt;Por defecto, Docker desea que todos los registros sean expuestos a través de &lt;code&gt;https&lt;/code&gt; y utilizar TLS y certificados. Esto debe estar garantizado por todos los registros públicos. Sin embargo, al utilizar Jenkins X con un registro de Docker interno es difícil lograrlo porque no hay un nombre DNS público disponible y no se tiene HTTPS or certificados; por lo que de forma predeterminada se necesita tener registros inseguros configurados (&lt;code&gt;insecure-registry&lt;/code&gt;) en todos los servicios de Docker en sus nodos Kubernetes.&lt;/p&gt;
&lt;p&gt;Intentamos automatizar esta configuración cuando usamos &lt;code&gt;jx create cluster&lt;/code&gt;, p.ej en AWS, el valor predeterminado es el rango de IP &lt;code&gt;100.64.0.0/10&lt;/code&gt; para que coincida con la mayoría de las direcciones IP del servicio Kubernetes.&lt;/p&gt;
&lt;p&gt;En &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster_eks/&#34;&gt;EKS&lt;/a&gt;, usamos ECR de manera predeterminada para evitar este problema. Del mismo modo, pronto cambiaremos por defecto a GCR y ACR en GKE y AKS respectivamente.&lt;/p&gt;
&lt;p&gt;Por lo tanto, una solución alternativa es utilizar un &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/docker-registry/&#34;&gt;registro real de contenedores externos&lt;/a&gt; o habilitar el registro inseguro (&lt;code&gt;insecure-registry&lt;/code&gt;) en sus demonios de Docker en sus nodos en su clúster de Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;helm-falla-con-el-error-upgrade-failed-incompatible-versions-client-server&#34;&gt;Helm falla con el Error: UPGRADE FAILED: incompatible versions client[&amp;hellip;] server[&amp;hellip;]&#39;&lt;/h2&gt;
&lt;p&gt;En términos generales, esto sucede cuando su laptop tiene una versión de Helm diferente a la versión utilizada en nuestras imágenes de Docker y/o la versión de Helm que se ejecuta en su servidor.&lt;/p&gt;
&lt;p&gt;La solución más simple para esto es &lt;a href=&#34;https://jenkins-x.io/news/helm-without-tiller/&#34;&gt;no usar tiller en absoluto&lt;/a&gt;, lo que en realidad ayuda a evitar que este problema suceda y resuelve una serie de problemas de seguridad también.&lt;/p&gt;
&lt;p&gt;Sin embargo, cambiar de usar Tiller a No Tiller requiere una re-instalación de Jenkins X (¿aunque podría intentar hacerlo en un conjunto separado de namespaces y luego mover los proyectos gradualmente?).&lt;/p&gt;
&lt;p&gt;La solución manual es instalar &lt;a href=&#34;https://github.com/helm/helm/releases&#34;&gt;la misma versión de Helm que la utilizada en el servidor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;O puede intentar cambiar Tiller para que coincida con la versión de su cliente:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ejecute &lt;code&gt;helm init --upgrade&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Aunque tan pronto como se ejecute un pipeline, cambiará la versión de Helm nuevamente, por lo que deberá seguir repitiendo lo anterior.&lt;/p&gt;
&lt;h2 id=&#34;error-creando-credenciales-de-jenkins-jenkins-x-chartmuseum-500-server-error&#34;&gt;error creando credenciales de Jenkins jenkins-x-chartmuseum 500 Server Error&lt;/h2&gt;
&lt;p&gt;Esto es un &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/1234&#34;&gt;problema pendiente&lt;/a&gt; que resolveremos lo antes posible.&lt;/p&gt;
&lt;p&gt;Básciamente sucede cuando tienes un token viejo de API en &lt;code&gt;~/.jx/jenkinsAuth.yaml&lt;/code&gt; para la URL del servidor Jenkins. Tú también puedes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;eliminarlo del fichero manualmente&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ejecutar el siguiente comando &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx delete jenkins token&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  $ jx delete jenkins token admin
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;errores-con-chartmuseumbuildcdjenkins-xio&#34;&gt;errores con chartmuseum.build.cd.jenkins-x.io&lt;/h2&gt;
&lt;p&gt;Si ve un error como este:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;error:failed to add the repository &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jenkins-x&amp;#39;&lt;/span&gt; with URL &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://chartmuseum.build.cd.jenkins-x.io&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;o&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Looks like &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://chartmuseum.build.cd.jenkins-x.io&amp;#34;&lt;/span&gt; is not a valid chart repository or cannot be reached
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;entonces parece que tienes una referencia hacia una URL caducada del chartmuseum para los charts en Jenkins X.&lt;/p&gt;
&lt;p&gt;La nueva URL es: &lt;a href=&#34;http://chartmuseum.jenkins-x.io&#34;&gt;http://chartmuseum.jenkins-x.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Puede ser que tu instalación Helm tenga una URL del repositorio vieja. Puedes verla así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ helm repo list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME     	URL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;stable   	https://kubernetes-charts.storage.googleapis.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jenkins-x	http://chartmuseum.jenkins-x.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si está viendo esto &amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ helm repo list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME     	URL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jenkins-x	https://chartmuseum.build.cd.jenkins-x.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;entonces por favor, ejecute &amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm repo remove jenkins-x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm repo add jenkins-x	http://chartmuseum.jenkins-x.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;y podrá resolver su problema y seguir adelante.&lt;/p&gt;
&lt;p&gt;Otra causa posible es tener una URL vieja en tu repositorio Git del entorno, tal vez tenga una referencia a la anterior URL.&lt;/p&gt;
&lt;p&gt;Entonces abra su fichero &lt;code&gt;env/requirements.yaml&lt;/code&gt; en sus repositorios Git staging/production y modifíquelos para usar la URL &lt;a href=&#34;http://chartmuseum.jenkins-x.io&#34;&gt;http://chartmuseum.jenkins-x.io&lt;/a&gt; en lugar de &lt;strong&gt;chartmuseum.build.cd.jenkins-x.io&lt;/strong&gt; como este &lt;a href=&#34;https://github.com/jenkins-x/default-environment-charts/blob/master/env/requirements.yaml&#34;&gt;fichero de requisitos&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;errores-de-git-post-401-bad-credentials&#34;&gt;errores de git: POST 401 Bad credentials&lt;/h2&gt;
&lt;p&gt;Esto indica que su token API de git se ingresó incorrectamente o se ha regenerado y ahora es incorrecto.&lt;/p&gt;
&lt;p&gt;Para recrearlo con un nuevo valor de token de API, intente lo siguiente (cambiar el nombre del servidor git para que coincida con su proveedor git):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx delete git token -n github &amp;lt;yourUserName&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx create git token -n github &amp;lt;yourUserName&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puede ver más detalles en &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/git/&#34;&gt;cómo utilizar Git y Jenkins X aquí&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;invalidar-token-git-para-escanear-un-proyecto&#34;&gt;Invalidar token git para escanear un proyecto&lt;/h2&gt;
&lt;p&gt;Si recibe un error en Jenkins cuando intenta escanear sus repositorios en busca de ramas, algo como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hudson.AbortException: Invalid scan credentials *****/****** &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;API Token &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; acccessing https://github.com git service inside pipelines&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; to connect to https://api.github.com, skipping
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Entonces su token para la API de Git debe ser incorrecta o estar vencida.&lt;/p&gt;
&lt;p&gt;Para recrear el valor del token para la API intente lo siguiente (cambiar el nombre del servidor git para que coincida con su proveedor git):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx delete git token -n GitHub admin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx create git token -n GitHub admin
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puede ver más detalles en &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/git/&#34;&gt;cómo utilizar Git y Jenkins X aquí&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;cuáles-son-las-credenciales-para-acceder-a-los-servicios-principales&#34;&gt;¿Cuáles son las credenciales para acceder a los servicios principales?&lt;/h2&gt;
&lt;p&gt;Los servicios principales autenticados de Jenkins X incluyen Jenkins, Nexus, ChartMuseum. El nombre de usuario predeterminado es &lt;code&gt;admin&lt;/code&gt; y la contraseña por defecto se genera e imprime en el terminal después de &lt;code&gt;jx create cluster&lt;/code&gt; o &lt;code&gt;jx install&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;establecer-nombre-de-usuario-y-contraseña-de-administrador-para-los-servicios-principales&#34;&gt;Establecer nombre de usuario y contraseña de administrador para los servicios principales&lt;/h3&gt;
&lt;p&gt;Puede establecer nombre del usuario de administración a través del parámetro &lt;code&gt;--default-admin-username=username&lt;/code&gt;.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    &lt;p&gt;Quizás esté utilizando el dominio de seguridad de Active Directory en Jenkins. Es en este escenario que tiene sentido configurar el nombre de usuario de administrador a través de &lt;code&gt;--default-admin-username&lt;/code&gt; según sus cuentas de servicio existentes.&lt;/p&gt;
&lt;p&gt;También puede pasar este valor a través de &lt;code&gt;myvalues.yaml&lt;/code&gt;.&lt;/p&gt;


&lt;/div&gt;

&lt;p&gt;Si desea establecer la contraseña predeterminada usted mismo, puede establecer el indicador &lt;code&gt;--default-admin-password=foo&lt;/code&gt; en los dos comandos anteriores.&lt;/p&gt;
&lt;p&gt;Si ya no tiene la salida de la consola del terminal, puede buscar en el archivo local &lt;code&gt;~/.jx/jenkinsAuth.yaml&lt;/code&gt; y encontrar la contraseña que coincida con la URL de su servidor Jenkins para el clúster deseado.&lt;/p&gt;
&lt;h2 id=&#34;persistent-volume-claims-no-se-enlazan&#34;&gt;Persistent Volume Claims no se enlazan&lt;/h2&gt;
&lt;p&gt;Si observa que las peticiones de volumen persistentes creados al instalar Jenkins X no se unen con&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ kubectl get pvc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Debe comprobar que tiene una clase de almacenamiento predeterminada de clúster para el aprovisionamiento dinámico de volumen persistente. Consulte &lt;a href=&#34;https://kubernetes.io/docs/concepts/storage/dynamic-provisioning/&#34;&gt;aquí&lt;/a&gt; para obtener más detalles.&lt;/p&gt;
&lt;h2 id=&#34;no-puedo-conectarme-a-nodos-en-aws&#34;&gt;No puedo conectarme a nodos en AWS&lt;/h2&gt;
&lt;p&gt;Si no ve ningún nodo válido devuelto por &lt;code&gt;kubectl get node&lt;/code&gt; u obtiene errores al ejecutar&lt;code&gt; jx status&lt;/code&gt;, algo como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Unable to connect to the server: dial tcp: lookup abc.def.regino.eks.amazonaws.com on 10.0.0.2:53: no such host
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;podría ser que su configuración de kube esté obsoleta. Tratar&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aws eks --region &amp;lt;CLUSTER_REGION&amp;gt; update-kubeconfig --name &amp;lt;CLUSTER_NAME&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Eso debería regenerar su archivo local &lt;code&gt;~/kube/config&lt;/code&gt; y entonces &lt;code&gt;kubectl get node&lt;/code&gt; o &lt;code&gt;jx status&lt;/code&gt; deberían encontrar sus nodos&lt;/p&gt;
&lt;h2 id=&#34;cómo-puedo-diagnosticar-problemas-de-exposecontroller&#34;&gt;¿Cómo puedo diagnosticar problemas de exposecontroller?&lt;/h2&gt;
&lt;p&gt;Cuando promueve una nueva versión de su aplicación a un entorno, como el entorno Staging, se genera un PR en el repositorio del entorno.&lt;/p&gt;
&lt;p&gt;Cuando el pipeline del master se ejecuta en un entorno, se crea un &lt;code&gt;Job&lt;/code&gt; de Kubernetes para &lt;a href=&#34;https://github.com/jenkins-x/exposecontroller&#34;&gt;exposecontroller&lt;/a&gt; que ejecuta un pod hasta que finaliza.&lt;/p&gt;
&lt;p&gt;Puede ser complicado encontrar el registro para trabajos temporales ya que se elimina el pod.&lt;/p&gt;
&lt;p&gt;Una manera de diagnosticar los registros en su entorno Staging, es &lt;a href=&#34;https://github.com/boz/kail&#34;&gt;descargar e instalar kail&lt;/a&gt; y agregarlo a su &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Luego ejecute este comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kail -l job-name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;expose -n jx-staging
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si luego promueve el entorno Staging o vuelve a activar el pipeline en la rama &lt;code&gt;master&lt;/code&gt; de su repositorio Git de Staging (p.ej, a través de &lt;a href=&#34;https://jenkins-x.io/commands/jx_start_pipeline/&#34;&gt;jx start pipeline&lt;/a&gt;), debería ver la salida del [exposecontroller] (&lt;a href=&#34;https://github.com/jenkins-x/exposecontroller&#34;&gt;https://github.com/jenkins-x/exposecontroller&lt;/a&gt;) pod.&lt;/p&gt;
&lt;h2 id=&#34;por-qué-la-promoción-es-realmente-lenta&#34;&gt;¿Por qué la promoción es realmente lenta?&lt;/h2&gt;
&lt;p&gt;Si encuentra que recibe muchas advertencias en sus pipelines como esta &amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed to query the Pull Request last commit status for https://github.com/myorg/environment-mycluster-staging/pull/1 ref xyz Could not find a status for repository myorg/environment-mycluster-staging with ref xyz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;y la promoción demora 30 minutos desde la liberación de un pipeline en una aplicación que comienza con el cambio que afecta a &lt;code&gt;Staging&lt;/code&gt;, y probablemente se deba principalmente a Webhooks.&lt;/p&gt;
&lt;p&gt;Cuando &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/using-jx/creating/import/&#34;&gt;importamos proyectos&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/first-project/create-quickstart/&#34;&gt;creamos inicios rápidos&lt;/a&gt;, automatizamos la configuración de los pipelines de CI/CD para el repositorio Git. Lo que esto hace es configurar Webhooks en el repositorio de Git para activar Jenkins X para activar pipelines (ya sea usando Prow para &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipelines sin servidor&lt;/a&gt; o el servidor estático jenkins si no).&lt;/p&gt;
&lt;p&gt;Sin embargo, a veces su proveedor de Git (por ejemplo, &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; puede no poder conectarse a su instalación Jenkins X (por ejemplo, debido a problemas de red/firewall).&lt;/p&gt;
&lt;p&gt;La forma más fácil de diagnosticar esto es abrir el repositorio Git (por ejemplo, para el repositorio de su entorno).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get env
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Entonces:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;clic en la URL generada para, p.ej, su repositorio Git de &lt;code&gt;Staging&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;clic el icon &lt;code&gt;Settings&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;selecciona el tab &lt;code&gt;Webhooks&lt;/code&gt; en la izquierda&lt;/li&gt;
&lt;li&gt;selecciona la URL del webhook de Jenkins X&lt;/li&gt;
&lt;li&gt;vea el último webhook - ¿Tuvo éxito? Intenta reactivarlo? Eso debería resaltar cualquier problema de red, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si no puede usar webhooks públicos, puede mirar algo como [ultrahook] (&lt;a href=&#34;http://www.ultrahook.com/&#34;&gt;http://www.ultrahook.com/&lt;/a&gt;)&lt;/p&gt;
&lt;h2 id=&#34;no-puede-crear-un-clúster-en-minikube&#34;&gt;No puede crear un clúster en minikube&lt;/h2&gt;
&lt;p&gt;Si estás utilizando Mac, entonces &lt;code&gt;hyperkit&lt;/code&gt; es el mejor controlador de Máquinas Virtuales a utilizar - pero necesita que instale primero &lt;a href=&#34;https://docs.docker.com/docker-for-mac/install/&#34;&gt;Docker para Mac&lt;/a&gt;. Inténtenlo y vuelva a ejecutar el comando &lt;code&gt;jx create cluster minikube&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Si su minikube está fallando al inicio, entonces puede intentar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ minikube delete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rm -rf ~/.minikube
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si el comando &lt;code&gt;rm&lt;/code&gt; falla, tal vez necesite:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo rm -rf ~/.minikube
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora intente &lt;code&gt;jx create cluster minikube&lt;/code&gt; nuevamente: ¿eso ayudó? A veces hay certificados obsoletos o archivos que cuelgan de antiguas instalaciones de minikube que pueden romper cosas.&lt;/p&gt;
&lt;p&gt;A veces, un reinicio puede ayudar en casos donde la virtualización sale mal ;)&lt;/p&gt;
&lt;p&gt;De lo contrario, puede intentar seguir las instrucciones del minikube&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/minikube#installation&#34;&gt;instalar minikube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/minikube#quickstart&#34;&gt;ejecutar minikube start&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;minkube-e-hyperkit-no-puede-encontrar-la-dirección-ip&#34;&gt;Minkube e hyperkit: No puede encontrar la dirección IP&lt;/h2&gt;
&lt;p&gt;Si está utilizando minikube en un mac con hyperkit y encuentra que minikube no puede comenzar con un registro como:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Temporary Error: Could not find an IP address &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; 46:0:41:86:41:6e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Temporary Error: Could not find an IP address &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; 46:0:41:86:41:6e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Temporary Error: Could not find an IP address &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; 46:0:41:86:41:6e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Temporary Error: Could not find an IP address &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; 46:0:41:86:41:6e
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Es posible que haya encontrado &lt;a href=&#34;https://github.com/kubernetes/minikube/issues/1926#issuecomment-356378525&#34;&gt;este problema en minikube e hyperkit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La solución es intentar lo siguiente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rm ~/.minikube/machines/minikube/hyperkit.pid
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Entonces vuelva a intentarlo. Esperamos que esta vez funcione correctamente!&lt;/p&gt;
&lt;h2 id=&#34;no-se-puede-acceder-a-los-servicios-en-minikube&#34;&gt;No se puede acceder a los servicios en minikube&lt;/h2&gt;
&lt;p&gt;Al ejecutar minikube localmente, &lt;code&gt;jx&lt;/code&gt; usa de manera predeterminada &lt;a href=&#34;http://nip.io/&#34;&gt;nip.io&lt;/a&gt; como una forma de usar nombres DNS agradables para los servicios y evitar el hecho de que la mayoría de las computadoras portátiles no pueden usar DNS. Sin embargo, a veces &lt;a href=&#34;http://nip.io/&#34;&gt;nip.io&lt;/a&gt; tiene problemas y no funciona.&lt;/p&gt;
&lt;p&gt;Para evitar usar nip.io, puede hacer lo siguiente:&lt;/p&gt;
&lt;p&gt;Edite el archivo &lt;code&gt;~/.jx/cloud-environments/env-minikube/myvalues.yaml&lt;/code&gt; y agregue el siguiente contenido:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;expose&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;Args&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - --&lt;span style=&#34;color:#ae81ff&#34;&gt;exposer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;NodePort&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - --&lt;span style=&#34;color:#ae81ff&#34;&gt;http&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego, vuelva a ejecutar &lt;code&gt;jx install&lt;/code&gt; y esto cambiará los servicios que se expondrán en los puertos de nodo en lugar de usar el ingreso y DNS.&lt;/p&gt;
&lt;p&gt;Entonces, si escribes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx open
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Verá todas las UR del formulario &lt;code&gt;http://$(minikube ip):somePortNumber&lt;/code&gt; que luego evita pasar por &lt;a href=&#34;http://nip.io/&#34;&gt;nip.io&lt;/a&gt;, solo significa que las URL son un poco más crípticas utilizando números de puerto mágicos en lugar de simples nombres de host.&lt;/p&gt;
&lt;h2 id=&#34;cómo-obtengo-la-contraseña-y-el-nombre-de-usuario-para-jenkins&#34;&gt;¿Cómo obtengo la contraseña y el nombre de usuario para Jenkins?&lt;/h2&gt;
&lt;p&gt;Instale &lt;a href=&#34;https://github.com/mfuentesg/ksd&#34;&gt;KSD&lt;/a&gt; ejecutando &lt;code&gt;go get github.com/mfuentesg/ksd&lt;/code&gt; y luego ejecute &lt;code&gt;kubectl get secret jenkins -o yaml | ksd&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;cómo-veo-el-registro-de-exposecontroller&#34;&gt;¿Cómo veo el registro de exposecontroller?&lt;/h2&gt;
&lt;p&gt;Por lo general, ejecutamos el &lt;code&gt;exposecontroller&lt;/code&gt; como un trabajo posterior a la instalación cuando realizamos la promoción a &lt;code&gt;Staging&lt;/code&gt; o &lt;code&gt;Production&lt;/code&gt; para exponer servicios sobre Ingress y posiblemente inyectar URL externas en la configuración de las aplicaciones.&lt;/p&gt;
&lt;p&gt;Por lo tanto, el &lt;code&gt;Job&lt;/code&gt; activará un &lt;code&gt;Pod&lt;/code&gt; de corta duración para que se ejecute en el namespace de su entorno, luego se eliminará el pod.&lt;/p&gt;
&lt;p&gt;Si desea ver los registros del &lt;code&gt;exposecontroller&lt;/code&gt;, deberá observar los registros utilizando un selector y luego activar el pipeline de promoción para capturarlo.&lt;/p&gt;
&lt;p&gt;Una forma de hacerlo es a través de la CLI de &lt;a href=&#34;https://github.com/boz/kail&#34;&gt;kail&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kail -l  job-name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;expose
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esto buscará registros de exposecontroller y luego los volcará a la consola. Ahora active un pipeline de promoción y debería ver la salida dentro de un minuto más o menos.&lt;/p&gt;
&lt;h2 id=&#34;no-se-pueden-crear-certificados-tls-durante-la-configuración-de-ingress&#34;&gt;No se pueden crear certificados TLS durante la configuración de Ingress&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.cert-manager.io/en/latest/index.html&#34;&gt;cert-manager&lt;/a&gt; cert-manager es un proyecto separado de &lt;em&gt;Jenkins X&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Los clústeres GKE recién creados o el clúster existente que ejecuta Kubernetes &lt;strong&gt;v1.12&lt;/strong&gt; o anterior encontrarán el siguiente error al configurar Ingress con TLS en todo el sitio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Waiting &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; TLS certificates to be issued...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Timeout reached &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; waiting &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; TLS certificates to be ready
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Este problema se debe a que el pod &lt;em&gt;cert-manager&lt;/em&gt; no tiene la etiqueta &lt;code&gt;disable-validation&lt;/code&gt; establecida, que es un problema conocido de cert-manager que &lt;a href=&#34;https://docs.cert-manager.io/en/latest/getting-started/install/kubernetes.html&#34;&gt;está documentado en su sitio web&lt;/a&gt;. Los siguientes pasos, tomados de la página web &lt;a href=&#34;https://docs.cert-manager.io/en/latest/getting-started/troubleshooting.html#troubleshooting-installation&#34;&gt;cert-manager/troubleshooting-installation&lt;/a&gt;, deberían resolver el problema:&lt;/p&gt;
&lt;p&gt;Compruebe si existe la etiqueta &lt;em&gt;disable-validation&lt;/em&gt; en el pod de cert-manager.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl describe namespace cert-manager
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Si no puede ver la etiqueta &lt;code&gt;certmanager.k8s.io/disable-validation=true&lt;/code&gt; en su namespace, debe agregarla con:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl label namespace cert-manager certmanager.k8s.io/disable-validation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Confirme que la etiqueta ha sido adicionada al pod &lt;em&gt;cert-manager&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl describe namespace cert-manager
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Name:         cert-manager
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Labels:       certmanager.k8s.io/disable-validation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Annotations:  &amp;lt;none&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status:       Active
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora vuelva a ejecutar la configuración Ingres con &lt;em&gt;jx&lt;/em&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx upgrade ingress
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mientras se ejecuta el comando ingress, puede seguir los registros de &lt;em&gt;cert-manager&lt;/em&gt; en otra terminal y ver qué está sucediendo. Necesitará encontrar el nombre de su pod &lt;em&gt;cert-manager&lt;/em&gt; usando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods --namespace cert-manager
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Entonces imprima los registros del pod &lt;em&gt;cert-manager&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl logs YOUR_CERT_MNG_POD --namespace cert-manager -f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Sus certificados TLS ahora deberían estar configurados y funcionando, de lo contrario, consulte las instrucciones oficiales de &lt;a href=&#34;https://docs.cert-manager.io/en/latest/getting-started/troubleshooting.html&#34;&gt;solución de problemas del administrador de certificados&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;other-issues&#34;&gt;Other issues&lt;/h2&gt;
&lt;p&gt;Por favor &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/new&#34;&gt;háganos saber&lt;/a&gt; si podemos ayudar? ¡Buena suerte!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Demo DevOxx UK 2018</title>
      <link>https://jenkins-x.io/es/docs/getting-started/demos-talks-posts/devoxx-uk-2018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/demos-talks-posts/devoxx-uk-2018/</guid>
      <description>
        
        
        &lt;p&gt;Este es el &lt;a href=&#34;https://youtu.be/BF3MhFjvBTU?list=PLRsbF2sD7JVpRvLpv_Cub94zsM1aHm-Op&#34;&gt;video de la charla realizada por James Strachan: Continuous Delivery for Kubernetes&lt;/a&gt; at &lt;a href=&#34;https://www.devoxx.co.uk/&#34;&gt;DevOxx UK, 2018&lt;/a&gt;.&lt;/p&gt;
&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/BF3MhFjvBTU?list=PLRsbF2sD7JVpRvLpv_Cub94zsM1aHm-Op&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;También puesdes &lt;a href=&#34;https://docs.google.com/presentation/d/1hwt2lFh3cCeFdP4xoT_stMPs0nh2xVZUtze6o79WfXc/edit#slide=id.p&#34;&gt;obtener las diapositivas de la charla en este enlace&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Version Stream</title>
      <link>https://jenkins-x.io/es/docs/concepts/version-stream/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/concepts/version-stream/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X está compuesto por una gran cantidad de línea de comandos empaquetados, imágenes de docker y charts de helm, algunos de los cuales son lanzados por la comunidad Jenkins X y otros provienen del ecosistema de código abierto más amplio.&lt;/p&gt;
&lt;p&gt;Para mejorar la estabilidad de Jenkins X cuando muchos paquetes y charts están cambiando todo el tiempo, hemos introducido el Flujo de versiones de Jenkins X, &lt;code&gt;Version Stream&lt;/code&gt;.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/jx-version-stream-v1.png&#34;/&gt;
&lt;figcaption&gt;
&lt;h5&gt;El diagrama muestra cómo se propagará una nueva versión JX a través de los componentes.&lt;/h5&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;cómo-funciona&#34;&gt;¿Cómo funciona?&lt;/h2&gt;
&lt;p&gt;El flujo de versiones (&lt;code&gt;Version Stream&lt;/code&gt;) se almacena en el repositorio Git &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-versions&#34;&gt;jenkins-x/jenkins-x-versions&lt;/a&gt; y almacena la versión estable de todos los paquetes y charts utilizados por Jenkins X.&lt;/p&gt;
&lt;p&gt;Cuando ejecuta un comando, como por ejemplo &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/&#34;&gt;crear un clúster&lt;/a&gt;, &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/install-on-cluster/&#34;&gt;instalar en un clúster existente&lt;/a&gt; o ejecutar el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_upgrade/&#34;&gt;jx upgrade&lt;/a&gt;, el comando &lt;code&gt;jx&lt;/code&gt; se asegurará de que tenga un clon local del repositorio Git &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-versions&#34;&gt;jenkins-x/jenkins-x-versions&lt;/a&gt; actualizado. Después de clonado el repositorio Jenkins X se descarga la versión estable de los charts y paquetes descritos en el, o registrará una advertencia si la versión no lo es.&lt;/p&gt;
&lt;p&gt;La versión &lt;a href=&#34;https://github.com/jenkins-x/jx&#34;&gt;jx&lt;/a&gt; por ahora se publica como una &lt;a href=&#34;https://help.github.com/en/articles/creating-releases&#34;&gt;versión preliminar&lt;/a&gt;. Cada versión de jx se actualiza solamente cuando una nueva versión llega con éxito al repositorio jenkins-x-versions. Cada nueva versión es sometida a rondas de pruebas BDD (&lt;em&gt;consulte el diagrama anterior para obtener más información&lt;/em&gt;) antes de ser marcadas como listas para liberar.&lt;/p&gt;
&lt;h2 id=&#34;cómo-actualizamos-el-flujo-de-versiones&#34;&gt;¿Cómo actualizamos el Flujo de Versiones?&lt;/h2&gt;
&lt;p&gt;Utilizamos GitOps y CI/CD para administrar el Flujo de Versiones (&lt;code&gt;Version Stream&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;A medida que se lanzan nuevos paquetes o charts, generamos PR en el repositorio git &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-versions&#34;&gt;jenkins-x/jenkins-x-versions&lt;/a&gt;. Luego activamos nuestras &lt;a href=&#34;https://github.com/jenkins-x/bdd-jx&#34;&gt;pruebas BDD&lt;/a&gt; a través de &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_bdd/&#34;&gt;jx step bdd&lt;/a&gt; y verificamos que la nueva versión del chart/paquete funcione antes de mezclar los cambios. Actualmente activamos manualmente las pruebas de BDD a través del comentario &lt;code&gt;/test this&lt;/code&gt;, pero esperamos pasar a la activación periódica de las pruebas de BDD (por ejemplo, una vez al día).&lt;/p&gt;
&lt;p&gt;Las personas que aprueban los PR también pueden optar por ejecutar sus propias pruebas manuales en las PR si lo desean.&lt;/p&gt;
&lt;p&gt;Al completar con éxito todas las pruebas BDD ejecutadas en el PR, mezclará el cambio y ejecutará una actualización de todas las dependencias jx (homebrew-jx, jx-docs, jx-tutorial y dev-env-base).&lt;/p&gt;
&lt;h2 id=&#34;creando-pull-requests-pr&#34;&gt;Creando Pull Requests (PR)&lt;/h2&gt;
&lt;p&gt;Tenemos un simple comando CLI &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_create_pullrequest_versions/&#34;&gt;jx step create pullrequest versions&lt;/a&gt; que se puede utilizar para generar automáticamente solicitudes de extracción (PR) en el repositorio git &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-versions&#34;&gt;jenkins-x/jenkins-x-versions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si eres el responsable de un chart de entrada que utiliza Jenkins X, sería increíble agregar este comando al final de su pipeline de liberación para generar un PR y que de esa forma podamos actualizar Jenkins X para utilizar su nueva versión (después que las pruebas BDD hayan pasado correctamente):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step create pullrequest versions -n mychartName -v 1.2.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;donde mychartName es el nombre de gráfico completo que utiliza el prefijo de repositorio remoto. p.ej. jenkins-x / prow es el nombre del gráfico de proa mantenido en el repositorio de gráficos jenkins-x.&lt;/p&gt;
&lt;p&gt;donde &lt;code&gt;mychartName&lt;/code&gt; es el nombre completo del chart donde se incluye el prefijo para el repositorio remoto. p.ej &lt;code&gt;jenkins-x/prow&lt;/code&gt; sería &lt;code&gt;prow&lt;/code&gt; el nombre del chart que se le da manteminiento y &lt;code&gt;jenkins-x&lt;/code&gt; el repositorio del chart.&lt;/p&gt;
&lt;h3 id=&#34;actualizaciones-periódicas&#34;&gt;Actualizaciones Periódicas&lt;/h3&gt;
&lt;p&gt;No siempre es fácil/posible actualizar los pipelines de entrada para impulsar los cambios de versión a Jenkins X a través de los PRs. Por lo tanto, puede configurar tareas periódicas para buscar actualizaciones de versión para todos los charts o para charts que coincidan con una expresión regular.&lt;/p&gt;
&lt;p&gt;p.ej para actualizar las versiones de todos los charts incluidos en &lt;code&gt;jenkins-x&lt;/code&gt; utilice el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step create version pr -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins-x/*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ejecutar-los-tests-bdd&#34;&gt;Ejecutar los tests BDD&lt;/h2&gt;
&lt;p&gt;Desde un clon de Git master o un PR, puede ejecutar las pruebas BDD contra la combinación de la versión del PR utilizando el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_bdd/&#34;&gt;jx step bdd&lt;/a&gt; y especificando &lt;code&gt;--dir .&lt;/code&gt; para el directorio del clon.&lt;/p&gt;
&lt;p&gt;p.ej. puede ejecutar las pruebas BDD usted mismo a través de &amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/jenkins-x/jenkins-x-versions.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# env vars for the git / jenkins secrets&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GIT_PROVIDER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;github
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GIT_PROVIDER_URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://github.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export BUILD_NUMBER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export JENKINS_CREDS_PSW&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mypassword
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GIT_CREDS_PSW&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;XXXXXXX
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GIT_USER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;YYYYY
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step bdd --dir . --config jx/bdd/staticjenkins.yaml --gopath /tmp --git-provider&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$GIT_PROVIDER --git-provider-url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$GIT_PROVIDER_URL --git-username $GIT_USER --git-owner $GIT_USER --git-api-token $GIT_CREDS_PSW --default-admin-password $JENKINS_CREDS_PSW --no-delete-app --no-delete-repo --tests test-create-spring
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Los diversos archivos YAML en la carpeta &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-versions/tree/master/jx/bdd&#34;&gt;jx/bdd&lt;/a&gt; contienen una selección de diferentes grupos configuraciones que se pueden utilizar.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Crear clúster EKS con Terraform</title>
      <link>https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/amazon/terraform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/amazon/terraform/</guid>
      <description>
        
        
        &lt;p&gt;Esta es una guía corta para configurar EKS en AWS utilizando Terraform donde se incluyen los requisitos necesarios para instalar Jenkins X y Vault. Se asume que está configurado el acceso a AWS y que está familiarizado con AWS, kubectl y Terraform.&lt;/p&gt;
&lt;p&gt;El fragmento de código de Terraform agrupa los recursos necesarios para EKS en AWS. El resultado (output) de la ejecución será utilizado como parámetros en el comando &lt;code&gt;jx install&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-tf&#34; data-lang=&#34;tf&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;variable&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;region&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;variable&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subnets&amp;#34;&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt; = &amp;#34;list&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;variable &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vpc_id&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;variable &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;key_name&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    description = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;SSH&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;worker&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;nodes&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;variable &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bucket_domain&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    description = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Suffix&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;S3&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bucket&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;used&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unseal&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;operation&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;provider &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    region  = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;module &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;eks&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    source       = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;terraform&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;module&lt;span style=&#34;color:#a6e22e&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;eks&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    cluster_name = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    subnets      = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;subnets&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    vpc_id       = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;vpc_id&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    worker_groups = [
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            autoscaling_enabled   = true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            asg_min_size          = 3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            asg_desired_capacity  = 3
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            instance_type         = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;t3&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;large&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            asg_max_size          = 20
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            key_name              = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;key_name&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    version = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Needed for cluster-autoscaler
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;resource &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_role_policy_attachment&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;workers_AmazonEC2ContainerRegistryPowerUser&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  policy_arn = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;arn&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;iam&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;policy&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;AmazonEC2ContainerRegistryPowerUser&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  role       = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{module.&lt;span style=&#34;color:#a6e22e&#34;&gt;eks&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;worker_iam_role_name&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Create S3 bucket for KMS
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;resource &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_s3_bucket&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unseal&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    bucket = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unseal&lt;/span&gt;.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;}.&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;bucket_domain&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    acl    = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    versioning {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        enabled = false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Create KMS key
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;resource &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_kms_key&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bank_vault&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    description = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;KMS&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;bank&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;unseal&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Create DynamoDB table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;resource &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_dynamodb_table&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;data&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    name           = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;data&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    read_capacity  = 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    write_capacity = 2
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    hash_key       = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Path&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    range_key      = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Key&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    attribute {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        name = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Path&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        type = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    attribute {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        name = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Key&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        type = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Create service account for vault. Should the policy
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;resource &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_user&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  name = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault_&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;data &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_policy_document&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    statement {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        sid = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DynamoDB&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        effect = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Allow&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        actions = [
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DescribeLimits&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DescribeTimeToLive&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ListTagsOfResource&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DescribeReservedCapacityOfferings&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DescribeReservedCapacity&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ListTables&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BatchGetItem&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;BatchWriteItem&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CreateTable&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DeleteItem&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;GetItem&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;GetRecords&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;PutItem&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Query&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;UpdateItem&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Scan&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DescribeTable&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        resources = [&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_dynamodb_table&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;data.&lt;span style=&#34;color:#a6e22e&#34;&gt;arn&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    statement {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        sid = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;S3&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        effect = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Allow&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        actions = [
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;PutObject&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;GetObject&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        resources = [&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_s3_bucket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unseal&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;arn&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;/*&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    statement {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        sid = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;S3List&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        effect = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Allow&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        actions = [
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ListBucket&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        resources = [&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_s3_bucket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unseal&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;arn&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    statement {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        sid = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;KMS&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        effect = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Allow&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        actions = [
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kms&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Encrypt&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kms&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Decrypt&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kms&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;DescribeKey&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        resources = [&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_kms_key&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;bank_vault&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;arn&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;resource &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_user_policy&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    name = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault_&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    user = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_user&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    policy = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{data.&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_policy_document&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;json&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;resource &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_access_key&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    user = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_user&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;# Output KMS key id, S3 bucket name and secret name in the form of jx install options
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;output &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;jx_params&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    value = &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;provider&lt;/span&gt;=&lt;span style=&#34;color:#a6e22e&#34;&gt;eks&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;gitops&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;no&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tiller&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;=&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dynamodb&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;table&lt;/span&gt;=&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_dynamodb_table&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;data.&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kms&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;=&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;kms&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;=&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_kms_key&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;bank_vault&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;key_id&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;=&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{var.&lt;span style=&#34;color:#a6e22e&#34;&gt;region&lt;/span&gt;}  &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;s3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;bucket&lt;/span&gt;=&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_s3_bucket&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unseal&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;access&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;=&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_access_key&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;aws&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;secret&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;access&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;key&lt;/span&gt;=&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;aws_iam_access_key&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;vault&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;secret&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Salvar como &lt;code&gt;eks.tf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El módulo terraform-aws-modules/eks/aws va a guardar el fichero kubeconfig como &lt;code&gt;config&lt;/code&gt;. Este podrá ser copiado o mezclado con el suyo &lt;code&gt;~/.kube/config&lt;/code&gt;. Con esta configuración &lt;code&gt;jx install&lt;/code&gt; puede ser iniciado utilizando los parámetros de salida de Terraform.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Demo KubeCon 2018</title>
      <link>https://jenkins-x.io/es/docs/getting-started/demos-talks-posts/kubecon-2018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/demos-talks-posts/kubecon-2018/</guid>
      <description>
        
        
        &lt;p&gt;Este es el &lt;a href=&#34;https://youtu.be/uHe7R_iZSLU?list=PLj6h78yzYM2N8GdbjmhVU65KYm_68qBmo&#34;&gt;video de la charla realizada por James Strachan: Jenkins X: Easy CI/CD for Kubernetes&lt;/a&gt; en el &lt;a href=&#34;https://events.linuxfoundation.org/events/kubecon-cloudnativecon-europe-2018/&#34;&gt;KubeCon Europe 2018&lt;/a&gt;.&lt;/p&gt;
&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/uHe7R_iZSLU?list=PLj6h78yzYM2N8GdbjmhVU65KYm_68qBmo&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Puedes &lt;a href=&#34;https://docs.google.com/presentation/d/19DAFONpT3L4t6sisyTuK2_chHrVorQO_1ijWEo8Euas/edit?usp=sharing&#34;&gt;obtener las diapositivas de la charla en este enlace&lt;/a&gt;.&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/news/jenkins-x-does-kubecon/kubecon-talk.jpg&#34;&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Importar</title>
      <link>https://jenkins-x.io/es/docs/using-jx/creating/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/using-jx/creating/import/</guid>
      <description>
        
        
        &lt;p&gt;Si ya tiene algún código fuente que desea importar a Jenkins X, puede usar el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt;. p.ej.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd my-cool-app
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx import
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Al utilizar el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; se realizarán las siguientes acciones (se le indicará en el camino):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;adiciona su código en un repositorio Git si no existe actualmente&lt;/li&gt;
&lt;li&gt;crea un repositorio Git remoto en plataformas como &lt;a href=&#34;https://github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;empuja su código al repositorio Git remoto&lt;/li&gt;
&lt;li&gt;adiciona ficheros necesarios a su código si no existen, fichero como:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; para construir la imagen Docker de su aplicación&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; para implementar el pipeline CI/CD&lt;/li&gt;
&lt;li&gt;chart de Helm para ejecutar la aplicación dentro de Kubernetes&lt;/li&gt;
&lt;li&gt;registra un enlace (webhook) entre el repositorio Git remoto y sus equipos de Jenkins&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;adiciona el repositorio Git a sus equipos de Jenkins&lt;/li&gt;
&lt;li&gt;desencadena el primer pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;evitando-docker--helm&#34;&gt;Evitando docker + helm&lt;/h3&gt;
&lt;p&gt;Si estás importando un repositorio que no crea una imagen Docker puede utilizar el parámetro &lt;code&gt;--no-draft&lt;/code&gt; en la línea de comando para indicarle que no utilice Draft. De esta forma no serán creados los ficheros &lt;code&gt;Dockerfile&lt;/code&gt; y el chart de Helm.&lt;/p&gt;
&lt;h3 id=&#34;importando-a-través-de-la-url&#34;&gt;Importando a través de la URL&lt;/h3&gt;
&lt;p&gt;Si desea importar un proyecto que ya está en un repositorio git remoto, puede usar el parámetro &lt;code&gt;--url&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx import --url https://github.com/jenkins-x/spring-boot-web-example.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;importar-proyectos-de-github&#34;&gt;Importar proyectos de GitHub&lt;/h3&gt;
&lt;p&gt;Si desea importar proyectos desde una organización de GitHub puede utilizar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx import --github --org myname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;El sistema le preguntará por el repositorio que desea importar. Utilice las flechas y la barra de espacio para seleccionar/desmarcar repositorios:&lt;/p&gt;
&lt;p&gt;Si desea que estén marcados todos los repositorios a la hora de importarlos utilice &lt;code&gt;--all&lt;/code&gt;, luego puede desmarcar el que desee:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx import --github --org myname --all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para filtrar el listado puede adicionar el parámetro &lt;code&gt;--filter&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx import --github --org myname --all --filter foo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;patrones-de-ramas&#34;&gt;Patrones de Ramas&lt;/h2&gt;
&lt;p&gt;Al importar proyectos en Jenkins X, usamos patrones de rama Git para determinar qué nombres de rama se configuran automáticamente para CI/CD.&lt;/p&gt;
&lt;p&gt;Por lo general, eso puede ser predeterminado a algo como &lt;code&gt;master|PR-.*|feature.*&lt;/code&gt;. Eso significa que la rama &lt;code&gt;master&lt;/code&gt;, cualquier rama que comience con &lt;code&gt;PR-&lt;/code&gt; o &lt;code&gt;feature&lt;/code&gt; se escaneará para buscar el fichero &lt;code&gt;Jenkinsfile&lt;/code&gt; para configurar los pipelines CI/CD.&lt;/p&gt;
&lt;p&gt;Si usa otro nombre de rama que no sea &lt;code&gt;master&lt;/code&gt;, como &lt;code&gt;develop&lt;/code&gt; o lo que sea, puede cambiar este patrón para que sea lo que quiera a través del parámetro &lt;code&gt;--branches&lt;/code&gt; siempre que ejecute &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_quickstart/&#34;&gt;jx create quickstart&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx import --branches &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;develop|PR-.*|feature.*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puede desear establecer simplemento &lt;code&gt;.*&lt;/code&gt; para trabajar con todas las ramas.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx import --branches &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;configurar-los-patrones-de-ramas-de-tu-equipos&#34;&gt;Configurar los patrones de ramas de tu equipos&lt;/h2&gt;
&lt;p&gt;Por lo general, un equipo usa las mismas convenciones de nomenclatura para las ramas, por lo que es posible que desee configurar los patrones de las ramas a nivel de equipo para que se usen de forma predeterminada si alguien en su equipo ejecuta &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_quickstart/&#34;&gt;jx create quickstart&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Estas configuraciones se almacenan en el recurso &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/&#34;&gt;Environment Custom Resource&lt;/a&gt; en Kubernetes.&lt;/p&gt;
&lt;p&gt;Para establecer los patrones de ramas para su equipo, utilice el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_branchpattern/&#34;&gt;jx create branchpattern&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create branchpattern  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;develop|PR-.*|feature.*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego puede ver los patrones de rama actuales para su equipo a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_branchpattern/&#34;&gt;jx get branchpattern&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get branchpattern
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Servidores de Jenkins Personalizados</title>
      <link>https://jenkins-x.io/es/docs/reference/components/custom-jenkins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/custom-jenkins/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X proporciona CI/CD automatizado para las bibliotecas y microservicios que desee implementar en Kubernetes, pero ¿qué pasa con esas otros pipelines basadas en &lt;code&gt;Jenkinsfile&lt;/code&gt; que ya ha creado en un servidor Jenkins personalizado?&lt;/p&gt;
&lt;p&gt;Jenkins X ahora tiene una &lt;a href=&#34;https://github.com/jenkins-x-apps/jx-app-jenkins&#34;&gt;aplicación Jenkins&lt;/a&gt; que facilita agregar uno o más servidores Jenkins personalizados a su equipo y utilizar el servidor Jenkins personalizado para implementar cualquier pipeline personalizado que haya desarrollado.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt; la aplicación Jenkins está diseñada solo para ejecutar pipelines personalizadas de &lt;code&gt;Jenkinsfile&lt;/code&gt; que haya desarrollado a mano; no es un motor de ejecución para los pipelines automatizadas de CI/CD en Jenkins X para cargas de trabajo de Kubernetes; para eso realmente recomendamos los &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/&#34;&gt;pipelines de Jenkins X sin servidor&lt;/a&gt;, pero también puede usar un servidor Jenkins estático incorporado.&lt;/p&gt;
&lt;h2 id=&#34;por-qué-jenkins-personalizado&#34;&gt;¿Por qué Jenkins personalizado?&lt;/h2&gt;
&lt;p&gt;Esta aplicación le permite mantener su inversión en sus pipelines de Jenkins existentes, invocándolas en un Servidor Jenkins personalizado de su propia elección y configuración mientras comienza a usar más CI/CD automatizado en Jenkins X para nuevas bibliotecas y microservicios utilizando &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Pipelines de Jenkins sin servidor X&lt;/a&gt; o el servidor estático incorporado de Jenkins en Jenkins X.&lt;/p&gt;
&lt;p&gt;Luego puede mezclar y combinar entre el CI/CD automatizado en Jenkins X y sus pipelines personalizadas de Jenkins, ¡todo bien organizado junto con Jenkins X!&lt;/p&gt;
&lt;h2 id=&#34;instalar-un-jenkins-personalizado&#34;&gt;Instalar un Jenkins personalizado&lt;/h2&gt;
&lt;p&gt;Para instalar el servidor de Jenkins personalizado debe ejecutar el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx add app jenkins
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esto instalará un nuevo servidor Jenkins en su equipo actual. Entonces debería aparecer a través de &amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx open
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esto también creará un token API automáticamente para que la CLI &lt;code&gt;jx&lt;/code&gt; pueda consultar o iniciar pipelines en el servidor Jenkins personalizado. Puede tomar un minuto más o menos para completar el trabajo de configuración.&lt;/p&gt;
&lt;h2 id=&#34;obtener-el-nombre-de-usuariocontraseña&#34;&gt;Obtener el nombre de usuario/contraseña&lt;/h2&gt;
&lt;p&gt;Desafortunadamente, hay una limitación en la aplicación Jenkins actual de que no le solicita la contraseña cuando agrega la aplicación Jenkins.&lt;/p&gt;
&lt;p&gt;Entonces, para encontrar la contraseña, tendrá que encontrarla a mano, me temo.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;descargar &lt;a href=&#34;https://github.com/mfuentesg/ksd&#34;&gt;ksd&lt;/a&gt; y adicionarlo a su $PATH&lt;/li&gt;
&lt;li&gt;escriba lo siguiente (debe necesitar cambiar el nombre del &lt;code&gt;Secret&lt;/code&gt; si utiliza un alias diferente en su servidor Jenkins):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get secret jx-jx-app-jenkins -o yaml | ksd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego podrá ver su usuario/contraseña en la pantalla si lo desea para para registrase en la interfaz de Jenkins a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx console&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;usando-el-jenkins-personalizado&#34;&gt;Usando el Jenkins personalizado&lt;/h2&gt;
&lt;p&gt;El comando &lt;code&gt;jx&lt;/code&gt; que funciona con servidores Jenkins puede funcionar directamente con su nuevo servidor Jenkins personalizado; aunque debe especificar que desea interactuar con un servidor Jenkins personalizado en lugar del motor de ejecución incorporado en Jenkins X (p.ej, &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Pipelines de Jenkins X sin servidor&lt;/a&gt; o el servidor Jenkins incorporado dentro de Jenkins X)&lt;/p&gt;
&lt;p&gt;Si solo tiene una aplicación Jenkins personalizada en su equipo, puede usar &lt;code&gt;-m&lt;/code&gt; para especificar que desea trabajar con un servidor Jenkins personalizado. De lo contrario, puede especificar &lt;code&gt;-n myjenkinsname&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# view the pipelines&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get pipeline -m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# view the log of a pipeline&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get build log -m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# view the Jenkins console&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx console -m
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lets start a pipeline in the custom jenkins&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx start pipeline -m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;administrar-servidores-jenkins-personalizados-a-través-de-gitops&#34;&gt;Administrar servidores Jenkins personalizados a través de GitOps&lt;/h2&gt;
&lt;p&gt;Hemos diseñado la aplicación Jenkins para Jenkins X utilizando el &lt;a href=&#34;https://jenkins-x.io/docs/contributing/addons/&#34;&gt;framework de extensión de la aplicación&lt;/a&gt;, lo que significa que puede administrar sus servidores Jenkins personalizados a través de &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/manage-via-gitops/&#34;&gt;GitOps&lt;/a&gt;, manteniendo todas las aplicaciones, su versión y configuración en git y utilizando las herramientas Jenkins X para agregar/actualizar/configurar/eliminar sus aplicaciones.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: DNS</title>
      <link>https://jenkins-x.io/es/docs/managing-jx/common-tasks/dns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/managing-jx/common-tasks/dns/</guid>
      <description>
        
        
        &lt;p&gt;Para poder acceder a los servicios alojados dentro de su clúster, usamos un dominio &lt;a href=&#34;https://nip.io/&#34;&gt;nip.io&lt;/a&gt;. Esto hace que sea muy fácil configurar y administrar DNS.&lt;/p&gt;
&lt;p&gt;Sin embargo, para los usuarios que desean que los servicios del clúster estén disponibles en un dominio personal, utilizamos DNS externos, que es igual de fácil.&lt;/p&gt;
&lt;h2 id=&#34;dns-externos&#34;&gt;DNS Externos&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt;: &lt;em&gt;Actualmente solo disponible en GKE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Puede utilizar el servicio &lt;a href=&#34;https://github.com/kubernetes-incubator/external-dns&#34;&gt;ExternalDNS&lt;/a&gt; para exponer los Servicios (&lt;code&gt;Services&lt;/code&gt;) y Entradas (&lt;code&gt;Ingress&lt;/code&gt;) de Kubernetes mediante la sincronización con proveedores de DNS.&lt;/p&gt;
&lt;p&gt;Si está utilizando &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/&#34;&gt;jx boot&lt;/a&gt; para instalar y configurar su instalación, modifique el fichero &lt;code&gt;jx-requirements.yml&lt;/code&gt; para habilitar &lt;code&gt;ingress.externalDNS: true&lt;/code&gt; como se describe en la &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/#ingress&#34;&gt;documentación de entradas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;De lo contrario, para que su clúster utilice ExternalDNS utilice la siguiente línea de comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx install --provider gke --tekton --external-dns
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Este comando le pedirá el dominio que desea utilizar.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🙅 developer ~/go-workspace/jx&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;master&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ jx install --provider gke --tekton --external-dns
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARNING: When using tekton, only kaniko is supported as a builder
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Context &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gke_&amp;lt;your-project-id&amp;gt;_europe-west1-b_&amp;lt;your-cluster-name&amp;gt;&amp;#34;&lt;/span&gt; modified.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set exposeController Config URLTemplate &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{.Service}}-{{.Namespace}}.{{.Domain}}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Git configured &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; user: **********  and email *********@****.***
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm installed and configured
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;? Provide the domain Jenkins X should be available at: your-domain.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego se crea una zona administrada de CloudDNS dentro de su proyecto GCP de clústeres, los grupos de registros que exponen sus servicios serán creados por ExternalDNS dentro de esta zona administrada.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🙅 developer ~/go-workspace&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;$ gcloud dns managed-zones list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                           DNS_NAME                   DESCRIPTION                       VISIBILITY
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;your-domain-com-zone           your-domain.com.           managed-zone utilised by jx       public
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;asignación&#34;&gt;Asignación&lt;/h3&gt;
&lt;p&gt;Una vez completada la instalación, se enviará una lista de servidores de nombres al terminal, actualice el sitio donde ha registrado su dominio utilizando estos servidores de nombres para delegar su dominio en Google CloudDNS.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ********************************************************
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            External DNS: Please delegate your-domain.com via
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            your registrar onto the following name servers:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                ns-cloud-d1.googledomains.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                ns-cloud-d2.googledomains.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                ns-cloud-d3.googledomains.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                ns-cloud-d4.googledomains.com.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ********************************************************
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;dominios-en-googlehttpsdomainsgoogle&#34;&gt;&lt;a href=&#34;https://domains.google&#34;&gt;Dominios en Google&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Si está utilizando Dominios de Google como su registrador de dominios, consulte &lt;a href=&#34;https://support.google.com/domains/answer/3290309?hl=en-GB&amp;amp;ref_topic=9018335&#34;&gt;aquí&lt;/a&gt; para obtener detalles sobre cómo delegar en servidores de nombres personalizados.&lt;/p&gt;
&lt;h3 id=&#34;plantillas-url&#34;&gt;Plantillas URL&lt;/h3&gt;
&lt;p&gt;Todos los servicios deben estar disponibles en el mismo dominio, la cual se deriva de la siguiente manera:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;service&amp;gt;-&amp;lt;namespace&amp;gt;.&amp;lt;your-domain&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Registro Docker</title>
      <link>https://jenkins-x.io/es/docs/reference/components/docker-registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/docker-registry/</guid>
      <description>
        
        
        &lt;p&gt;Para poder crear y publicar imágenes de Docker necesitamos usar un Registro de Docker.&lt;/p&gt;
&lt;p&gt;De forma predeterminada, Jenkins X se entrega con un Registro Docker que se incluye en el namespace del sistema para Jenkins X junto con Jenkins y Nexus. Dado que este registro de Docker se ejecuta dentro de su clúster de Kubernetes y se usa internamente dentro de su clúster, es difícil exponerlo a través de HTTPS con certificados autofirmados, por lo que de manera predeterminada usamos registros de Docker inseguros para el rango de IP de IP de servicio en su clúster de Kubernetes.&lt;/p&gt;
&lt;h2 id=&#34;utilizando-un-registro-de-docker-diferente&#34;&gt;Utilizando un registro de Docker diferente&lt;/h2&gt;
&lt;p&gt;Si está utilizando la nube pública, puede aprovechar el registro de docker de sus proveedores de nube; o reutilice su propio registro de docker existente.&lt;/p&gt;
&lt;h3 id=&#34;si-está-utilizando-un-master-de-jenkins-estático&#34;&gt;Si está utilizando un Master de Jenkins Estático&lt;/h3&gt;
&lt;p&gt;Para especificar el host/puerto Docker Registry, puede usar la consola Jenkins:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx console
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego navegue a &lt;code&gt;Manage Jenkins -&amp;gt; Configure System&lt;/code&gt; y cambie la variable de entorno &lt;code&gt;DOCKER_REGISTRY&lt;/code&gt; para apuntar a su registro de docker de elección.&lt;/p&gt;
&lt;p&gt;Otro enfoque es agregar lo siguiente a su archivo &lt;code&gt;values.yaml&lt;/code&gt; para la personalización de los charts de Helm en la plataforma Jenkins X:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jenkins&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;Servers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Global&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;EnvVars&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;DOCKER_REGISTRY&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcr.io&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;actualice-el-secreto-en-configjson&#34;&gt;Actualice el secreto en config.json&lt;/h2&gt;
&lt;p&gt;Va a necesitar actualizar el valor del secreto de docker almacenado en &lt;code&gt;config.json&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Puede logarlo a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_docker/&#34;&gt;jx create docker auth&lt;/a&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ jx create docker auth --host &amp;#34;foo.private.docker.registry&amp;#34; --user &amp;#34;foo&amp;#34; --secret &amp;#34;FooDockerHubToken&amp;#34; --email &amp;#34;fakeemail@gmail.com&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Si crea un fichero &lt;code&gt;config.json&lt;/code&gt; para su proveedor de registro de docker, p.ej para GCR en Google Cloud, seguramente necesitará algo como esto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;credHelpers&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;gcr.io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcloud&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;us.gcr.io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcloud&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eu.gcr.io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcloud&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;asia.gcr.io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcloud&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;staging-k8s.gcr.io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcloud&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para AWS es como esto:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;credsStore&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ecr-login&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Para actualizar el secreto &lt;code&gt;jenkins-docker-cfg&lt;/code&gt; puede hacerlo de la siguiente forma:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl delete secret jenkins-docker-cfg
$ kubectl create secret generic jenkins-docker-cfg --from-file=./config.json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt; el archivo debe llamarse &lt;code&gt;config.json&lt;/code&gt; ya que el nombre del archivo se usa en la clave del &lt;code&gt;secret&lt;/code&gt; subyacente en kubernetes&lt;/p&gt;
&lt;h2 id=&#34;utilizando-docker-hub&#34;&gt;Utilizando Docker Hub&lt;/h2&gt;
&lt;p&gt;Si desea almacenar las imágenes en DockerHub, entonces debe modificar su fichero &lt;code&gt;config.json&lt;/code&gt; como se describe a continuación:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;auths&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;https://index.docker.io/v1/&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyDockerHubToken&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myemail@acme.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;utilizando-jfrog-bintray-artifactory&#34;&gt;Utilizando jFrog BinTray (Artifactory)&lt;/h2&gt;
&lt;p&gt;Utilizar JFrog BinTray como registro privado para docker es posible. Esto ha sido probado solamente durante la creación del clúster y pasando el parámetro &lt;code&gt;--docker-registry=private-reg.bintray.io&lt;/code&gt;. Luego, después de creado el clúster, va a necesitar lo siguiente:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Borre el &lt;code&gt;Secret&lt;/code&gt; existente con el nombre &lt;code&gt;jenkins-docker-cfg&lt;/code&gt; ejecutando:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl delete secret jenkins-docker-cfg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;Cree un fichero local con el nombre &lt;code&gt;config.json&lt;/code&gt; y su valor debe estar en el siguiente formato (actualice los valores basados en su registro de usuario y FQDN):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;auths&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;https://private-reg.bintray.io&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;username:password (base64 encoded)&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myemail@acme.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;Cree el nuevo recurso &lt;code&gt;Secret&lt;/code&gt; con nombre &lt;code&gt;jenkins-docker-cfg&lt;/code&gt; con el contenido del fichero &lt;code&gt;config.json&lt;/code&gt; como lo siguiente:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ kubectl create secret generic jenkins-docker-cfg --from-file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;./config.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Con esto debe ser sufiente, ahora debe poder ejecutar los pipelines y almacenar las imágenes en registro jFrog BinTray.&lt;/p&gt;
&lt;h3 id=&#34;montar-el-secreto-para-su-registro&#34;&gt;Montar el Secreto para su registro&lt;/h3&gt;
&lt;p&gt;Su registro docker va a necesitar un Secreto que necesita ser montado en la &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/pod-templates/&#34;&gt;Plantilla Pod&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: ¿Cómo funciona?</title>
      <link>https://jenkins-x.io/es/docs/getting-started/setup/boot/how-it-works/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/getting-started/setup/boot/how-it-works/</guid>
      <description>
        
        
        &lt;h2 id=&#34;repositorio-de-origen&#34;&gt;Repositorio de Origen&lt;/h2&gt;
&lt;p&gt;Boot configura automáticamente todos los elementos de tipo &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/#sourcerepository&#34;&gt;SourceRepository&lt;/a&gt; que existan en la carpeta &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/tree/master/repositories/templates&#34;&gt;repositories/templates&lt;/a&gt;. De igual agrega todo los elementos de tipo &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/#scheduler&#34;&gt;Scheduler&lt;/a&gt; para reconstruir la configuración de Prow.&lt;/p&gt;
&lt;p&gt;De igual forma, Boot crea y actualiza automáticamente los webhooks que se necesiten en el proveedor de git para los recursos &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/#sourcerepository&#34;&gt;SourceRepository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si está utilizando GitOps, esperamos automatizar la gestión de la carpeta &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/tree/master/repositories/templates&#34;&gt;repositories/templates&lt;/a&gt; a medida que se importa/crea proyectos. Hasta entonces, puede crear manualmente un Pull Request en su repositorio git de boot a través de &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_create_pullrequest_repositories/&#34;&gt;jx step create pullrequest repositories&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;pipeline&#34;&gt;Pipeline&lt;/h2&gt;
&lt;p&gt;El proceso de instalación/actualización está definido en un &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipeline&lt;/a&gt; en el fichero con nombre &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/jenkins-x.yml&#34;&gt;jenkins-x.yml&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lo típico es que no tenga que modificar este fichero, pero si necesitas hacerlo revisa primero &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/jenkins-x-pipelines/#personalizar-el-pipelines&#34;&gt;esta guía&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;configuración&#34;&gt;Configuración&lt;/h2&gt;
&lt;p&gt;El proceso boot se configura utilizando el estilo de configuración de Helm basado en ficheros &lt;code&gt;values.yaml&lt;/code&gt;. Aunque también admitimos el uso de algunas &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/4328&#34;&gt;extensiones para helm&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;fichero-de-parámetros&#34;&gt;Fichero de Parámetros&lt;/h3&gt;
&lt;p&gt;Se ha definido el fichero &lt;a href=&#34;https://github.com/jenkins-x/environment-tekton-weasel-dev/blob/master/env/parameters.yaml&#34;&gt;env/parameters.yaml&lt;/a&gt; para establecer todos los parámetros registrados y cargados desde Vault o desde el directorio de archivos local con información sensible.&lt;/p&gt;
&lt;h4 id=&#34;inserción-de-secrets-en-los-parámetros&#34;&gt;Inserción de secrets en los parámetros&lt;/h4&gt;
&lt;p&gt;Si observan en el fichero &lt;a href=&#34;https://github.com/jenkins-x/environment-tekton-weasel-dev/blob/master/env/parameters.yaml&#34;&gt;env/parameters.yaml&lt;/a&gt; podrán ver algunos valores en el propio fichero y otros relacionados con un enlace, por ejemplo &lt;code&gt;local:my-cluster-folder/nameofSecret/key&lt;/code&gt;. Las definiciones con enlace permiten 2 esquemas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;vault:&lt;/code&gt; para obtener valores desde Vault (ubicación + llave).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local:&lt;/code&gt; para obtener valores desde el fichero almacenado en &lt;code&gt;~/.jx/localSecrets/$path.yml&lt;/code&gt; (llave solamente).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esto significa que se pueden almacenar todos los Parámetros utilizados en la configuración inicial para luego hacer referencia a ellos desde la fichero &lt;code&gt;values.tmpl.yaml&lt;/code&gt; y poblar el árbol de valores a insertar luego en Vault.&lt;/p&gt;
&lt;h3 id=&#34;poblar-el-fichero-parametersyaml&#34;&gt;Poblar el fichero &lt;code&gt;parameters.yaml&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Se puede poblar o nutrir el fichero &lt;code&gt;env/parameters.yaml&lt;/code&gt; del Pipeline a través del comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step create values --name parameters
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se utiliza el fichero &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config/blob/master/env/parameters.tmpl.schema.json&#34;&gt;parameters.schema.json&lt;/a&gt; para nutrir el UI.&lt;/p&gt;
&lt;h3 id=&#34;mejoras-al-fichero-valuesyaml&#34;&gt;Mejoras al fichero values.yaml&lt;/h3&gt;
&lt;h4 id=&#34;mantenimiento-del-árbol-de-ficheros-valuesyaml&#34;&gt;Mantenimiento del árbol de ficheros values.yaml&lt;/h4&gt;
&lt;p&gt;En lugar de tener solo un fichero enorme values.yaml con todas las anidaciones posibles, se puede tener una estructura de arbórea de archivos para cada aplicación que solo incluya la configuración específica en cada carpeta. p.ej.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;env/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  values.yaml   &lt;span style=&#34;color:#75715e&#34;&gt;# nivel máximo de configuración&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  prow/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    values.yaml &lt;span style=&#34;color:#75715e&#34;&gt;# configuraciones específicas de Prow&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  tekton/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    values.yaml  &lt;span style=&#34;color:#75715e&#34;&gt;# configuraciones específicas de Tekton&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;plantillas-valuestmplyaml&#34;&gt;Plantillas values.tmpl.yaml&lt;/h4&gt;
&lt;p&gt;Al utilizar &lt;code&gt;jx step helm apply&lt;/code&gt; permitimos que los archivos &lt;code&gt;values.tmpl.yaml&lt;/code&gt; utilicen las plantillas go/helm en la misma forma que los archivos &lt;code&gt;templates/foo.yaml&lt;/code&gt; son utilizados dentro de las plantillas helm. De esta forma se pueden generar cadenas de valor/dato que utilicen plantillas para estructurar cosas como valores de secrets más pequeños. p.ej. crear un fichero maven &lt;code&gt;settings.xml&lt;/code&gt;  o un fichero docker &lt;code&gt;config.json&lt;/code&gt; que incluye muchos usuarios/contraseñas para diferentes registros.&lt;/p&gt;
&lt;p&gt;Podemos ver en el fichero &lt;code&gt;values.tmpl.yaml&lt;/code&gt; cómo están todos los elementos estructurados y podremos referencia a ellos como valore de secrets a través de URLs (o funciones de plantillas) para acceder a Vault o al almacenamiento local.&lt;/p&gt;
&lt;p&gt;Para hacer esto se utiliza la expresión &lt;code&gt;{{ .Parameter.pipelineUser.token }}&lt;/code&gt; en algún lugar del archivo &lt;code&gt;values.tmpl.yaml&lt;/code&gt;. Entonces se podrá insertar valores dentro de la plantillas helm; pero esto sucede primero para ayudar a generar el fichero &lt;code&gt;values.yaml&lt;/code&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Servidores Git</title>
      <link>https://jenkins-x.io/es/docs/reference/components/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/git/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X usa de manera predeterminada &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;, la solución gratuita de alojamiento público de Git para proyectos de código abierto.&lt;/p&gt;
&lt;p&gt;Sin embargo, al trabajar en la empresa, es posible que desee utilizar diferentes servidores git.&lt;/p&gt;
&lt;h2 id=&#34;configurar-servidores-git-a-través-de-boot&#34;&gt;Configurar servidores Git a través de boot&lt;/h2&gt;
&lt;p&gt;Recomendamos encarecidamente que use &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/&#34;&gt;boot&lt;/a&gt; para instalar y configurar Jenkins X.&lt;/p&gt;
&lt;p&gt;Si está utilizando boot, utilice &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/#git&#34;&gt;estas instrucciones para configurar Git&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;listar-servidores-git&#34;&gt;Listar servidores Git&lt;/h2&gt;
&lt;p&gt;Puede listar los servidores Git configurados a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_git/&#34;&gt;jx get git&lt;/a&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx get git
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    &lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt; Todos los proveedores de Git mencionados aquí son compatibles si está utilizando Jenkins Static Masters. Sin embargo, si está utilizando &lt;strong&gt;Jenkins X Serverless con Tekton&lt;/strong&gt;, solo se admite GitHub. Esto significa que todos los demás proveedores de Git, incluido GitHub Enterprise, no son compatibles actualmente debido a cómo Prow se comunica con las API.&lt;/p&gt;
&lt;p&gt;Sin embargo, estamos integrando &lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;Lighthouse&lt;/a&gt; para garantizar el soporte para los proveedores de Git listados en esta página en un entorno Jenkins X Serverless muy pronto.&lt;/p&gt;


&lt;/div&gt;

&lt;h2 id=&#34;utilizar-diferentes-proveedores-git-por-entornos&#34;&gt;Utilizar diferentes proveedores Git por entornos&lt;/h2&gt;
&lt;p&gt;Cuando instales Jenkins X, creará repositorios de Git para &lt;code&gt;Staging&lt;/code&gt; y &lt;code&gt;Production&lt;/code&gt; usando GitHub.&lt;/p&gt;
&lt;p&gt;Si desea utilizar un proveedor de Git diferente para sus entornos, cuando instale Jenkins X agregue el parámetro &lt;code&gt;--no-default-environments&lt;/code&gt; en el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster/&#34;&gt;jx create cluster&lt;/a&gt; o &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx install&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;p.ej. para &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/create-cluster/&#34;&gt;crear un nuevo clúster&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx create cluster gke --no-default-environments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;o &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/install-on-cluster/&#34;&gt;instalarlo en un clúster existente&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx install --no-default-environments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego, una vez que Jenkins X esté instalado, puede &lt;a href=&#34;#agregar-un-nuevo-proveedor-git&#34;&gt;agregar un nuevo proveedor git&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Luego, cuando el proveedor git está configurado, puede verificar que esté disponible y que tenga el &lt;code&gt;gitKind&lt;/code&gt; correcto a través de:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx get git server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora cree los entornos &lt;code&gt;Staging&lt;/code&gt; y &lt;code&gt;Production&lt;/code&gt; utilizando el proveedor de git que desee a través de:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx create env staging --git-provider-url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://gitproviderhostname.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx create env production --git-provider-url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://gitproviderhostname.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;agregar-un-nuevo-proveedor-git&#34;&gt;Agregar un nuevo proveedor git&lt;/h2&gt;
&lt;p&gt;Si ya tiene un servidor git en algún lugar, puede agregarlo a Jenkins X a través de &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_git_server/&#34;&gt;jx create git server&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git server gitKind someURL
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Donde &lt;code&gt;gitKind&lt;/code&gt; es uno de los tipos de proveedores de git compatibles como &lt;code&gt;github, gitea, gitlab, bitbucketcloud, bitbucketserver&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Puede verificar qué URL del servidor y los valores &lt;code&gt;gitKind&lt;/code&gt; se configuran a través de:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get git server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;NOTA:&lt;/strong&gt; asegúrese de establecer el &lt;code&gt;gitKind&lt;/code&gt; correcto para su proveedor de git; de lo contrario, se invocará el proveedor de API REST subyacente incorrecto.&lt;/p&gt;
&lt;h2 id=&#34;github-enterprise&#34;&gt;GitHub Enterprise&lt;/h2&gt;
&lt;p&gt;Para adicionar al servidor GitHub Enterprise intente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git server github https://github.foo.com -n GHE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git token -n GHE myusername
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Donde &lt;code&gt;-n&lt;/code&gt; es el nombre del servicio git.&lt;/p&gt;
&lt;h2 id=&#34;bitbucket-cloud&#34;&gt;BitBucket Cloud&lt;/h2&gt;
&lt;p&gt;Para adicionar BitBucket Cloud intente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git server bitbucketcloud -n BitBucket https://bitbucket.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git token -n BitBucket myusername
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Por favor, asegúrece que &lt;code&gt;gitKind&lt;/code&gt; está correctamente escrito como &lt;code&gt;bitbucketcloud&lt;/code&gt; a través del comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get git server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;y que aparece en la columna &lt;code&gt;Kind&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;bitbucket-server&#34;&gt;BitBucket Server&lt;/h2&gt;
&lt;p&gt;Para adicionar BitBucket Standalone Server intente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git server bitbucketserver -n BitBucket https://your_server_address
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git token -n BitBucket myusername
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;gitlab&#34;&gt;Gitlab&lt;/h2&gt;
&lt;p&gt;Para adicionar el servidor Gitlab y el token intente:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git server gitlab https://gitlab.com/ -n gitlab
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git token -n gitlab myusername
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;adicionar-tokens-de-usuarios&#34;&gt;Adicionar tokens de usuarios&lt;/h3&gt;
&lt;p&gt;Para utilizar este servidor git necesitarás adicionar el nombre de usuario y el token del API a través de &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_git_token/&#34;&gt;jx create git token&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git token -n myProviderName myUserName
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Se le preguntará el token del API.&lt;/p&gt;
&lt;h3 id=&#34;proveedores-git-hospedado-en-kubernetes&#34;&gt;Proveedores Git hospedado en Kubernetes&lt;/h3&gt;
&lt;p&gt;Puede instalar proveedores git dentro del clúster de kubernetes que ejecuta Jenkins X.&lt;/p&gt;
&lt;p&gt;p.ej. hay un complemento para &lt;a href=&#34;https://gitea.io/en-us/&#34;&gt;gitea&lt;/a&gt; que le permite instalar &lt;code&gt;gitea&lt;/code&gt; como parte de su instalación de Jenkins X.&lt;/p&gt;
&lt;p&gt;Para usar &lt;a href=&#34;https://gitea.io/en-us/&#34;&gt;gitea&lt;/a&gt; con Jenkins X, debe habilitar el complemento &lt;code&gt;gitea&lt;/code&gt; antes de instalar Jenkins X:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit addon gitea -e true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puede ver los complementos habilitados a través de &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_addons/&#34;&gt;jx get addons&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get addons
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora, cuando &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/&#34;&gt;instales Jenkins X&lt;/a&gt; también instalará el componente &lt;code&gt;gitea&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Luego, cada vez que Jenkins X necesite crear un repositorio git para un entorno o para un nuevo proyecto, el servidor gitea aparecerá en la lista de selección.&lt;/p&gt;
&lt;h4 id=&#34;limitaciones-conocidas-de-gitea&#34;&gt;Limitaciones conocidas de gitea&lt;/h4&gt;
&lt;p&gt;Al momento de escribir, &lt;a href=&#34;https://issues.jenkins-ci.org/browse/JENKINS-50459&#34;&gt;el plugin de gitea para Jenkins&lt;/a&gt; no actualiza correctamente el PR y los estados de construcción de git commit que rompen los canales de promoción de GitOps. La promoción puede funcionar a través de la aprobación manual, pero el pipeline informa un fallo.&lt;/p&gt;
&lt;p&gt;Otro problema es que los nuevos proyectos creados por &lt;code&gt;jx&lt;/code&gt; dentro de &lt;code&gt;gitea&lt;/code&gt; no habilitan los &lt;a href=&#34;https://github.com/go-gitea/go-sdk/issues/100&#34;&gt;botones de combinación en los PR&lt;/a&gt;. La solución es que después de crear un proyecto en github, vaya a la página de &lt;code&gt;Settings&lt;/code&gt; para el repositorio dentro de la consola web de &lt;code&gt;gitea&lt;/code&gt; y active los botones de mezcla allí.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Helm 3</title>
      <link>https://jenkins-x.io/es/docs/reference/components/helm3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/helm3/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X utiliza &lt;a href=&#34;https://www.helm.sh/&#34;&gt;Helm&lt;/a&gt; para instalar Jenkins X e instalar las aplicaciones que cree en cada uno de los &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;Entornos&lt;/a&gt; (como &lt;code&gt;Staging&lt;/code&gt; y &lt;code&gt;Production&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTA&lt;/strong&gt; hasta que Helm 3 sea GA recomendamos que las personas utilicen &lt;a href=&#34;https://jenkins-x.io/news/helm-without-tiller/&#34;&gt;Helm 2.x sin Tiller&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Actualmente se está desarrollando Helm 3 que tiene una serie de grandes mejoras:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;elimine el componente del lado del servidor, Tiller, para que la &lt;code&gt;instalación de Helm&lt;/code&gt; use el RBAC del usuario/ServiceAccount actual&lt;/li&gt;
&lt;li&gt;las versiones se vuelven conscientes de los namespaces evitando la necesidad de crear nombres de versiones únicos a nivel global&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En el momento de escribir Helm 3 todavía está en su desarrollo, pero para mejorar los comentarios, hemos agregado soporte para Helm 2 y Helm 3 en Jenkins X.&lt;/p&gt;
&lt;p&gt;Puede usar Helm 2 o Helm 3 para hacer cualquiera de estas cosas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;instalar Jenkins X&lt;/li&gt;
&lt;li&gt;instalar sus aplicaciones en los entornos &lt;code&gt;Staging&lt;/code&gt; y &lt;code&gt;Production&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;p.ej. puede utilizar Helm 2 para instalar Jenkins X, luego utilizar Helm 3 para sus entornos &lt;code&gt;Staging&lt;/code&gt; y &lt;code&gt;Production&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Vea cómo especificar cuál versión de Helm utilizar.&lt;/p&gt;
&lt;h2 id=&#34;utilizar-helm-3-para-instalar-jenkins-x&#34;&gt;Utilizar helm 3 para instalar Jenkins X&lt;/h2&gt;
&lt;p&gt;Cuando instale Jenkins X a través de &lt;code&gt;jx create cluster ...&lt;/code&gt; o &lt;code&gt;jx install&lt;/code&gt; puede especificar &lt;code&gt;--helm3&lt;/code&gt; para utilizar helm 3 en vez de helm 2.x.&lt;/p&gt;
&lt;p&gt;Si lo instala utilizando helm 2, entonces su equipo por defecto utilizará helm 2 para su liberaciones. Si lo instala utilizando helm 3, entonces su equipo utilizará por defecto la versión 3.&lt;/p&gt;
&lt;p&gt;Para cambiar la versión de helm utilizada por su equipo use el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_helmbin/&#34;&gt;jx edit helmbin&lt;/a&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx edit helmbin helm3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;o para cambiar a helm 2:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx edit helmbin helm
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Puede ver la configuración actual para su equipo a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_helmbin/&#34;&gt;jx get helmbin&lt;/a&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx get helmbin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Básicamente la &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/pod-templates/&#34;&gt;plantilla del pod&lt;/a&gt; contiene ambos binarios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;helm&lt;/code&gt; which is a 2.x distro of helm&lt;/li&gt;
&lt;li&gt;&lt;code&gt;helm3&lt;/code&gt; which is a 3.x distro of helm&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Plantillas Pod</title>
      <link>https://jenkins-x.io/es/docs/reference/components/pod-templates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/pod-templates/</guid>
      <description>
        
        
        &lt;p&gt;Implementamos pipelines CI/CD utilizando pipelines declarativos de Jenkins a través del fichero &lt;code&gt;Jenkinsfile&lt;/code&gt; en el código de cada aplicación o entorno de repositorio git.&lt;/p&gt;
&lt;p&gt;Utilizamos &lt;a href=&#34;https://github.com/jenkinsci/kubernetes-plugin&#34;&gt;plugins de Kubernetes&lt;/a&gt; para que Jenkins pueda activar nuevos pods en Kubernetes para cada construcción, lo que nos da un grupo elástico de agentes para ejecutar tuberías gracias a Kubernetes.&lt;/p&gt;
&lt;p&gt;El complemento Kubernetes utiliza plantillas (&lt;em&gt;pod templates&lt;/em&gt;) para definir el pod utilizado para ejecutar un pipeline de CI/CD que consiste en:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uno o más contenedores de compilación para ejecutar comandos dentro (p.ej, sus herramientas de compilación como &lt;code&gt;mvn&lt;/code&gt; o &lt;code&gt;npm&lt;/code&gt; junto con las herramientas que utilizamos para otras partes del pipeline como &lt;code&gt;git, jx, helm, kubectl&lt;/code&gt;, etc.)&lt;/li&gt;
&lt;li&gt;volúmenes para persistencia&lt;/li&gt;
&lt;li&gt;Variables de entorno&lt;/li&gt;
&lt;li&gt;secretos para que el pipeline pueda escribir en repositorios git, registros de docker, repositorios maven/npm /helm, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;refiriéndose-a-plantillas-de-pod&#34;&gt;Refiriéndose a Plantillas de Pod&lt;/h2&gt;
&lt;p&gt;Jenkins X viene con un conjunto predeterminado de plantillas de pod para los lenguajes y tiempos de ejecución admitidos en nuestros paquetes de compilación y se denominan algo así como: &lt;code&gt;jenkins-$PACKNAME&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Por ejemplo, el &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/master/packs/maven/&#34;&gt;paquete de compilación de Maven&lt;/a&gt; utiliza la plantilla de pod &lt;code&gt;jenkins-maven&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Luego podemos referirnos al nombre de la &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/master/packs/maven/Jenkinsfile#L1-L4&#34;&gt;plantilla de pod en el fichero Jenkinsfile&lt;/a&gt; usando la sintaxis del agente &lt;code&gt;agent { label &amp;quot;jenkins-$PACKNAME&amp;quot; }&lt;/code&gt; en el pipeline declarativo. p.ej.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// my declarative Jenkinsfile
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipeline &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    agent &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      label &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins-maven&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    environment &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      stage&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CI Build and push snapshot&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        steps &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          container&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;maven&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sh &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mvn deploy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;enviar-nuevas-plantillas-de-pod&#34;&gt;Enviar nuevas Plantillas de Pod&lt;/h2&gt;
&lt;p&gt;Si está trabajando en un nuevo &lt;a href=&#34;https://jenkins-x.io/architecture/build-packs/&#34;&gt;paquete de compilación&lt;/a&gt;, nos encantaría que &lt;a href=&#34;https://jenkins-x.io/docs/contributing/&#34;&gt;envíe&lt;/a&gt; una nueva plantilla de pod y podemos incluirla en la distribución Jenkins X!&lt;/p&gt;
&lt;p&gt;Ahora sigue las instrucciones sobre cómo hacer esto. Por favor, si algo no está claro, ven &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;únete a la comunidad y pregunta&lt;/a&gt; ¡estaremos encantados de ayudarte!&lt;/p&gt;
&lt;p&gt;Para enviar un nuevo paquete de compilación:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bifurcar el repositorio &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/&#34;&gt;jenkins-x-platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;agregue su paquete de compilación al &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/values.yaml&#34;&gt;archivo values.yaml en el repositorio jenkins-x-platform&lt;/a&gt; en la sección &lt;code&gt;jenkins.Agent.PodTemplates&lt;/code&gt; de YAML&lt;/li&gt;
&lt;li&gt;es posible que desee comenzar copiando/pegando la plantilla de pod existente más similar (por ejemplo, copie &lt;code&gt;Maven&lt;/code&gt; si está trabajando en un pod de compilación basado en Java) y simplemente configure el nombre, la etiqueta y la imagen, etc.&lt;/li&gt;
&lt;li&gt;ahora envíe una solicitud de extracción en el repositorio &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/&#34;&gt;jenkins-x-platform&lt;/a&gt; para su plantilla de pod&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;construir-contenedores&#34;&gt;Construir contenedores&lt;/h3&gt;
&lt;p&gt;Al usar plantillas de pod y pipeliens de Jenkins, puede usar muchos contenedores diferentes para cada herramienta. p.ej. un contenedor para &lt;code&gt;maven&lt;/code&gt; y otro para &lt;code&gt;git&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;Hemos encontrado que es mucho más simple tener un solo contenedor de constructor con todas las herramientas comunes en su interior. Esto también significa que puede usar &lt;code&gt;kubectl exec&lt;/code&gt; o (/commands/jx_rsh) para abrir un shell dentro del pod de compilación y tener todas las herramientas que necesita disponibles para depurar/diagnosticar pipelines con problemas.&lt;/p&gt;
&lt;p&gt;Por lo tanto, tenemos una imagen de docker base (&lt;a href=&#34;https://github.com/jenkins-x/builder-base&#34;&gt;builder-base&lt;/a&gt;) en el generador que contiene &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders-base/blob/master/Dockerfile.common#L4-L15&#34;&gt;todas las diferentes herramientas&lt;/a&gt; que tendemos a utilizar en los pipelines de CI/CD como &lt;code&gt;jx, skaffold, helm, git, updatebot&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Si desea usar una sola imagen de generador para su nueva plantilla de pod, puede usar la base de generador y luego agregar sus herramientas personalizadas en la parte superior.&lt;/p&gt;
&lt;p&gt;p.ej. &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders/tree/master/builder-maven&#34;&gt;builder-maven&lt;/a&gt; utiliza un &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders/blob/master/builder-maven/Dockerfile#L1&#34;&gt;Dockerfile&lt;/a&gt; para hacer referencia al constructor base.&lt;/p&gt;
&lt;p&gt;Entonces, lo más simple podría ser copiar un constructor similar, como &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders/tree/master/builder-maven&#34;&gt;builder-maven&lt;/a&gt; y luego editar el &lt;code&gt;Dockerfile&lt;/code&gt; para agregar las herramientas de compilación que necesite.&lt;/p&gt;
&lt;p&gt;Nos encantan las solicitudes de extracción y las &lt;a href=&#34;https://jenkins-x.io/docs/contributing/&#34;&gt;contribuciones&lt;/a&gt;, así que envíe solicitudes de extracción para nuevos contenedores de compilación y plantillas de pods, ¡y estamos más que felices de &lt;a href=&#34;https://jenkins-x.io/docs/contributing/&#34;&gt;ayudar&lt;/a&gt;!&lt;/p&gt;
&lt;h2 id=&#34;agregar-sus-propias-plantillas-de-pod&#34;&gt;Agregar sus propias Plantillas de Pod&lt;/h2&gt;
&lt;p&gt;Para mantener las cosas Limpias y simples, tendemos a definir plantillas de pod en la configuración de Jenkins y luego nos referimos al nombre en el &lt;code&gt;Jenkinsfile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hay intentos de facilitar la inserción de definiciones de plantillas de pod dentro de su &lt;code&gt;Jenkinsfile&lt;/code&gt; si lo necesita; aunque una plantilla de pod tiende a tener muchas cosas específicas del entorno de desarrollador dentro, como secretos, por lo que preferiríamos mantener la mayoría de las plantillas de pod dentro del código fuente de su entorno de desarrollo en lugar de copiarlas/pegarlas en cada aplicación.&lt;/p&gt;
&lt;p&gt;Hoy, la forma más fácil de agregar nuevas plantillas de pod es a través de la consola Jenkins. p.ej.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jx console
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Eso abrirá la consola de Jenkins. Luego navegue a &lt;code&gt;Manage Jenkins&lt;/code&gt; (en el menú de la izquierda) y luego a &lt;code&gt;Configure System&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ahora se enfrentará a una gran página de opciones de configuración ;) Las plantillas de pod generalmente están en la parte inferior; debería ver todas las plantillas de pod actuales para cosas como maven, NodeJS, etc.&lt;/p&gt;
&lt;p&gt;Puede editar/agregar/eliminar plantillas de pod en esa página y presionar Guardar.&lt;/p&gt;
&lt;p&gt;Sin embargo, tenga en cuenta que a largo plazo esperamos &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/604&#34;&gt;mantener su entorno de desarrollo a través de GitOps, como lo hacemos para Staging y Production&lt;/a&gt;, lo que significa que los cambios realizados a través de la interfaz de usuario de Jenkins se perderán al &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;actualizar su entorno de desarrollo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A largo plazo, esperamos agregar las plantillas de pod en su archivo &lt;code&gt;values.yaml&lt;/code&gt; en el repositorio git de su entorno de desarrollador como lo hacemos para el &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/values.yaml#L194-L431&#34;&gt;chart jenkins-x-platform&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si está creando plantillas de pod utilizando herramientas de compilación de código abierto, puede ser más sencillo &lt;a href=&#34;#enviar-nuevas-plantillas-de-pod&#34;&gt;enviar su plantilla de pod en una solicitud de extracción&lt;/a&gt; y podemos agregar esa plantilla de pod en futuras versiones de Jenkins X.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Funcionalidades de Seguridad</title>
      <link>https://jenkins-x.io/es/docs/managing-jx/common-tasks/security-features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/managing-jx/common-tasks/security-features/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X tiene algunos complementos útiles que pueden ayudar a garantizar la seguridad de sus aplicaciones desplegadas. Hay seguridad estática y de contenedores, así como complementos de seguridad dinámicos disponibles.&lt;/p&gt;
&lt;h3 id=&#34;seguridad-estática&#34;&gt;Seguridad estática&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/anchore/anchore-engine&#34;&gt;Anchore Engine&lt;/a&gt; se utiliza para proporcionar seguridad a las imágenes de docker. Anchore examina el contenido de las imágenes a partir de un PR, de un estado de revisión o desde un contenedores en ejecución.&lt;/p&gt;
&lt;p&gt;Esto fue introducido en &lt;a href=&#34;https://jenkins.io/blog/2018/05/08/jenkins-x-anchore/&#34;&gt;esta publicación&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para habilitar esto, ejecute el siguiente comando y el servicio de Anchore será configurado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create addon anchore
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Esto lanzará los recursos necesarios, y tendrá disponible el servicio para ejecutarse en cualquiera de los entornos de su equipo, y en cualquier aplicación de vista previa en ejecución.&lt;/p&gt;
&lt;p&gt;Para probarlo, puede usar el siguiente comando para informar sobre cualquier problema encontrado:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get cve --environment&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;staging
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Aquí hay un video que &lt;a href=&#34;https://youtu.be/rB8Sw0FqCQk&#34;&gt;lo muestra en acción&lt;/a&gt;. Para eliminar este complemento utilice el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx delete addon anchore
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;seguridad-dinámica&#34;&gt;Seguridad dinámica&lt;/h3&gt;
&lt;p&gt;El sitio web Open Web Application Security Project publica una herramienta llamada ZAP: el &lt;a href=&#34;https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project&#34;&gt;Zed Attack Proxy&lt;/a&gt;. Esto proporciona varias herramientas, incluido un comando de línea que se puede ejecutar contra una entrada de la aplicación en busca de un conjunto básico de problemas.&lt;/p&gt;
&lt;p&gt;En Jenkins X, esto se puede ejecutar contra una aplicación de vista previa (que obtiene cada aplicación) creando un enlace a la vista previa:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create addon owasp-zap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Luego de habilitar este complemento cada PR tendrá su vista previa de la aplicación ejecutada a través del análisis de ZAP. En caso de detectarse fallas finalizará el pipeline CI automáticamente. Los pipelines no se modifican para ejecutar esta prueba, y se aplicarán a todas los PR para el equipo.&lt;/p&gt;
&lt;p&gt;Para eliminar el componente ZAP utilice el siguiente comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx delete post preview job --name owasp-zap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;El enlace de vista previa también se puede configurar con el comando:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create post preview job --name owasp --image owasp/zap2docker-weekly:latest -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;zap-baseline.py&amp;#34;&lt;/span&gt; -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-I&amp;#34;&lt;/span&gt; -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-t&amp;#34;&lt;/span&gt; -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\$(JX_PREVIEW_URL)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puede tener múltiples enlaces configurados, por lo tanto, si tuviera contenedores específicos a los que necesite revisar/probar, podría ejecutar en cada aplicación de vista previa (es decir, cada PR) utilizando el siguiente comando:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/docs/reference/preview/&#34;&gt;Entornos de vista previa&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Almacenamiento</title>
      <link>https://jenkins-x.io/es/docs/managing-jx/common-tasks/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/managing-jx/common-tasks/storage/</guid>
      <description>
        
        
        &lt;p&gt;Cuando utilizamos un servidor Jenkins estático (Static Jenkins Server) con Jenkins X heredamos el modelo de almacenamiento habitual Jenkins; que crean registros, resultados de pruebas e informes los cuales son almacenados en un volumen (Persistent Volume) persistente del servidor Jenkins.&lt;/p&gt;
&lt;p&gt;Sin embargo, a medida que avanzamos hacia un &lt;a href=&#34;https://jenkins-x.io/blog/2018/11/26/changes-november-26-2018/&#34;&gt;Jenkins más nativo en la nube&lt;/a&gt; y usamos Jenkins sin servidor (&lt;a href=&#34;https://jenkins-x.io/news/serverless-jenkins/&#34;&gt;Serverless Jenkins&lt;/a&gt;), necesitamos una mejor solución para el almacenamiento de cosas como registros, resultados de pruebas, informes de cobertura de código, etc.&lt;/p&gt;
&lt;h2 id=&#34;extensiones-de-almacenamiento&#34;&gt;Extensiones de almacenamiento&lt;/h2&gt;
&lt;p&gt;Así que hemos agregado un punto de extensión de almacenamiento que se usa desde:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;almacenar registros cuando se utiliza &lt;a href=&#34;https://jenkins-x.io/news/serverless-jenkins/&#34;&gt;Serverless Jenkins&lt;/a&gt;, que se realiza mediante el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_controller_build/&#34;&gt;jx controller build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;utilizando el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_stash/&#34;&gt;jx step stash&lt;/a&gt; que oculta archivos de una compilación (informes de prueba o cobertura)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configurar-el-almacenamiento&#34;&gt;Configurar el Almacenamiento&lt;/h2&gt;
&lt;p&gt;Puede configurar la ubicación predeterminada a utilizar para el almacenamiento. Actualmente permitimos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;almacenar archivos (registros, informes de prueba o cobertura) en una rama de un repositorio git. p.ej. podrían ser parte de la rama &lt;code&gt;gh-pages&lt;/code&gt; para su sitio estático.&lt;/li&gt;
&lt;li&gt;almacenar ficheros en espacios en la nube (buckets) como por ejemplo S3, GCS, Azure blobs, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;El almacenamiento utiliza clasificaciones que se utilizan para definir la carpeta donde se guardarán los tipos de recursos como&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;registros (logs)&lt;/li&gt;
&lt;li&gt;pruebas (tests)&lt;/li&gt;
&lt;li&gt;cobertura (coverage)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;También puede usar la clasificación especial &lt;code&gt;default&lt;/code&gt; que se utiliza si no tiene una configuración para la clasificación en cuestión. p.ej. puede definir una ubicación de &lt;code&gt;default&lt;/code&gt; y luego simplemente configurar dónde van los &lt;code&gt;logs&lt;/code&gt; si eso es diferente.&lt;/p&gt;
&lt;p&gt;Si está utilizando &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/&#34;&gt;jx boot&lt;/a&gt; para instalar y configurar Jenkins X, modifique el fichero &lt;code&gt;jx-requirements.yml&lt;/code&gt; para configurar el almacenamiento como se describe en la &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/#almacenamiento&#34;&gt;documentación de boot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;De lo contrario, para configurar la ubicación de almacenamiento para una clasificación y un equipo, use el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_storage/&#34;&gt;jx edit storage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;p.ej.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Configure the tests to be stored in cloud storage (using S3 / GCS / Azure Blobs etc)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit storage -c tests --bucket-url s3://myExistingBucketName
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Configure the git URL and branch of where to store logs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit storage -c logs --git-url https://github.com/myorg/mylogs.git --git-branch cheese
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puede ver la configuración de almacenamiento de su equipo a través de &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_storage/&#34;&gt;jx get storage&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;utilizando-el-almacenado-stash&#34;&gt;Utilizando el Almacenado (Stash)&lt;/h2&gt;
&lt;p&gt;Dentro del pipeline, puede ejecutar el comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_stash/&#34;&gt;jx step stash&lt;/a&gt; para almacenar archivos:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lets collect some files with the file names relative to the &amp;#39;target/test-reports&amp;#39; folder and store in a Git URL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step stash -c tests -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;target/test-reports/*&amp;#34;&lt;/span&gt; --basedir target/test-reports
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lets collect some files to a specific AWS cloud storage bucket&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step stash -c coverage -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build/coverage/*&amp;#34;&lt;/span&gt; --bucket-url s3://my-aws-bucket
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;especifique el clasificador mediante el parámetro &lt;code&gt;-c&lt;/code&gt; para pruebas o cobertura, etc.&lt;/li&gt;
&lt;li&gt;especifique los archivos que se recopilarán mediante el parámetro &lt;code&gt;-p&lt;/code&gt;, que admite expresiones como &lt;code&gt;*&lt;/code&gt; para archivos que se almacenarán con la ruta relativa del directorio.&lt;/li&gt;
&lt;li&gt;si desea eliminar un prefijo de directorio de los archivos guardados, como por ejemplo &lt;code&gt;target/reports&lt;/code&gt;, puede utilizar &lt;code&gt;--basedir&lt;/code&gt; para especificar el directorio para crear nombres de archivo relativos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;De forma predeterminada, &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_stash/&#34;&gt;jx step stash&lt;/a&gt; usará la ubicación configurada de su equipo para la clasificación que usted proporcione. Si lo desea, puede anular la ubicación de almacenado utilizando &lt;code&gt;--git-url&lt;/code&gt; o &lt;code&gt;--bucket-url&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;recuperar-ficheros-almacenados-unstashing&#34;&gt;Recuperar ficheros Almacenados (Unstashing)&lt;/h3&gt;
&lt;p&gt;Si lo necesita, puede recuperar los ficheros previamente almacenados a través del comando &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_unstash/&#34;&gt;jx step unstash&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si está en algún código fuente de Go y tiene una URL de Jenkins X, como una URL de registro de compilación o un archivo adjunto de un &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/&#34;&gt;PipelineActivity Custom Resource&lt;/a&gt;, la URL podría tener varias formas, como:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gs://anotherBucket/mydir/something.txt&lt;/code&gt; : utilizando un bucket GCS en GCP&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s3://nameOfBucket/mydir/something.txt&lt;/code&gt; : utilizando un bucket S3 en AWS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;azblob://thatBucket/mydir/something.txt&lt;/code&gt; : utiliznado un bucket de Azure&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://foo/bar&lt;/code&gt; : fichero almacenado en un repositorio git HTTP&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://foo/bar&lt;/code&gt; : fichero almacenado en un repositorio git HTTPS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Si desea poder leer fácilmente desde la URL del código fuente de Go, puede usar &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/e5a7943dc0c3d79c27f30aea73235f18b3f5dcff/pkg/cloud/buckets/buckets.go#L44-L45&#34;&gt;la función &lt;code&gt;ReadURL&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Actualizando Jenkins X</title>
      <link>https://jenkins-x.io/es/docs/managing-jx/common-tasks/upgrade-jx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/managing-jx/common-tasks/upgrade-jx/</guid>
      <description>
        
        
        &lt;p&gt;Puede mantener actualizado su entorno de Jenkins X utilizando la línea de comando &lt;code&gt;jx upgrade&lt;/code&gt;. A continuación se muestran los recursos que pudiera actualizar con mayor frecuencia. Para consultar un detallado listado de recursos posibles a actualizar ve &lt;a href=&#34;https://jenkins-x.io/commands/jx_upgrade/&#34;&gt;la documentación del propio comando&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;actualizando-el-binario-cli&#34;&gt;Actualizando el binario CLI&lt;/h2&gt;
&lt;p&gt;Actualice la interfaz de línea de comandos de Jenkins X abriendo un terminal y ejecutando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ jx upgrade cli
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Si no utiliza parámetros adicionales, el comando actualizará el binario &lt;code&gt;jx&lt;/code&gt; a la última versión liberada. Sin embargo, si desea instalar una versión específica puede agregar el parámetro &lt;code&gt;-v&lt;/code&gt; como se muestra a continuación:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ jx upgrade cli -v 2.0.46
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;actualizando-la-plataforma&#34;&gt;Actualizando la plataforma&lt;/h2&gt;
&lt;p&gt;Actualice su plataforma de Jenkins X junto a los paquetes relacionados con ella a través del comando:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ jx upgrade platform
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;La palabra &lt;code&gt;platform&lt;/code&gt; en el comando de actualización hace referencia a los siguientes sistemas: Jenkins, Helm, ChartMuseum, Nexus y Monocular. La plataforma también hace referencia a cualquier servidor ChartMuseum asociado con el clúster.&lt;/p&gt;
&lt;h2 id=&#34;actualizando-aplicaciones&#34;&gt;Actualizando Aplicaciones&lt;/h2&gt;
&lt;p&gt;Puede actualizar cualquier aplicación instalada en Jenkins X durante el proceso de creación del clúster utilizando &lt;code&gt;jx&lt;/code&gt; para actualizar el recurso:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ jx upgrade apps
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;La palabra &lt;code&gt;apps&lt;/code&gt; hace referencia a todas las aplicaciones instaladas en su clúster de Kubernetes si hay actualizaciones disponibles. Si desea actualizar solo aplicaciones específicas, puede usar el comando &lt;code&gt;jx upgrade app&lt;/code&gt; junto a la aplicación especificada:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ jx upgrade app cb-app-slack&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: TLS</title>
      <link>https://jenkins-x.io/es/docs/managing-jx/common-tasks/tls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/managing-jx/common-tasks/tls/</guid>
      <description>
        
        
        &lt;p&gt;Consulte la &lt;a href=&#34;https://jenkins-x.io/es/docs/getting-started/setup/boot/#ingress&#34;&gt;documentación de entradas de boot&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Vault</title>
      <link>https://jenkins-x.io/es/docs/reference/components/vault/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/vault/</guid>
      <description>
        
        
        

&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
Tenga en cuenta que actualmente Vault solo funciona en Google Cloud Platform (GCP) con Google Kubernetes Engine (GKE). Estamos trabajando para ampliar el soporte a otros proveedores de la nube.
&lt;/div&gt;

&lt;h1 id=&#34;qué-es-vault&#34;&gt;¿Qué es Vault?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.vaultproject.io&#34;&gt;Vault&lt;/a&gt; es un proyecto de código abierto para administrar secretos de forma segura y es nuestra forma preferida de administrar secretos en sus entornos en Jenkins X.&lt;/p&gt;
&lt;p&gt;En las infraestructuras informáticas tradicionales, todos los recursos y componentes (hardware, redes, disponibilidad, seguridad e implementación) así como los costos laborales asociados se gestionan localmente. Terceros entornos informáticos como proveedores de servicios en la nube y de Git ofrecen soluciones descentralizadas con distintas ventajas en el servicio de fiabilidad y costos sobre las soluciones tradicionales.&lt;/p&gt;
&lt;p&gt;Sin embargo, un problema con el uso de servicios en la nube, almacenamiento distribuido y repositorios remotos es la falta de redes confiables, hardware examinado, y otras medidas de seguridad observadas de cerca practicadas en entornos locales de
infraestructura. Por conveniencia, los usuarios a menudo almacenan información como credenciales de autenticación en repositorios públicos y abiertos, expuestos a posibles actividades maliciosas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.vaultproject.io/&#34;&gt;Hashicorp &lt;em&gt;Vault&lt;/em&gt;&lt;/a&gt; es una herramienta que centraliza la gestión de secretos: recursos que proporcionan autenticación a su entorno informático, como tokens, claves, contraseñas y certificados.&lt;/p&gt;
&lt;p&gt;Jenkins X maneja los recursos de seguridad y autenticación a través de la integración de Vault. Los usuarios pueden implementar Vault para almacenar y administrar de forma segura todos los aspectos de su plataforma de desarrollo.&lt;/p&gt;
&lt;p&gt;Jenkins X instala y configura Vault para su clúster de manera predeterminada a través del proceso de creación del clúster.&lt;/p&gt;
&lt;h2 id=&#34;características-de-vault&#34;&gt;Características de Vault&lt;/h2&gt;
&lt;p&gt;Vault es una herramienta para acceder y almacenar secretos de usuario. Gestiona el Complejidad del acceso seguro a los recursos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Almacenamiento de secretos: Vault coloca los secretos en un formato cifrado en un depósito (bucket) de almacenamiento remoto.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creación y eliminación de secretos - Vault crea secretos para un acceso dinámicos a depósitos de almacenamiento, acceso efímero que son
creados/destruidos según sea necesario para el acceso temporal a datos, y genera claves para la autenticación de la base de datos.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cifrado de datos: Vault almacena los secretos en un depósito de almacenamiento remoto en directorios seguros con cifrado seguro.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jenkins X interactúa con Vault a través del programa de línea de comando &lt;code&gt;jx&lt;/code&gt;. Hay comandos para crear, eliminar y gestionar secretos y bóvedas.&lt;/p&gt;
&lt;p&gt;Jenkins X usa Vault para almacenar todos los secretos de Jenkins X, como el token de acceso personal de GitHub generado para el pipeline del bot (sistema) cuando &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/&#34;&gt;crea un clúster de Jenkins X cluster&lt;/a&gt;. También almacena cualquier secreto de GitOps, como contraseñas para los depósitos de almacenamiento y claves para acceso seguro al servidor.&lt;/p&gt;
&lt;p&gt;Los secretos pueden ser recuperados por el pipeline o por la línea de comando si está registrado en la cuenta asociada con el servicio Kubernetes, así como en cualquier secreto almacenado en el espacio de nombres &lt;code&gt;jx&lt;/code&gt; para el pipeline.&lt;/p&gt;
&lt;p&gt;Las bóvedas se aprovisionan en Kubernetes usando &lt;code&gt;vault-operator&lt;/code&gt;, un Controlador Kubernetes de código abierto instalado cuando Vault está siendo  configurado durante la creación del clúster y la instalación de Jenkins X.&lt;/p&gt;
&lt;h1 id=&#34;utilizando-vault-en-el-cli&#34;&gt;Utilizando Vault en el CLI&lt;/h1&gt;
&lt;p&gt;Primero necesita descargar e instalar el CLI &lt;a href=&#34;https://github.com/starkandwayne/safe&#34;&gt;safe&lt;/a&gt; para Vault.&lt;/p&gt;
&lt;p&gt;Una vez instalado &lt;a href=&#34;https://github.com/starkandwayne/safe&#34;&gt;safe&lt;/a&gt; puede ejecutar el siguiente comando:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;eval `jx get vault-config`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ahora debe poder utilizar &lt;a href=&#34;https://github.com/starkandwayne/safe&#34;&gt;safe&lt;/a&gt; CLI para acceder a Vault.&lt;/p&gt;
&lt;p&gt;Puede entonces obtener un secreto a través de:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;safe get /secret/my-cluster-name/creds/my-secret
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;o puede actualizar un secreto a través de:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;safe set /secret/my-cluster-name/creds/my-secret username=myname password=mytoken
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Si tiene un blob de JSON para codificar como secreto, como una clave de cuenta de servicio, convierta el archivo a base64 primero y luego configúrelo &amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat my-service-account.json | base64 &amp;gt; myfile.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;safe set /secret/my-cluster-name/creds/my-secret json&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;@myfile.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;configurar-dns-y-tls-para-vault&#34;&gt;Configurar DNS y TLS para Vault&lt;/h1&gt;
&lt;p&gt;Para una instalación segura de Jenkins X, debe habilite TLS cuando interactúe con el servicio de almacenamiento. Para configurar TLS, primero debe configurar los ajustes de DNS de Zona en Google Cloud Platform, y luego configure los ajustes de DNS externos para el &lt;code&gt;Ingress&lt;/code&gt; y TLS en el
fichero de configuración ``jx-requirements.yml`.&lt;/p&gt;
&lt;h2 id=&#34;configurar-google-cloud-dns&#34;&gt;Configurar Google Cloud DNS&lt;/h2&gt;
&lt;p&gt;Para configurar el acceso DNS y TLS de Vault correctamente, debe configurar Google Cloud DNS de forma adecuada.&lt;/p&gt;
&lt;p&gt;Debe tener un nombre de dominio registrado, por ejemplo &lt;code&gt;www.acmecorp.example&lt;/code&gt; antes de configurar el DNS en la Zona de Configuraciones de Google. Para obtener más información, consulte la guía de &lt;a href=&#34;https://cloud.google.com/dns/docs/quickstart#create_a_managed_public_zone&#34;&gt;Creación de una Zona Administrada Pública&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Navegue hasta la página de &lt;a href=&#34;https://console.cloud.google.com/projectselector2/home/dashboard&#34;&gt;Selección de Proyecto&lt;/a&gt; y elija su proyecto de Google Cloud Platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://console.cloud.google.com/networking/dns/zones/~new&#34;&gt;Cree un DNS de Zona&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Elija como su &lt;em&gt;Tipo de zona&lt;/em&gt; Public.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Escriba un &lt;em&gt;Nombre de zona&lt;/em&gt; para su zona.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Adicione un sufijo al DNS in &lt;em&gt;DNS name&lt;/em&gt;, p.ej &lt;code&gt;acmecorp.example&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Seleccione su &lt;em&gt;DNSSEC&lt;/em&gt; o el estado de Seguridad DNS, que debe se configurado como &lt;code&gt;Off&lt;/code&gt; para este ejemplo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Opcional) Ingrese una &lt;em&gt;Descripción&lt;/em&gt; para su zona DNS.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clic en &lt;code&gt;Create&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Una vez creada, se carga la página &lt;em&gt;Zone Details&lt;/em&gt;. &lt;em&gt;NS&lt;/em&gt; (servidor de nombres) y los registros &lt;em&gt;SOA&lt;/em&gt; (Inicio de autoridad) se crean automáticamente para su dominio (por ejemplo, &lt;code&gt;acmecorp.example&lt;/code&gt;)&lt;/p&gt;
&lt;h2 id=&#34;configurar-dns-externo-en-jenkins-x&#34;&gt;Configurar DNS Externo en Jenkins X&lt;/h2&gt;
&lt;p&gt;Una vez que haya configurado Google Cloud DNS, puede usar la página de &lt;a href=&#34;https://console.cloud.google.com/net-services/dns/zones&#34;&gt;Zonas&lt;/a&gt; en su proyecto de Google Cloud Platform para configurar su dominio externo.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    NOTA: El DNS externo actualizará automáticamente los registros DNS si reutiliza el nombre de dominio, por lo que si elimina un clúster antiguo y crea uno nuevo, conservará la misma configuración de dominio para el nuevo clúster.

&lt;/div&gt;

&lt;p&gt;Para configurar DNS Externo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Elija un nombre DNS único; puede usar dominios anidados (por ejemplo, cluster1.acmecorp.example). Ingrese el nombre en el campo Nombre DNS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ejecute el comando &lt;code&gt;jx create domain&lt;/code&gt; contra su nombre de dominio, por ejemplo:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ jx create domain gke --domain cluster1.acmecorp.example
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Se le preguntará la información que se necesite para la configuración:

1. Seleccione su proyecto Google Cloud Platform del listado disponible.

2. Actualice sus servidores administrados existentes para usar la lista que se muestra de los servidores de nombres DNS en la nube. Copie la lista para usar en los próximos pasos.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;El siguiente paso es configurar GCP:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Desde la página &lt;a href=&#34;https://console.cloud.google.com/net-services/dns/zones&#34;&gt;Zonas&lt;/a&gt; de Google Cloud Platform, cambie el &lt;em&gt;Resource Record Type&lt;/em&gt; a &lt;code&gt;NS&lt;/code&gt;) y use los valores predeterminados para su dominio para &lt;em&gt;TTL&lt;/em&gt; (&lt;code&gt;5&lt;/code&gt;) y &lt;em&gt;TTL Unit&lt;/em&gt; (&lt;code&gt;minutos&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Agregue el primer servidor de nombres al campo &lt;em&gt;Servidor de nombres&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clic en &lt;code&gt;Add item&lt;/code&gt; y adicione cualquier servidor de nombre.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clic en &lt;code&gt;Create&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finalmente, configure Jenkins X para los nuevos nombres de dominio:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Edite el fichero &lt;code&gt;jx-requirements.yml&lt;/code&gt; y actualice el campo &lt;code&gt;dominio&lt;/code&gt; (en &lt;code&gt;Ingress&lt;/code&gt;) a su nombre de dominio, por ejemplo &lt;code&gt;cluster1.acmecorp.example&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En la configuración &lt;em&gt;tls&lt;/em&gt;, habilite TLS con &lt;code&gt;enabled: true&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;El fichero &lt;code&gt;jx-requirements.yml&lt;/code&gt; quedaría de la siguiente forma si utilizamos las configuraciones mencionadas:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;gitops&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;cluster1.acmecorp.example&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;externalDNS&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;namespaceSubDomain&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;jx.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;tls&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;email&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;certifiable@acmecorp.example&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;production&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;secretStorage&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;vault&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    Recuerde ejecutar el comando &lt;code&gt;jx boot&lt;/code&gt; para que los cambios tengan efecto en su entorno.

&lt;/div&gt;

&lt;h1 id=&#34;crear-un-vault&#34;&gt;Crear un Vault&lt;/h1&gt;
&lt;p&gt;De forma predeterminada, se crea un servicio Vault utilizando &lt;a href=&#34;https://jenkins-x.io/getting-started/boot/&#34;&gt;jx boot&lt;/a&gt; para crear su clúster, a menos que haya especificado durante la configuración del clúster no cree Vault. En este caso, puede crear una instalación posterior con la interfaz de línea de comandos &lt;code&gt;jx create&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ jx create vault
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;El programa le preguntará el nombre para su Vault (p.ej &lt;code&gt;acmevault&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;El programa le pedirá su Google Cloud Zone de elección. Consulte &lt;a href=&#34;https://cloud.google.com/compute/docs/regions-zones/&#34;&gt;Regiones y zonas&lt;/a&gt; en la documentación de Google Cloud para obtener más información. En este ejemplo, &lt;code&gt;us-east1-c&lt;/code&gt; se elige por su proximidad a la sede de Acme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Si tiene una cuenta de depósito de almacenamiento configurada desde la creación de un clúster con &lt;code&gt;jx boot&lt;/code&gt;, entonces el comando &lt;code&gt;jx create vault&lt;/code&gt; analizará su instalación en busca de depósitos de almacenamiento relacionados con Vault y, si se encuentra, le pedirá que apruebe eliminar y volver a crear el Vault desde cero.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;El programa le preguntará por el &lt;em&gt;Expose type&lt;/em&gt; para el Vault para crear reglas y rutas para el balanceo de carga del clúster y otros servicios. El valor predeterminado es &lt;code&gt;Ingress&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;El programa solicitará un dominio de clúster. El valor predeterminado es el creado en &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/&#34;&gt;el proceso de creación de Cluster&lt;/a&gt;, como 192.168.1.100.nip.io.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;El programa le pedirá una &lt;code&gt;URLTemplate&lt;/code&gt;. Presione &lt;code&gt;Enter&lt;/code&gt; para usar el valor predeterminado.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;El programa verificará sus respuestas a las preguntas anteriores en resumen y le pedirá que apruebe la creación de Vault (el valor predeterminado es &lt;code&gt;Yes&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Construcción Personalizada</title>
      <link>https://jenkins-x.io/es/docs/managing-jx/common-tasks/create-custom-builder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/managing-jx/common-tasks/create-custom-builder/</guid>
      <description>
        
        
        &lt;p&gt;En Jenkins X, es posible crear sus Constructores personalizados (también conocidos como &lt;a href=&#34;https://github.com/jenkinsci/kubernetes-plugin&#34;&gt;POD templates&lt;/a&gt;) o sobrescribir las existentes. Solo necesita basar su imagen de Docker en esta &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders-base/blob/master/builder-base/Dockerfile.common&#34;&gt;imagen base de construcción&lt;/a&gt;. Estas imágenes contienen una serie de herramientas pre-instaladas que se actualizan y publican constantemente en &lt;a href=&#34;https://hub.docker.com/r/jenkinsxio/builder-base/&#34;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;crear-un-constructor-personalizado-desde-cero&#34;&gt;Crear un Constructor personalizado desde cero&lt;/h2&gt;
&lt;h3 id=&#34;imagen-constructora&#34;&gt;Imagen Constructora&lt;/h3&gt;
&lt;p&gt;Primero debes crear una imagen de Docker para tu constructor. Por ejemplo, el ficheor &lt;code&gt;Dockerfile&lt;/code&gt; inicial puede verse así:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; jenkinsxio/builder-base:latest&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Install your tools and libraries&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; yum install -y gcc openssl-devel&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CMD&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcc&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora puede construir la imagen y publicarla en su repositorio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export BUILDER_IMAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;YOUR_REGISTRY&amp;gt;/&amp;lt;YOUR_BUILDER_IMAGE&amp;gt;:&amp;lt;VERSION&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker build -t &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BUILDER_IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker push &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BUILDER_IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;No se preocupe, no es necesario que ejecute estos pasos manualmente cada vez que necesite construir una nueva imagen. Jenkins X puede manejar esto por ti. Solo necesita insertar su ficheor &lt;code&gt;Dockerfile&lt;/code&gt; en un repositorio similar a &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders/tree/master/builder-go&#34;&gt;este&lt;/a&gt;. Ajuste el fichero &lt;code&gt;Jenkinsfile&lt;/code&gt; de acuerdo con el nombre de su organización y aplicación, y luego importe el repositorio en su plataforma Jenkins X con:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx import --url &amp;lt;REPOSITORY_URL&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;De ahora en adelante, cada vez que agregue una modificación Jenkins X va a construir y publicar automáticamente esta imagen.&lt;/p&gt;
&lt;h3 id=&#34;instalar-el-constructor&#34;&gt;Instalar el Constructor&lt;/h3&gt;
&lt;p&gt;Puede instalar su constructor tanto al inicio de la instalación de Jenkins X como durante la actualización.&lt;/p&gt;
&lt;p&gt;Crea el fichero &lt;code&gt;myvalues.yaml&lt;/code&gt; en su carpeta local &lt;code&gt;~/.jx/&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jenkins&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;Agent&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PodTemplates&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;MyBuilder&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mybuilder&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Label&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-mybuilder&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Secret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;secretName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-docker-cfg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;mountPath&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/home/jenkins/.docker&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;EnvVars&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;JENKINS_URL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://jenkins:8080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;GIT_COMMITTER_EMAIL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x@googlegroups.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;GIT_AUTHOR_EMAIL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x@googlegroups.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;GIT_AUTHOR_NAME&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x-bot&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;GIT_COMMITTER_NAME&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x-bot&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;XDG_CONFIG_HOME&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/home/jenkins&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;DOCKER_CONFIG&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/home/jenkins/.docker/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;ServiceAccount&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Containers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;Jnlp&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkinsci/jnlp-slave:3.14-1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;RequestCpu&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;100m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;RequestMemory&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;128Mi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Args&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${computer.jnlpmac} ${computer.name}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;Dlang&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;YOUR_BUILDER_IMAGE&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Privileged&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;RequestCpu&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;400m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;RequestMemory&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;512Mi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;LimitCpu&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;LimitMemory&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1024Mi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Command&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/sh -c&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Args&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cat&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Tty&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Modifique el nombre del constructor y su imagen correspondiente.&lt;/p&gt;
&lt;p&gt;Ahora puede continuar con la instalación de Jenkins X, el generador se agregará automáticamente a la plataforma.&lt;/p&gt;
&lt;h3 id=&#34;utilizar-el-constructor&#34;&gt;Utilizar el Constructor&lt;/h3&gt;
&lt;p&gt;Ahora que su constructor/generador a sido instalado en Jenkins, puede hacer referencia a él en el fichero &lt;code&gt;Jenkinsfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Groovy&#34; data-lang=&#34;Groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipeline &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    agent &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        label &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins-mybuilder&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      stage&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Build&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        when &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          branch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;master&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        steps &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          container&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mybuilder&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;// your steps
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    post &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        always &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            cleanWs&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;sobreescribir-el-constructor-existente&#34;&gt;Sobreescribir el Constructor existente&lt;/h2&gt;
&lt;p&gt;Jenkins X viene con una serie de &lt;a href=&#34;https://raw.githubusercontent.com/jenkins-x/jenkins-x-platform/master/jenkins-x-platform/values.yaml&#34;&gt;constructores pre-instalados&lt;/a&gt; que puede sobrescribir si es necesario durante la instalación o actualización.&lt;/p&gt;
&lt;p&gt;Solo necesita crear su imagen personalizada ya sea en &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders-base/blob/master/builder-base/Dockerfile.common&#34;&gt;base a la imagen del generador&lt;/a&gt; o la &lt;a href=&#34;https://hub.docker.com/u/jenkinsxio/&#34;&gt;imagen del generador&lt;/a&gt; que desea sobrescribir. Ver más detalles arriba.&lt;/p&gt;
&lt;p&gt;Luego puede crear el fichero &lt;code&gt;myvalues.yaml&lt;/code&gt; en su carpeta local &lt;code&gt;~/.jx/&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jenkins&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;Agent&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PodTemplates&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;Maven&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Containers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;Maven&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;YOUR_REGISTRY&amp;gt;/&amp;lt;YOUR_MAVEN_BUILDER_IMAGE&amp;gt;:&amp;lt;VERSION&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;Nodejs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Containers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;Nodejs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;YOUR_REGISTRY&amp;gt;/&amp;lt;YOUR_NODEJS_BUILDER_IMAGE&amp;gt;:&amp;lt;VERSION&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;Go&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Containers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;Go&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;YOUR_REGISTRY&amp;gt;/&amp;lt;YOUR_GO_BUILDER_IMAGE&amp;gt;:&amp;lt;VERSION&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora puede continuar con la instalación de Jenkins X, el generador se agregará automáticamente a la plataforma.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Código Fuente</title>
      <link>https://jenkins-x.io/es/docs/reference/components/source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/es/docs/reference/components/source/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X está construido sobre los hombros de gigantes y también tiene muchos repositorios de diferentes orígenes para hacer lograr varios objetivos, desde herramientas CLI, imágenes de docker, helm charts y &lt;a href=&#34;https://jenkins-x.io/docs/contributing/addons/&#34;&gt;aplicaciones como complementos&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Esta página enumera las principales organizaciones y repositorios.&lt;/p&gt;
&lt;h2 id=&#34;organizaciones&#34;&gt;Organizaciones&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x&#34;&gt;jenkins-x&lt;/a&gt; la organización principal para el código fuente&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-apps&#34;&gt;jenkins-x-apps&lt;/a&gt; contiene el estándar de &lt;a href=&#34;https://jenkins-x.io/docs/contributing/addons/&#34;&gt;aplicaciones de componentes&lt;/a&gt; para Jenkins X&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-buildpacks&#34;&gt;jenkins-x-buildpacks&lt;/a&gt; contiene los paquetes de &lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/build-packs/&#34;&gt;compilación disponibles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-charts&#34;&gt;jenkins-x-charts&lt;/a&gt; los principales helm charts que distribuimos&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-images&#34;&gt;jenkins-x-images&lt;/a&gt; contiene algunas compilaciones de imágenes de docker personalizadas&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-quickstarts&#34;&gt;jenkins-x-quickstarts&lt;/a&gt; los proyectos de inicio rápido utilizados por &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/first-project/create-quickstart/&#34;&gt;create quickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-test-projects&#34;&gt;jenkins-x-test-projects&lt;/a&gt; proyectos de prueba que usamos en casos de prueba&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;repositorios&#34;&gt;Repositorios&lt;/h2&gt;
&lt;p&gt;Aquí mencionaremos a algunos de los principales repositorios en las organizaciones anteriores:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx&#34;&gt;jenkins-x/jx&lt;/a&gt; el repositorio principal que crea la CLI &lt;code&gt;jx&lt;/code&gt; y los pasos de pipelines reutilizables&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx-docs&#34;&gt;jenkins-x/jx-docs&lt;/a&gt; la documentación basada en Hugo que genera este sitio web&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/bdd-jx&#34;&gt;jenkins-x/bdd-jx&lt;/a&gt; las pruebas BDD que utilizamos para verificar los cambios de plataforma y verificar los PR en &lt;a href=&#34;https://github.com/jenkins-x/jx&#34;&gt;jenkins-x/jx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform&#34;&gt;jenkins-x/jenkins-x-platform&lt;/a&gt; el principal helm chart compuesto para la plataforma Jenkins X&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-versions&#34;&gt;jenkins-x/jenkins-x-versions&lt;/a&gt; contiene el &lt;a href=&#34;https://jenkins-x.io/es/about/concepts/version-stream/&#34;&gt;flujo de versiones&lt;/a&gt;: las versiones estables de todos los &lt;em&gt;charts&lt;/em&gt; y &lt;em&gt;paquetes&lt;/em&gt; de CLI&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/cloud-environments&#34;&gt;jenkins-x/cloud-environments&lt;/a&gt; las configuraciones helm para diferentes proveedores de la nube&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;construir-pods-e-imágenes&#34;&gt;Construir pods e imágenes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders&#34;&gt;jenkins-x/jenkins-x-builders&lt;/a&gt; genera las imágenes estáticas de docker de los pod de compilación del servidor jenkins&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-image&#34;&gt;jenkins-x/jenkins-x-image&lt;/a&gt; genera la imagen docker para el servidor jenkins estático que usamos por defecto&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-serverless&#34;&gt;jenkins-x/jenkins-x-serverless&lt;/a&gt; genera las imágenes de docker para &lt;a href=&#34;https://jenkins-x.io/news/serverless-jenkins/&#34;&gt;jenkins sin servidor&lt;/a&gt; cuando se utiliza &lt;a href=&#34;https://jenkins-x.io/architecture/prow/&#34;&gt;Prow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;herramientas&#34;&gt;Herramientas&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;jenkins-x/lighthouse&lt;/a&gt; la solución estratégica para webhooks y ChatOps para múltiples proveedores de git&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/exposecontroller&#34;&gt;jenkins-x/exposecontroller&lt;/a&gt; una &lt;code&gt;Deployment&lt;/code&gt; o &lt;code&gt;Job&lt;/code&gt; que se puede usar para generar/actualizar recursos de &lt;code&gt;Ingress&lt;/code&gt; (o &lt;code&gt;Route&lt;/code&gt; en OpenShift) si cambia su dominio DNS o habilita TLS; también puede inyectar URL externas en su aplicación a través de la inyección del &lt;code&gt;ConfigMap&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
