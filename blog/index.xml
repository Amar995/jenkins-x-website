<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes – Jenkins X Blog</title>
    <link>https://jenkins-x.io/blog/</link>
    <description>Recent content in Jenkins X Blog on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Blog: Hacktoberfest conclusion 2021</title>
      <link>https://jenkins-x.io/blog/2021/11/22/hacktoberfestconclusion2021/</link>
      <pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/11/22/hacktoberfestconclusion2021/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;Hacktoberfest 2021&lt;/a&gt; is over, and we got quite a few contributions from the open source community.&lt;/p&gt;
&lt;p&gt;Contributions included various document improvements, adding jira as an issue tracker for generating changelogs and adding initial support for external vault!&lt;/p&gt;
&lt;p&gt;The top contributors to Jenkins X in hacktoberfest 2021 were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Marten Svantesson&lt;/li&gt;
&lt;li&gt;Christopher vig&lt;/li&gt;
&lt;li&gt;James Rawlings&lt;/li&gt;
&lt;li&gt;Hays Clark&lt;/li&gt;
&lt;li&gt;Anatoli Babenia&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We would also like to thank all the contributors who participated and made it a success.
The strength of Jenkins X lies in it&amp;rsquo;s vast community, and we hope to see many more major contributions from them in the near and far future.&lt;/p&gt;
&lt;h3 id=&#34;ask-us-questions&#34;&gt;Ask us questions&lt;/h3&gt;
&lt;p&gt;Missed this year&amp;rsquo;s hacktoberfest?
No worries, you can always contribute to Jenkins X.
We&amp;rsquo;re happy to help if you have any questions.
Talk to us on our slack channels, which are part of the Kubernetes slack. Join Kubernetes slack &lt;a href=&#34;http://slack.k8s.io/&#34;&gt;here&lt;/a&gt; and find us on our channels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;#jenkins-x-dev for developers of Jenkins X&lt;/li&gt;
&lt;li&gt;#jenkins-x-user for users of Jenkins X&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;We look forward to participating in the next hacktoberfest!&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Hacktoberfest 2021</title>
      <link>https://jenkins-x.io/blog/2021/10/06/hacktoberfest2021/</link>
      <pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/10/06/hacktoberfest2021/</guid>
      <description>
        
        
        &lt;p&gt;We are excited to announce that Jenkins X will be participating in Hacktoberfest again this year! Hacktoberfest is a month-long global celebration of open source software.&lt;/p&gt;
&lt;p&gt;All backgrounds and skill levels are encouraged to participate in Hacktoberfest and join a global community of open source contributors.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Learn more about Hacktoberfest and sign up &lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;contribute-to-jenkins-x-docs&#34;&gt;Contribute to Jenkins X docs&lt;/h3&gt;
&lt;p&gt;We welcome your contributions to the &lt;a href=&#34;https://github.com/jenkins-x/jx-docs&#34;&gt;Jenkins X documentation project&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx-docs/issues?q=is%3Aissue+is%3Aopen+label%3Ahacktoberfest&#34;&gt;Issues labelled &amp;ldquo;hacktoberfest&amp;rdquo;&lt;/a&gt; generally indicate good first issues. However, all pull requests will count towards your Hacktoberfest challenge.&lt;/p&gt;
&lt;h3 id=&#34;ask-us-questions&#34;&gt;Ask us questions&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;re happy to help if you have any questions. Talk to us on our slack channels, which are part of the Kubernetes slack. Join  Kubernetes slack &lt;a href=&#34;http://slack.k8s.io/&#34;&gt;here&lt;/a&gt; and find us on our channels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;#jenkins-x-dev for developers of Jenkins X&lt;/li&gt;
&lt;li&gt;#jenkins-x-user for users of Jenkins X&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Find out more about becoming involved in the Jenkins X community &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We look forward to seeing you in open source, fixing all the things!&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Moving Jenkins X v2 artifacts</title>
      <link>https://jenkins-x.io/blog/2021/08/26/moving-v2-artifacts/</link>
      <pubDate>Thu, 26 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/08/26/moving-v2-artifacts/</guid>
      <description>
        
        
        &lt;h1 id=&#34;__action-required__&#34;&gt;&lt;strong&gt;ACTION REQUIRED&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;TL;DR - Jenkins X specific helm repositories and container registries hosted on GCP have been moved to GitHub.  This will mainly affect jx v2 users but there is expected to be a small impact on v3 users too.  Below describes the steps we believe are needed to keep Jenkins X installations working as normal but there will be some action needed.&lt;/p&gt;
&lt;h2 id=&#34;why-the-disruption&#34;&gt;Why the disruption?&lt;/h2&gt;
&lt;p&gt;When Jenkins X first started we made heavy use of GCP&amp;rsquo;s services for hosting the cloud infrastructure needed by users to install and run Jenkins X.  This was great as we could use the same IAM to push and maintain content from our own hosted build infrastructure and ensure we were validating the same experience of using cloud provider hosted services wherever possible.  As Jenkins X grew in popularity the cloud costs began to increase with the &lt;a href=&#34;https://cloud.google.com/container-registry/pricing&#34;&gt;pricing model from GCP&lt;/a&gt;, specifically the networking costs of cross continent egress.&lt;/p&gt;
&lt;p&gt;Given this, for jx3 we decided to see if switching to &lt;a href=&#34;https://github.com/orgs/jenkins-x/packages&#34;&gt;GitHub packages for container images&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x-charts.github.io/repo/&#34;&gt;GitHub pages&lt;/a&gt; for helm repositories would be better, the result was it is better.  In fact we have made it super easy for users to switch to using GitHub pages for releasing &lt;a href=&#34;https://jenkins-x.io/v3/develop/faq/config/registries/#how-do-i-switch-to-github-pages-for-charts&#34;&gt;helm charts&lt;/a&gt; and using GitHub packages.&lt;/p&gt;
&lt;p&gt;Now that we have validated GitHub is more cost effective for hosting public images and helm charts for the Jenkins X project, we want to switch to using GitHub for all v2 plus v3 users, then shutdown the GCP services which are causing unnecessary cost.&lt;/p&gt;
&lt;p&gt;It is expected that v3 users will need a small change and v2 slightly more.  Details for both will be described below but it is worth noting that there hasn&amp;rsquo;t been a v2 release in 9 months and v3 was &lt;a href=&#34;https://jenkins-x.io/blog/2021/04/15/jx-v3-ga/&#34;&gt;GA in April&lt;/a&gt; earlier this year, so we aren&amp;rsquo;t expecting too many folks on v2.  We are aiming to limit any disruption and help provide easy steps to handle the move.&lt;/p&gt;
&lt;p&gt;We apologise for any extra work caused however, this is required to preserve the long running hosting of Jenkins X artifacts both past and present.  If you experience issues that are not covered by the steps below please reach out to the &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;community slack channel&lt;/a&gt; and we can help address and update this blog with details.&lt;/p&gt;
&lt;h2 id=&#34;what-is-changing&#34;&gt;What is changing?&lt;/h2&gt;
&lt;p&gt;We will be shutting down a number of GCP projects that contain old helm charts plus container images and moving them to be hosted by GitHub packages and pages.&lt;/p&gt;
&lt;h4 id=&#34;helm&#34;&gt;Helm&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://chartmuseum.build.cd.jenkins-x.io
http://chartmuseum.jenkins-x.io
https://storage.googleapis.com/chartmuseum.jenkins-x.io
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;have been moved to&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://jenkins-x-charts.github.io/v2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;AND&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://storage.googleapis.com/jenkinsxio/charts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;has been moved to&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://jenkins-x-charts.github.io/repo
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;images&#34;&gt;Images&lt;/h4&gt;
&lt;p&gt;The most recently versioned images from &lt;a href=&#34;https://console.cloud.google.com/gcr/images/jenkinsxio/GLOBAL&#34;&gt;gcr.io/jenkinsxio&lt;/a&gt; have been moved to &lt;a href=&#34;https://github.com/orgs/jenkins-x/packages&#34;&gt;ghcr.io/jenkins-x&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;labs&#34;&gt;Labs&lt;/h4&gt;
&lt;p&gt;There are some old labs images and helm charts which should not be in use as they are either deprecated or replaced with GA versions in the v3 &lt;a href=&#34;https://jenkins-x-charts.github.io/repo/&#34;&gt;helm repo&lt;/a&gt; or &lt;a href=&#34;https://github.com/orgs/jenkins-x/packages&#34;&gt;container registry&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;v2-users&#34;&gt;v2 users&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The Jenkins X own v2 build infrastructure was retired at the start of the year as no more releases were planned and to reduce costs.  With that we are unable to perform a new release that automatically switches references to images from &lt;code&gt;gcr.io/jenkinsxio&lt;/code&gt; to &lt;code&gt;ghcr.io/jenkins-x&lt;/code&gt;.  If you are still using v2 then please update your references to this container registry.  An alternative &lt;strong&gt;which has not yet been verified&lt;/strong&gt; is to use a &lt;a href=&#34;https://github.com/phenixblue/imageswap-webhook&#34;&gt;image swap Kubernetes mutating admission controller&lt;/a&gt; which takes configuration to switch the registry on the fly.  &lt;a href=&#34;https://github.com/phenixblue/imageswap-webhook&#34;&gt;We have asked on slack&lt;/a&gt; for help validating the approach so if you do try it please share feedback and config used to help others in the channel, we can then update docs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your boot git repository, run a search for references of &lt;code&gt;http://chartmuseum.jenkins-x.io&lt;/code&gt; and &lt;code&gt;https://storage.googleapis.com/chartmuseum.jenkins-x.io&lt;/code&gt; replace with &lt;code&gt;https://jenkins-x-charts.github.io/v2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Change the &lt;code&gt;lighthouse-jx-controller&lt;/code&gt; deployment to use an environment variable&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;JX_DEFAULT_IMAGE=ghcr.io/jenkins-x/builder-maven:2.1.155-778-patch3
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;Environment controller (can be skipped if not using)&lt;/p&gt;
&lt;p&gt;i) change the environment controller image to be &lt;code&gt;ghcr.io/jenkins-x/builder-maven:2.1.155-778-patch3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ii) change the image used in the pipeline, needs to be changed in the jenkins-x.yaml of the enviromnet repo:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;agent:
 container: ghcr.io/jenkins-x/builder-jx:2.1.155-778-patch3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;iii) add this environment variable in the deployment of the environment-controller&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; - name: BUILDER_JX_IMAGE
   value: ghcr.io/jenkins-x/builder-jx:2.1.155-778-patch3
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your boot git repository, set the following values for  &lt;code&gt;env/jenkins-x-platform&lt;/code&gt; deployment:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;expose.Image&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/exposecontroller&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;expose.ImageTag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.3.118&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;cleanup.Image&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/exposecontroller&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;cleanup.ImageTag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.3.118&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;controllerbuild.image.repository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;controllerbuild.image.tag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;controllerbuild.env.BUILDER_JX_IMAGE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx:2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;postinstalljob.image.repository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;postinstalljob.image.tag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;postinstalljob.env.BUILDER_JX_IMAGE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx:2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;controllerrole.image.repository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;controllerrole.image.tag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;controllerrole.env.BUILDER_JX_IMAGE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx:2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gcpreviews.image.repository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gcpreviews.image.tag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gcpreviews.env.BUILDER_JX_IMAGE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx:2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gcactivities.image.repository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gcactivities.image.tag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gcactivities.env.BUILDER_JX_IMAGE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx:2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gcpods.image.repository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gcpods.image.tag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;gcpods.env.BUILDER_JX_IMAGE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-jx:2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your boot git repository, set the following values for  &lt;code&gt;env/lighthouse-jx&lt;/code&gt; deployment:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;image.parentRepository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;image.tag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.0.164&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;jxcontroller.image.repository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/lighthouse-jx-controller&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;jxcontroller.image.tag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0.0.164&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;env.JX_DEFAULT_IMAGE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-maven:2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your boot git repository, set the following values for  &lt;code&gt;env/lighthouse&lt;/code&gt; deployment:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;image.parentRepository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;image.repository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/lighthouse&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;env.JX_DEFAULT_IMAGE&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/builder-maven:2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your boot git repository, update the &lt;code&gt;jenkins-x.yml&lt;/code&gt; replacing any reference to &lt;code&gt;image: gcr.io/jenkinsxio/builder-go:2.1.155-778&lt;/code&gt; with &lt;code&gt;image: ghcr.io/jenkins-x/builder-go:2.1.155-778-patch3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your boot git repository, update the &lt;code&gt;jenkins-x-release.yml&lt;/code&gt; replacing any reference to &lt;code&gt;image: gcr.io/jenkinsxio/builder-go:2.1.155-778&lt;/code&gt; with &lt;code&gt;image: ghcr.io/jenkins-x/builder-go:2.1.155-778-patch3&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your boot git repository, update the &lt;code&gt;systems/jxing/values.tmpl.yaml&lt;/code&gt; setting&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;nginx-ingress.controller.image.repository&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/nginx-ingress-controller&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;In any environment managed repository (e.g. environment-*-staging | production) update &lt;code&gt;env/values.yaml&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;expose.Image&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/exposecontroller&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;expose.ImageTag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.3.118&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;cleanup.Image&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;ghcr.io/jenkins-x/exposecontroller&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;cleanup.ImageTag&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.3.118&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ol start=&#34;12&#34;&gt;
&lt;li&gt;In any environment managed repository (e.g. environment-*-staging | production) update &lt;code&gt;env/requirements.yaml&lt;/code&gt; replacing any exposecontroller repository url with &lt;code&gt;https://jenkins-x-charts.github.io/v2&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;- alias: expose
  name: exposecontroller
  repository: https://jenkins-x-charts.github.io/v2
  version: 2.3.118
- alias: cleanup
  name: exposecontroller
  repository: https://jenkins-x-charts.github.io/v2
  version: 2.3.118
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;In any applications repositories who has already import into jx, update the &lt;code&gt;./jenkins-x.yaml&lt;/code&gt; add or replace :
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pipelineConfig:
  agent:
    image: `ghcr.io/jenkins-x/BUILDER_YOU_NEED:2.1.155-778-patch3`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is the list of the principal images who has migrated to new ghcr:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;builder-jx&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;builder-nodejs&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;builder-nodejs12&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;builder-nodejs14&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;builder-maven-java11&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;builder-php5x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;builder-php7x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;builder-python37&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;builder-dotnet&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;2.1.155-778-patch3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Have we missed anything? Please contribute to this blog or feedback on the slack channel.&lt;/p&gt;
&lt;h3 id=&#34;v3-users&#34;&gt;v3 users&lt;/h3&gt;
&lt;p&gt;There is not expected to be significant disruption to v3 users but if there is anything needed beyond the steps below then we are asking users to reach out asap and we can update this blog.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;jx gitops upgrade&lt;/code&gt; to ensure you upgrade to the latest version stream with the old helm repository removed. If you are tracking the LTS version stream please delay until Wednesday 1st September to run this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your cluster git repository, run a search for references of &lt;code&gt;https://storage.googleapis.com/jenkinsxio/charts&lt;/code&gt; replace with &lt;code&gt;https://jenkins-x-charts.github.io/repo&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your cluster git repository, run a search for references of &lt;code&gt;http://chartmuseum.jenkins-x.io&lt;/code&gt; and &lt;code&gt;https://storage.googleapis.com/chartmuseum.jenkins-x.io&lt;/code&gt; replace with &lt;code&gt;https://jenkins-x-charts.github.io/v2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Switch &lt;code&gt;jx-verify&lt;/code&gt; helm chart repository for any application you have which is built by Jenkins X 3.  This is under your applications git repository &lt;code&gt;./charts/preview/helmfile.yaml&lt;/code&gt; change &lt;code&gt;https://storage.googleapis.com/jenkinsxio/charts&lt;/code&gt; to &lt;code&gt;https://jenkins-x-charts.github.io/repo&lt;/code&gt; .  &lt;a href=&#34;https://github.com/jenkins-x/jx3-pipeline-catalog/commit/ed01d636b94b2ea51b878d9b5331bc4c88f6e8b1&#34;&gt;Here&lt;/a&gt; is an example that changes the main pipeline catalog packs which are used when first creating or importing applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Switch any &lt;code&gt;gcr.io/jenkinsxio&lt;/code&gt; images to &lt;code&gt;ghcr.io/jenkins-x&lt;/code&gt; in your application git repo &lt;code&gt;.lighthouse/*.yaml&lt;/code&gt; files if you have references there&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Have we missed anything?  Please contribute to this blog or feedback on the slack channel.&lt;/p&gt;
&lt;h2 id=&#34;when-will-all-this-take-place&#34;&gt;When will all this take place?&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;This blog is the initial notice which we will socialise, please help to raise awareness.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Friday 27th August - the labs project will be scheduled to shutdown, short notice because we believe no services should be used, if they are it is an easy switch to upgrade to GA versions.  Labs efforts are never intended to be production grade and are used at risk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Monday 6th September - make the GCP container registry and helm repository bucket private, during which time any image versions that have not been transferred to GitHub can be requested via the community slack channel.  All helm versions have been moved to &lt;a href=&#34;https://jenkins-x-charts.github.io/v2&#34;&gt;https://jenkins-x-charts.github.io/v2&lt;/a&gt; as described above.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Monday 13th September - schedule for shutdown the two GCP projects hosting the container registry and helm repository.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;why-are-only-the-most-recent-versions-v2-images-copied-to-github-packages-and-not-all-versions&#34;&gt;Why are only the most recent versions v2 images copied to GitHub packages and not all versions?&lt;/h2&gt;
&lt;p&gt;There are 14 Terabytes of data that make up the jenkinsxio container registry on GCP, it would be costly and wasteful to transfer all this to GitHub so we picked the last known version of each image that was released last year.  If there are specific images that you wish to use either pull / push them yourself to a container registry of your own or reach out and on a case by case effort, we can look to move them to GitHub while the read permissions are made private and before the project is shut down.&lt;/p&gt;
&lt;h2 id=&#34;im-on-v2-and-use-a-builder-image-which-is-not-available-on-github-container-registry-how-do-i-build-my-own-version-to-work-with-the-new-helm-and-image-repositories&#34;&gt;I&amp;rsquo;m on v2 and use a builder image which is not available on GitHub container registry, how do I build my own version to work with the new helm and image repositories?&lt;/h2&gt;
&lt;p&gt;The old v2 jx code &lt;a href=&#34;https://github.com/jenkins-x/jx/tree/v2&#34;&gt;lives on a branch&lt;/a&gt; you will need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fork this branch&lt;/li&gt;
&lt;li&gt;apply search and replace changes for
i) gcr.io/jenkinsxio to ghcr.io/jenkins-x &lt;a href=&#34;https://github.com/jenkins-x/jx/commit/9d5f1aa6421a22e311d12482893586a45b485ac8&#34;&gt;example&lt;/a&gt;
ii) &lt;a href=&#34;https://storage.googleapis.com/chartmuseum.jenkins-x.io&#34;&gt;https://storage.googleapis.com/chartmuseum.jenkins-x.io&lt;/a&gt; to &lt;a href=&#34;https://jenkins-x-charts.github.io/v2&#34;&gt;https://jenkins-x-charts.github.io/v2&lt;/a&gt; &lt;a href=&#34;https://github.com/jenkins-x/jx/commit/88965b1696c81349f4e330aeb98ec5e26116341c&#34;&gt;example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;run &lt;code&gt;make linux&lt;/code&gt; to build the updated jx binary&lt;/li&gt;
&lt;li&gt;build and push the images you require, for example&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker build -f Dockerfile.builder-maven -t ghcr.io/jenkins-x/builder-maven:2.1.149-768-patch3 .
docker push ghcr.io/jenkins-x/builder-maven:2.1.149-768-patch3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;once the builder-jx/go/maven/etc.. are pushed, you will need to configure the charts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if a chart allows the image to be overridden using a value you can add that to your env/values.tmpl.yaml, replacing current gcr.io/jenkinsxio images with ghcr.io/jenkins-x
e.g.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jenkins-x-platform:
  gcpreviews:
    image:
      repository: ghcr.io/jenkins-x/builder-jx
      tag: [your custom tag]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;if you cannot override the image using a helm value you may need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;download each needed chart/subchart needed to make jx work, exemple for jenkins-x-platform/, jxboot-resources/releases&lt;/li&gt;
&lt;li&gt;for each charts/subcharts replace current gcr.io/jenkinsxio images with ghcr.io/jenkins-x if it exists or rebuild and host them on a private registry if not&lt;/li&gt;
&lt;li&gt;host updated charts on a private chartmuseum&lt;/li&gt;
&lt;li&gt;switch boot git repo to use custom charts&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;im-getting-a-missing-arg---provider-values-dir-and-helm-repository-httpsjenkins-x-chartsgithubiov2-does-not-have-an-associated-prefix-in-in-the-chartsrepositoriesyml-error&#34;&gt;I&amp;rsquo;m getting a missing arg &lt;code&gt;--provider-values-dir&lt;/code&gt; and helm repository &lt;a href=&#34;https://jenkins-x-charts.github.io/v2&#34;&gt;https://jenkins-x-charts.github.io/v2&lt;/a&gt; does not have an associated prefix in in the &amp;lsquo;charts/repositories.yml&amp;rsquo; error&lt;/h2&gt;
&lt;p&gt;A few users have been hitting this error, it is related to the jx version used.  This thread with the help of Francesco Capozzo contains both image tags and versions to use instead:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.slack.com/archives/C9MBGQJRH/p1631112970450800&#34;&gt;https://kubernetes.slack.com/archives/C9MBGQJRH/p1631112970450800&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Images:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ghcr.io/jenkins-x/builder-jx:2.1.142-761-patch3
ghcr.io/jenkins-x/builder-maven:2.1.142-761-patch3
ghcr.io/jenkins-x/builder-go:2.1.142-761-patch3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Chart versions to use rather than relying on the version stream:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dependencies:
* name: jxboot-resources
  repository: https://jenkins-x-charts.github.io/v2
  version: 0.0.43
* alias: tekton
  name: tekton
  repository: https://jenkins-x-charts.github.io/v2
  version: 0.0.63
* alias: prow
  condition: prow.enabled
  name: prow
  repository: https://jenkins-x-charts.github.io/v2
  version: 0.0.1773
* alias: lighthouse
  condition: lighthouse.enabled
  name: lighthouse
  repository: https://jenkins-x-charts.github.io/v2
  version: 0.0.843
* alias: lighthouse-jx
  condition: lighthouse.enabled
  name: lighthouse-jx
  repository: https://jenkins-x-charts.github.io/v2
  version: 0.0.121
* alias: bucketrepo
  condition: bucketrepo.enabled
  name: bucketrepo
  repository: https://jenkins-x-charts.github.io/v2
  version: 0.1.42
* name: jenkins-x-platform
  repository: https://jenkins-x-charts.github.io/v2
  version: 2.0.2411
* name: jx-pipelines-visualizer
  repository: https://jenkins-x-charts.github.io/repo
  version: 1.7.3
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: How to debug your Tekton pipelines</title>
      <link>https://jenkins-x.io/blog/2021/08/18/debug-tekton/</link>
      <pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/08/18/debug-tekton/</guid>
      <description>
        
        
        &lt;p&gt;Tekton recently introduced a &lt;a href=&#34;https://github.com/tektoncd/pipeline/blob/main/docs/debug.md#debug&#34;&gt;debug feature&lt;/a&gt; when you create &lt;code&gt;TaskRun&lt;/code&gt; resources so that steps can be paused at a breakpoint until told to move forwards so that you can diagnose why pipeline steps fail.&lt;/p&gt;
&lt;p&gt;The latest Tekton release only supports breakpoints on &lt;code&gt;TaskRun&lt;/code&gt; resources but there is a &lt;a href=&#34;https://github.com/tektoncd/pipeline/pull/4145&#34;&gt;Pull Request #4145&lt;/a&gt; to add support also to debugging &lt;code&gt;PipelineRun&lt;/code&gt; resources as well. If you are reading this please add your thumbs up emoji feedback to the &lt;a href=&#34;https://github.com/tektoncd/pipeline/pull/4145&#34;&gt;PR #4145&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve switched Jenkins X to use a preview image of Tekton with &lt;a href=&#34;https://github.com/tektoncd/pipeline/pull/4145&#34;&gt;PR #4145&lt;/a&gt; included so that Jenkins X developers can easily debug their pipelines (which typically are &lt;code&gt;PipelineRun&lt;/code&gt; resources).&lt;/p&gt;
&lt;h2 id=&#34;how-to-debug-tekton-pipelines&#34;&gt;How to debug Tekton Pipelines&lt;/h2&gt;
&lt;p&gt;Here is a demo which shows how to debug pipelines:&lt;/p&gt;
&lt;iframe width=&#34;850&#34; height=&#34;500&#34; src=&#34;https://www.youtube.com/embed/QqTaclB6-oI&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;Make sure &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/cluster/&#34;&gt;your cluster is upgraded to the latest version stream&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you intend to use the &lt;code&gt;jx&lt;/code&gt; in the below examples make sure you &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/cli/&#34;&gt;upgrade the CLI too&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;enable-a-breakpoint&#34;&gt;Enable a breakpoint&lt;/h3&gt;
&lt;p&gt;To enable a breakpoint you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/lens/&#34;&gt;Lens UI&lt;/a&gt; as shown in the above video by:
&lt;ul&gt;
&lt;li&gt;right click on a &lt;code&gt;Pipeline&lt;/code&gt; action menu&lt;/li&gt;
&lt;li&gt;select &lt;code&gt;Breakpoint -&amp;gt; Add&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;you can use the &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/jx/pipeline/debug/&#34;&gt;jx pipeline debug&lt;/a&gt; command then select the pipeline to add/remove a breakpoint.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;viewing-breakpoints&#34;&gt;Viewing breakpoints&lt;/h3&gt;
&lt;p&gt;You can view breakpoints in the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/lens/&#34;&gt;Lens UI&lt;/a&gt; in the &lt;code&gt;Breakpoints&lt;/code&gt; tab or via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get lighthousebreakpoints

&lt;span style=&#34;color:#75715e&#34;&gt;# you can use the short name:&lt;/span&gt;
kubectl get lhbp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;using-a-breakpoint&#34;&gt;Using a breakpoint&lt;/h3&gt;
&lt;p&gt;Once you have set a breakpoint defined for a particular Pipeline you need to trigger the pipeline. e.g. perform a git commit on the git branch to trigger a new pipeline to execute.&lt;/p&gt;
&lt;p&gt;The pipeline will execute as normal; you&amp;rsquo;ll be able to view it execute via:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/lens/&#34;&gt;Lens UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;run &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/jx/pipeline/grid/&#34;&gt;jx pipeline grid&lt;/a&gt; to watch pipelines run and select the one you wish to view the log&lt;/li&gt;
&lt;li&gt;run &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/jx/pipeline/log/&#34;&gt;jx pipeline log&lt;/a&gt; to watch the log of a specific pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;opening-a-shell&#34;&gt;Opening a shell&lt;/h3&gt;
&lt;p&gt;Once your breakpoint is reached the pipeline pod will pause, waiting to continue.&lt;/p&gt;
&lt;p&gt;At this point you can then open a shell inside the container.&lt;/p&gt;
&lt;p&gt;The easiest way to do this is via the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/lens/&#34;&gt;Lens UI&lt;/a&gt;, click on the Pipeline action menu then &lt;code&gt;Shell&lt;/code&gt; -&amp;gt; &lt;code&gt;latest step&lt;/code&gt; and a shell will open.&lt;/p&gt;
&lt;p&gt;Otherwise you can use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl exec -it -c $name-of-container $name-of-pod &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sh | bash | ash&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;continuing-after-the-breakpoint&#34;&gt;Continuing after the breakpoint&lt;/h3&gt;
&lt;p&gt;If you wish to continue the execution of a pipeline there are &lt;a href=&#34;https://github.com/tektoncd/pipeline/blob/main/docs/debug.md#debug-scripts&#34;&gt;multiple scripts you can run inside the shell&lt;/a&gt; you can run inside the shell in the pipeline to tell the pipeline to continue:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Script&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/tekton/debug/scripts/debug-continue&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Mark the step as completed with success by writing to &lt;code&gt;/tekton/tools&lt;/code&gt; so that the pipeline continues executing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/tekton/debug/scripts/debug-fail-continue&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Mark the step as completed with failure by writing to &lt;code&gt;/tekton/tools&lt;/code&gt; which can lead to the pipeline terminating&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;removing-breakpoints&#34;&gt;Removing breakpoints&lt;/h3&gt;
&lt;p&gt;There are a few ways to delete breakpoints.&lt;/p&gt;
&lt;p&gt;You can run &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/jx/pipeline/debug/&#34;&gt;jx pipeline debug&lt;/a&gt; and toggle off any existing breakpoints.&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;Breakpoints&lt;/code&gt; tab in &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/lens/&#34;&gt;Lens UI&lt;/a&gt; then click the breakpoints action menu then &lt;code&gt;Remove&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Or find the one you want via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get lhbp
kubectl delete lhbp whatever-the-name-is
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;So there you have it; nice and easy debugging of pipelines so you can diagnose why pipelines fail and try incrementally fix things up from inside the pipeline pods! Pretty cool eh!&lt;/p&gt;
&lt;p&gt;Let us know via &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;slack&lt;/a&gt; or the &lt;a href=&#34;https://github.com/jenkins-x/jx/issues&#34;&gt;issue tracker&lt;/a&gt; if you can think of any ways we can make this even easier to use! Also check out the &lt;a href=&#34;https://github.com/tektoncd/community/blob/main/teps/0042-taskrun-breakpoint-on-failure.md&#34;&gt;Tekton enhancement proposal 42&lt;/a&gt; that covers this capability in the underlying tekton controller and pods.&lt;/p&gt;
&lt;p&gt;Finally please add your thumbs up emoji to the &lt;a href=&#34;https://github.com/tektoncd/pipeline/pull/4145&#34;&gt;tekton PR #4145&lt;/a&gt; :)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: How to use GitOps and Kubernetes External Secrets for better audit and security</title>
      <link>https://jenkins-x.io/blog/2021/08/17/gitops-secrets/</link>
      <pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/08/17/gitops-secrets/</guid>
      <description>
        
        
        &lt;p&gt;So &lt;strong&gt;GitOps&lt;/strong&gt; is a cool approach to managing kubernetes resources in a cluster, by checking in the source code for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the kubernetes YAMLs&lt;/li&gt;
&lt;li&gt;details of the helm charts you want to install along with any configuration&lt;/li&gt;
&lt;li&gt;kustomize scripts.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then everything is versioned and audited; you know who changed what, when and why. If a change breaks things, just revert via git like any other source code change.&lt;/p&gt;
&lt;p&gt;You can then add pipelines to &lt;a href=&#34;https://github.com/jenkins-x-plugins/jx-kube-test#readme&#34;&gt;verify&lt;/a&gt; changes in the Pull Requests result in valid kubernetes YAML etc.&lt;/p&gt;
&lt;p&gt;Then if you merge changes to git then an operator detect the change and do the &lt;code&gt;kubectl apply&lt;/code&gt; (or &lt;code&gt;helm install&lt;/code&gt; or whatever).&lt;/p&gt;
&lt;p&gt;There are a number of tools out there for doing this. e.g. &lt;a href=&#34;https://cloud.google.com/anthos/config-management&#34;&gt;Anthos Config Management&lt;/a&gt;, &lt;a href=&#34;https://argoproj.github.io/argo-cd/&#34;&gt;argo cd&lt;/a&gt;, &lt;a href=&#34;https://rancher.com/docs/rancher/v2.x/en/deploy-across-clusters/fleet/&#34;&gt;fleet&lt;/a&gt;, &lt;a href=&#34;https://fluxcd.io/&#34;&gt;flux cd&lt;/a&gt; and &lt;a href=&#34;https://github.com/vmware-tanzu/carvel-kapp-controller&#34;&gt;kapp controller&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So why did Jenkins X not use these tools and instead created its own &lt;a href=&#34;https://github.com/jenkins-x/jx-git-operator&#34;&gt;git operator&lt;/a&gt;?&lt;/p&gt;
&lt;h2 id=&#34;standardising-gitops-layouts&#34;&gt;Standardising GitOps layouts&lt;/h2&gt;
&lt;p&gt;Over time it would be great to have more standardisation of the Git layout given the different tool.&lt;/p&gt;
&lt;p&gt;Our current recommended layout that works with many GitOps tools is &lt;a href=&#34;https://github.com/jenkins-x-plugins/jx-gitops/blob/main/docs/git_layout.md&#34;&gt;described here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;why-jenkins-x-uses-helmfile-template&#34;&gt;Why Jenkins X uses helmfile template&lt;/h2&gt;
&lt;p&gt;A number of solutions in the GitOps space define which helm charts to install in git with configuration files; or specify which kustomize templates to apply etc.&lt;/p&gt;
&lt;p&gt;However Jenkins X defaults to using &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt; to manage installing, upgrading and configuring multiple helm charts. Then we use &lt;strong&gt;&lt;code&gt;helmfile template&lt;/code&gt;&lt;/strong&gt; to render the helm charts as kubernetes resources.&lt;/p&gt;
&lt;p&gt;We do this for a very good reason; so that we can easily &lt;a href=&#34;https://jenkins-x.io/v3/develop/faq/general/#why-does-jenkins-x-use-helmfile-template&#34;&gt;version all kubernetes resources in git including those that come from a helm chart&lt;/a&gt; - which means you can easily view the entire history of changes of any kubernetes resources - whether they come from inside a helm chart, some configuration values of a chart or kustomize scripts etc.&lt;/p&gt;
&lt;p&gt;This avoids you having to mentally understand how helm charts will change over time with the helm chart version and/or helm configuration; or the effect of kustommize scripts. You can just view the history of any kubernetes resource.&lt;/p&gt;
&lt;p&gt;We use conventions to ensure that each kubernetes resource has a canonical file name in git to make this whole process much simpler.&lt;/p&gt;
&lt;p&gt;e.g. this is the git history of the &lt;a href=&#34;https://github.com/jenkins-x/jx3-eagle/commits/master/config-root/namespaces/cert-manager/cert-manager/cert-manager-cainjector-deploy.yaml&#34;&gt;cert manager deployment resource in our production cluster&lt;/a&gt; so you can see what changed when over time.&lt;/p&gt;
&lt;p&gt;The exception to this rule is kubernetes &lt;code&gt;Secrets&lt;/code&gt; which are stored instead as &lt;code&gt;ExternalSecrets&lt;/code&gt; but which have their own history (e.g. in case you change the location of where the secrets are stored or modify the metadata, annotations or labels etc).&lt;/p&gt;
&lt;h2 id=&#34;why-we-use-kubernetes-external-secrets&#34;&gt;Why we use Kubernetes External Secrets&lt;/h2&gt;
&lt;p&gt;Jenkins X 3.x uses &lt;a href=&#34;https://github.com/external-secrets/kubernetes-external-secrets&#34;&gt;Kubernetes External Secrets&lt;/a&gt; to manage populating secrets from your underlying secret store such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Alibaba Cloud KMS Secret Manager&lt;/li&gt;
&lt;li&gt;Amazon Secret Manager&lt;/li&gt;
&lt;li&gt;Azure Key Vault&lt;/li&gt;
&lt;li&gt;Hashicorp Vault&lt;/li&gt;
&lt;li&gt;GCP Secret Manager&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;mermaid&#34;&gt;
    
graph TB
    subgraph A[Kubernetes Cluster]
        sqB[External Secrets Controller]
        subgraph C[secrets-infra ns]
            sqCV[Cloud Secret Manager]
        end
        subgraph D[Kube api server]
        end
        D -- Get ExternalSecrets --&gt; sqB
        sqB --&gt; D
        sqB -- Fetch secrets properties --&gt; sqCV
        sqCV --&gt; sqB
        subgraph E[app ns]
            sqEP[pods]
            sqES[secrets]
        end
        sqB -- Upsert Secrets --&gt; sqES
    end

&lt;/div&gt;
&lt;p&gt;You can then keep all your secrets inside your cloud native secret store which also allows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;easy to automatically rotate any secret  at any time independently of git&lt;/li&gt;
&lt;li&gt;use fine grained RBAC on each secret&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-to-use-this-approach-to-gitops-and-secrets-if-not-using-jenkins-x&#34;&gt;How to use this approach to GitOps and Secrets if not using Jenkins X&lt;/h2&gt;
&lt;p&gt;If you use &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;Jenkins X&lt;/a&gt; then you get all of the above benefits. But what if you want to use some other kind of GitOps operator toolchain?&lt;/p&gt;
&lt;p&gt;One option is to use the &lt;a href=&#34;https://github.com/jenkins-x-plugins/jx-secret-postrenderer#jx-secret-postrenderer&#34;&gt;jx-secret-postrenderer&lt;/a&gt; yourself if you use helm or &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt; to then render the helm charts as raw YAML you can check into your git repository and implementing the conversion from &lt;code&gt;Secret&lt;/code&gt; to &lt;code&gt;ExternalSecret&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Another option is to reuse the Jenkins X &lt;code&gt;Makefile&lt;/code&gt; and pipeline to setup the &lt;code&gt;config-root&lt;/code&gt; &lt;a href=&#34;https://github.com/jenkins-x-plugins/jx-gitops/blob/main/docs/git_layout.md&#34;&gt;git layout&lt;/a&gt; after converting Secrets to ExternalSecretes and pre-populating any missing secret store values.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;If you are looking at adopting GitOps then we highly recommend you &lt;a href=&#34;https://jenkins-x.io/v3/develop/faq/general/#why-does-jenkins-x-use-helmfile-template&#34;&gt;check into git all of your kubernetes resources including those that come from a helm charts or kustomize scripts&lt;/a&gt; (apart from &lt;code&gt;Secrets&lt;/code&gt;!) as it massively simplifies understanding how kubernetes resources change over time using just pure git.&lt;/p&gt;
&lt;p&gt;If you are using GitOps you may want to look into using &lt;a href=&#34;https://github.com/external-secrets/kubernetes-external-secrets&#34;&gt;Kubernetes External Secrets&lt;/a&gt; to simplify integrating secrets for cloud native secret stores into your kubernetes cluster to provide finer grained RBAC and easier secret rotation.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X 3 and Argo CD</title>
      <link>https://jenkins-x.io/blog/2021/06/28/argo/</link>
      <pubDate>Mon, 28 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/06/28/argo/</guid>
      <description>
        
        
        &lt;p&gt;There have been a number of requests from the Jenkins X community to use &lt;a href=&#34;https://argoproj.github.io/argo-cd/&#34;&gt;Argo CD&lt;/a&gt; for the last mile deployment phase of their continuous delivery pipelines.  This blog explains some of the advantages of using Jenkins X and Argo CD all together.&lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s included?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jenkins X for Cloud Infrastructure using Terraform, core installation management with GitOps, external secret management, ingress controller, quickstarts, automated CI + CD pipelines, ChatOps&lt;/li&gt;
&lt;li&gt;Tekton for pipeline orchestration&lt;/li&gt;
&lt;li&gt;Argo CD for end users application deployments (not the main installation)
Argo CD provides a declarative GitOps approach to deploying Kubernetes based applications.  There is a GUI which helps construct the deployment definition (in the form of an &lt;code&gt;Application&lt;/code&gt; custom resource) which offers a number of configuration options, as well and providing insight into your clusters applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&#34;https://jenkins-x.io/images/v3/argocd.png&#34;/&gt;
&lt;hr&gt;
&lt;p&gt;You might be wondering why you would want to use BOTH Jenkins X and Argo CD together.
Jenkins X aims to embrace OSS, where possible providing a nice UX to integrate with other projects and help provide better solutions for building, developing and running software on Kubernetes.  Jenkins X indeed does have a git operator that applies Kubernetes YAML from a Git repository but there are some differences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jenkins X uses GitOps principles for the entire installation, i.e. the starting point is a Git repository which is used to provision a cluster and manage (automatic if users wish) upgrades whereas today Argo CD uses a manual &lt;code&gt;kubectl apply&lt;/code&gt; to manage the Argo installation itself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;External Secrets integration for Vault, Google Secrets manager etc is something that Jenkins X provides out of the box.  When Kubernetes based applications require a secret we prefer the source is stored in a secrets manager and the value synchronised automatically into the cluster enabling easier secret rotation, avoiding local secrets on machines and an easier UX for working with secrets.  When adding an Application via Argo CD users can leverage the Jenkins X approach to working with secrets and rely on Argo to manage the deployments.  If users prefer to work with SOPS that is totally fine too and will work in the same way as they are used to.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you do not wish to expose direct access for the Kubernetes cluster to developers then using a combination of Jenkins X UI for accessing logs and Argo CD for managing application deployments may be enough.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using the Jenkins X approach to promoting via automated pull requests via pipelines to add new helm charts and update chart release version numbers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In a Jenkins X &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/multi-cluster/multi-cluster/&#34;&gt;multi cluster&lt;/a&gt; setup you can choose to use jx-git-operator or Argo CD in the remote cluster to syncronise promoted applications into the staging or production clusters.  This way you get all the benefits of the integrated Jenkins X experience to manage the build infrastructure and provide the developer experience like preview environments and chatops etc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is done by creating a new Git repository that will contain a number of Argo CD &lt;code&gt;Application&lt;/code&gt; Kubernetes resources.  This also means we handle disaster recovery scenarios and are able to recover the Jenkins X installation which includes Argo CD plus any applications managed by Argo CD itself.&lt;/p&gt;
&lt;p&gt;There may be a couple of models to try but here we are going to describe an approach we have validated when using Jenkins X to manage the core Kubernetes installation, using Tekton for Continuous Integration, Jenkins X for application promotion and Argo CD for deployments.&lt;/p&gt;
&lt;h2 id=&#34;install-argo-cd-with-jenkins-x&#34;&gt;Install Argo CD with Jenkins X&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Prerequisite is a working Jenkins X 3 installation&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Add a Argo CD helmefile to your Jenkins X cluster git repository:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir -p helmfiles/argocd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create a new file&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./helmfiles/argocd/helmfile.yaml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;argocd&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;argocd/argo-cd&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;argocd&lt;/span&gt;
- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;../../charts/argo-applications&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;argo-applications&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Edit the root &lt;code&gt;./helmfile.yaml&lt;/code&gt; and add a new path reference to the helmfile above&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;helmfiles/argocd/helmfile.yaml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Jenkins X will resolve default helm values from the Jenkins X version stream.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Create a new git repository to contain the Argo CD &lt;code&gt;Application&lt;/code&gt; Kubernetes resources, this means we can use Jenkins X pipelines to promote users applications via GitOps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Back in your clusters Git repository create a new folder:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir -p charts/argo-applications
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;create a file in the new folder and replace the &lt;code&gt;repoURL:&lt;/code&gt; with the Git URL from step 2 above.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;charts/argo-applications/applications.yaml&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;argoproj.io/v1alpha1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Application&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;staging&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;argocd&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;finalizers&lt;/span&gt;:
- &lt;span style=&#34;color:#ae81ff&#34;&gt;resources-finalizer.argocd.argoproj.io&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;destination&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;namespace&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;argocd&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;server&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://kubernetes.default.svc&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;source&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;.&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;repoURL&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://github.com/$REPLACE_WITH_GIT_OWNER/  $REPLACE_WITH_GIT_REPO&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;targetRevision&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;HEAD&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;directory&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;recurse&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;project&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;default&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;syncPolicy&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;automated&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;prune&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;selfHeal&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;syncOptions&lt;/span&gt;:
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;Replace=true&lt;/span&gt;
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;CreateNamespace=true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;commit your changes and push&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git add helmfiles/argocd/helmfile.yaml
git add charts/argo/applications.yaml
git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;feat: enable Argo CD&amp;#39;&lt;/span&gt;
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are on a fork then PR your changes&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Follow Jenkins X admin logs to ensure Argo CD is installed&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx admin logs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Get the Argo CD UI password using something like &lt;a href=&#34;https://github.com/mfuentesg/ksd&#34;&gt;ksd&lt;/a&gt; or &lt;code&gt;base64 -D&lt;/code&gt; to decode the value:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get secret argocd-initial-admin-secret -n argocd -oyaml | ksd

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Get the Argo CD UI hostname and login using the &lt;code&gt;admin&lt;/code&gt; username + passowrd from step 6 above (you may need to accept insecure TLS browser prompt if not using production TLS)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get ing argocd-server -n argocd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Create a new quickstart or update an existing Jenkins X applications &lt;code&gt;./lighthouse/jenkins-x/release.yaml&lt;/code&gt; pipeline, replaceing the Tekton &lt;code&gt;promote-jx-promote&lt;/code&gt; step to use argo instead:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uses:jenkins-x/jx3-pipeline-catalog/tasks/updatebot/release.yaml@versionStream&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;promote-release&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    #!/usr/bin/env sh
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    source .jx/variables.sh
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    jx updatebot argo promote --target-git-url https://github.com/$REPLACE_WITH_GIT_OWNER/$REPLACE_WITH_GIT_REPO&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now merge a change to your application or manually trigger a release pipeline &lt;code&gt;jx pipeline start&lt;/code&gt; to get a new release and promote using Argo CD.
Once the release pipeline finished for your application you should see a new &lt;code&gt;application.yaml&lt;/code&gt; resource in your uber application Git repository we created in step 2 above.
Once this change is merged to the main branch Argo detects the new chart / version and applies it to the cluster.  You will be able to track the status and health of the deployment via the GUI that you logged in with step 7 above.&lt;/p&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;I really did like the experience of Argo CD, there&amp;rsquo;s some overlaps with Jenkins X across the wider projects however I think there&amp;rsquo;s enough of a differentiation for both to complement each other.  What I loved was that both projects as well as others like &lt;a href=&#34;https://www.weave.works/oss/flux/&#34;&gt;flux&lt;/a&gt; promote the use of GitOps.  Anyways, congratulations to the Argo project and I hope users from both communities find this blog useful and / or interesting.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Continuous microservices with databases in Jenkins X</title>
      <link>https://jenkins-x.io/blog/2021/06/25/jx-cd-databases-2021/</link>
      <pubDate>Fri, 25 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/06/25/jx-cd-databases-2021/</guid>
      <description>
        
        
        &lt;p&gt;A common question we get asked on the &lt;a href=&#34;https://jenkins-x.io/&#34;&gt;Jenkins X project&lt;/a&gt; is how to get started creating microservices that use databases with &lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/&#34;&gt;automated CI/CD&lt;/a&gt; with &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/promotion/&#34;&gt;GitOps Promotion&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/preview/&#34;&gt;Preview Environments&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To make things a little easier to get started we&amp;rsquo;ve created a new &lt;a href=&#34;https://github.com/jenkins-x-quickstarts/node-postgresql&#34;&gt;node-postgresql&lt;/a&gt; quickstart.&lt;/p&gt;
&lt;h2 id=&#34;before-you-start&#34;&gt;Before you start&lt;/h2&gt;
&lt;p&gt;If you are using the cloud then we prefer &lt;a href=&#34;https://jenkins-x.io/v3/devops/patterns/prefer_cloud_over_kube/&#34;&gt;cloud over kubernetes&lt;/a&gt; for things like databases, storage, ingress and secret managers so please try use your clouds managed databases if you can.&lt;/p&gt;
&lt;p&gt;So ideally you&amp;rsquo;d set up your database via your infrastructure as code solution, such as &lt;a href=&#34;https://www.terraform.io/&#34;&gt;terraform&lt;/a&gt;, and then associate your &lt;a href=&#34;https://jenkins-x.io/v3/devops/patterns/map-sa-to-cloud-iam/&#34;&gt;kubernetes Service Account to a cloud IAM role&lt;/a&gt; to access the database.&lt;/p&gt;
&lt;p&gt;However to provide something simple that just works in any kubernetes cluster this quickstart uses the &lt;a href=&#34;https://github.com/zalando/postgres-operator&#34;&gt;postgres-operator&lt;/a&gt; to manage setting up each database cluster in each environment. So to be able to use this quickstart you will need to install this operator into your cluster.&lt;/p&gt;
&lt;p&gt;You can &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#using-the-cli&#34;&gt;add charts to your cluster via the CLI&lt;/a&gt;. From inside a git clone of your cluster git repository run the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx gitops helmfile add --chart commonground/postgres-operator --repository https://charts.commonground.nl/ --namespace postgres --version 1.6.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will modify the &lt;code&gt;helmfile.yaml&lt;/code&gt; to point at a new &lt;code&gt;helmfiles/postgres/helmfile.yaml&lt;/code&gt; file to deploy the &lt;a href=&#34;https://github.com/zalando/postgres-operator&#34;&gt;postgres-operator&lt;/a&gt; chart.&lt;/p&gt;
&lt;p&gt;Then git commit and push that change to your cluster. You can watch it run via &lt;code&gt;jx admin log -w&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-the-quickstart&#34;&gt;Create the quickstart&lt;/h2&gt;
&lt;p&gt;Make sure you have an &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/cluster/&#34;&gt;up to date cluster&lt;/a&gt; as this particular quickstart is new and only shows up in recent clusters.&lt;/p&gt;
&lt;p&gt;Now &lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/#create-a-new-project-from-a-quickstart&#34;&gt;create the quickstart&lt;/a&gt; in the usual way&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx project quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you know you want to create the &lt;a href=&#34;https://github.com/jenkins-x-quickstarts/node-postgresql&#34;&gt;node-postgresql&lt;/a&gt; quickstart you can do this to pre-filter the list for you:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx project quickstart -f postgres
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you have finished the import process will &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#importing--creating-quickstarts&#34;&gt;set up the webhooks and enable CI/CD&lt;/a&gt; and the application will be released and promoted to the staging environment.&lt;/p&gt;
&lt;p&gt;If you want to know more about what happens as you create quickstarts or import projects &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#importing--creating-quickstarts&#34;&gt;see how it works&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can watch via the various pipelines run in the various &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/&#34;&gt;UI options&lt;/a&gt; or via the CLI use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx pipeline grid 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When the release is done and the promotion has completed you should be able to try it out via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx application get 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should be able to click on the URL for the new quickstart and try it out once the database is initialised and the pods start up.&lt;/p&gt;
&lt;p&gt;It can take a few minutes first time you deploy the quickstart for the database cluster to be setup and initialised; so you can watch the pods run via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get pod -n jx-staging -w 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For a deeper look into whats going on try:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx ui
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which will open the &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/octant/&#34;&gt;Octant UI with the Jenkins X plugin&lt;/a&gt; which lets you navigate around namespaces and look at all of your kubernetes resources, deployments, pods and so forth in real time.&lt;/p&gt;
&lt;h2 id=&#34;how-does-it-work&#34;&gt;How does it work&lt;/h2&gt;
&lt;p&gt;In many ways this chart is fairly similar to other quickstarts in that it uses the Jenkins X pipeline catalog with tekton to add automated CI/CD pipelines and so forth.&lt;/p&gt;
&lt;p&gt;However to support the database there is a custom chart included inside this quickstart that does a few different things&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it creates a &lt;code&gt;Postgresql&lt;/code&gt; custom resource for the &lt;a href=&#34;https://github.com/zalando/postgres-operator&#34;&gt;postgres-operator&lt;/a&gt; which will instruct the &lt;a href=&#34;https://github.com/zalando/postgres-operator&#34;&gt;postgres-operator&lt;/a&gt; to spin up a database cluster and generate a &lt;code&gt;Secret&lt;/code&gt; to access the database. You can view this in your file at &lt;code&gt;charts/$myAppName/templates/&lt;/code&gt; or &lt;a href=&#34;https://github.com/jenkins-x-quickstarts/node-postgresql/blob/master/charts/templates/db-postgresql.yaml&#34;&gt;this file in the quickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;there is a &lt;code&gt;charts/$myAppName/init.sql&lt;/code&gt; file or &lt;a href=&#34;https://github.com/jenkins-x-quickstarts/node-postgresql/blob/master/charts/init.sql&#34;&gt;this file in the quickstart&lt;/a&gt; which is used to setup the database tables and populate any initial data. You can use this file to perform any startup schema migration or data population. For more realistic applications you could use a custom tool and image to implement schema migration in a more sophisticated way.&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;init.sql&lt;/code&gt; script is then installed as a &lt;code&gt;ConfigMap&lt;/code&gt; via the &lt;code&gt;charts/$myAppName/templates/initdb-cm.yaml&lt;/code&gt; file or &lt;a href=&#34;https://github.com/jenkins-x-quickstarts/node-postgresql/blob/master/charts/templates/initdb-cm.yaml&#34;&gt;this file in the quickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;charts/$myAppName/templates/deployment.yaml&lt;/code&gt; file or &lt;a href=&#34;https://github.com/jenkins-x-quickstarts/node-postgresql/blob/master/charts/templates/deployment.yaml#L41-L57&#34;&gt;this file in the quickstart&lt;/a&gt; defines:
&lt;ul&gt;
&lt;li&gt;an in &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/init-containers/&#34;&gt;init container&lt;/a&gt; which sets up the database before the application starts to run. The nice thing about using an init container for schema migration is that it runs before any new version of your application gets any network traffic so that you can keep iterating on your microservice and keep changing your database schema across all of your environments and things work well.
&lt;ul&gt;
&lt;li&gt;Though make sure your init container performs database locking correctly so that multiple init containers running concurrently don&amp;rsquo;t block each other unnecessarily. If this becomes an issue you could introduce something a little more complex. e.g. include a &lt;code&gt;Job&lt;/code&gt; with a unique name for each release in your chart to perform the migration so that only one migration Job runs at once and have your &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/init-containers/&#34;&gt;init container&lt;/a&gt; wait for your job to complete.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;the Deployment also uses &lt;a href=&#34;https://github.com/jenkins-x-quickstarts/node-postgresql/blob/master/charts/templates/deployment.yaml#L69-L73&#34;&gt;a secret created by the postgresql operator&lt;/a&gt; to be able to connect to the database&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;previews&#34;&gt;Previews&lt;/h3&gt;
&lt;p&gt;Databases often need a fair amount of maintenance, backup, upgrading and clean up over time. e.g. you may periodically update your Staging database with data from Production (maybe anonymised in some way?).&lt;/p&gt;
&lt;p&gt;So creating a whole new database from scratch for every &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/preview/&#34;&gt;Preview Environment&lt;/a&gt; to test every code change in your microservice is maybe overkill.&lt;/p&gt;
&lt;p&gt;By default the preview environment of this quickstart is configured to reuse the Staging environments database. This speeds up the preview startup time and reduces your cloud footprint and infrastructure cost.&lt;/p&gt;
&lt;p&gt;This is done via:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-quickstarts/node-postgresql/blob/master/preview/values.yaml.gotmpl#L1-L7&#34;&gt;configuring the preview environment&lt;/a&gt; to point at the database in the staging namespace and disabling the creation of the Posgresql custom resource to create a new database cluster in the preview environment&lt;/li&gt;
&lt;li&gt;using the &lt;a href=&#34;https://github.com/roboll/helmfile#hooks&#34;&gt;helmfile hooks mechanism&lt;/a&gt; in previews to &lt;a href=&#34;https://github.com/jenkins-x-quickstarts/node-postgresql/blob/master/preview/helmfile.yaml#L32-L44&#34;&gt;copy the required database secrets from the staging namespace&lt;/a&gt; so that the preview can connect to the staging database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-we-can-improve&#34;&gt;How we can improve&lt;/h2&gt;
&lt;p&gt;This quickstart is just a start but we can improve in a number of directions - fancy &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;helping out&lt;/a&gt;?&lt;/p&gt;
&lt;h3 id=&#34;more-languages-and-frameworks&#34;&gt;More languages and frameworks&lt;/h3&gt;
&lt;p&gt;It should be easy to replicate the same kind of quickstart mechanism for other languages and frameworks if anyone fancies trying it out? :) We &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;love contributions&lt;/a&gt;! Pop by and chat with us on &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;slack&lt;/a&gt; if you want to discuss it further.&lt;/p&gt;
&lt;h3 id=&#34;cloud-databases&#34;&gt;Cloud databases&lt;/h3&gt;
&lt;p&gt;Longer term it would be nice to support other kinds of database operators too.&lt;/p&gt;
&lt;p&gt;We prefer &lt;a href=&#34;https://jenkins-x.io/v3/devops/patterns/prefer_cloud_over_kube/&#34;&gt;cloud over kubernetes&lt;/a&gt; so if you are using a cloud it would be better to default to a cloud database instead of a kubernetes hosted one.&lt;/p&gt;
&lt;p&gt;There are a number of other ways to define cloud infrastructure via &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;Custom Resources&lt;/a&gt; such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://aws-controllers-k8s.github.io/community/&#34;&gt;AWS Controllers for Kubernetes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-service-operator&#34;&gt;Azure Service Operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://crossplane.io/&#34;&gt;Crossplane&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/config-connector/docs/overview&#34;&gt;Google Config Connector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So it&amp;rsquo;d be interesting to see if we can replicate this model for other kinds of cloud database on different cloud providers. Mostly it&amp;rsquo;d be a &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;Custom Resources&lt;/a&gt; to define the database instance and a way to inject the host and secret.  Some database providers require an additional sidecar proxy too.&lt;/p&gt;
&lt;p&gt;It would be easy to add optional configuration in the quickstart to support either the &lt;a href=&#34;https://github.com/zalando/postgres-operator&#34;&gt;postgres-operator&lt;/a&gt; or equivalents in &lt;a href=&#34;https://aws-controllers-k8s.github.io/community/&#34;&gt;AWS Controllers for Kubernetes&lt;/a&gt;, &lt;a href=&#34;https://github.com/Azure/azure-service-operator&#34;&gt;Azure Service Operator&lt;/a&gt;, &lt;a href=&#34;https://crossplane.io/&#34;&gt;Crossplane&lt;/a&gt; or &lt;a href=&#34;https://cloud.google.com/config-connector/docs/overview&#34;&gt;Google Config Connector&lt;/a&gt; via a simple flag in the &lt;code&gt;chart/$name/values.yaml&lt;/code&gt; file&lt;/p&gt;
&lt;h3 id=&#34;more-modularity-options&#34;&gt;More modularity options&lt;/h3&gt;
&lt;p&gt;In a pure microservice kind of world, each database would be owned by a single microservice; so embedding the database definition and schema migration into a single helm chart is the simplest thing that can work across multiple environments and with progressive delivery etc. It makes it easier to tie changes to the microservice and schema together into a single chart.&lt;/p&gt;
&lt;p&gt;However sometimes you want to have multiple services sharing a database. For that you could have 1 microservice be the owner of the database and other services reuse it. Or you could separate out the database definition + migration to a separate helm chart which is released independently.&lt;/p&gt;
&lt;p&gt;So it might make sense to make separate quickstart just to define the database definition and schema migration for these use cases: maybe via a &lt;code&gt;Job&lt;/code&gt; rather than an &lt;a href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/init-containers/&#34;&gt;init container&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;So there&amp;rsquo;s a really quick way to spin up a node based microservice using a database with an operator handling the setup of the database cluster which works well with &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/promotion/&#34;&gt;multiple environments&lt;/a&gt;, progressive delivery and &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/preview/&#34;&gt;Preview Environments&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Give it a try and &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;let us know how you get on or if you can think of any more ways we can improve&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X at cdCon</title>
      <link>https://jenkins-x.io/blog/2021/06/22/jx-cdcon-2021/</link>
      <pubDate>Tue, 22 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/06/22/jx-cdcon-2021/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/cdcon/&#34;&gt;cdCon 2021&lt;/a&gt; is about to start with lots of &lt;a href=&#34;https://events.linuxfoundation.org/cdcon/program/schedule/&#34;&gt;great sessions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here&#39; a list of the &lt;a href=&#34;https://jenkins-x.io/&#34;&gt;Jenkins X related&lt;/a&gt; sessions:&lt;/p&gt;
&lt;h2 id=&#34;tuesday-june-22-gitops-summit&#34;&gt;Tuesday, June 22 GitOps Summit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sched.co/il6v&#34;&gt;Best Practices for Secret Management with GitOps&lt;/a&gt; - &lt;a href=&#34;https://gitopssummit2021.sched.com/speaker/kdelamarck&#34;&gt;Kara de la Marck&lt;/a&gt;, CloudBees
&lt;ul&gt;
&lt;li&gt;GitOps uses Git as the “single source of truth” for declarative infrastructure and enables developers to manage infrastructure with the same Git-based workflows they use to manage a codebase. Having all configuration files version-controlled by Git has many advantages, but best practices for securely managing secrets with GitOps remain contested. Join us in this presentation about GitOps and Secret Management. Attendees will learn about different approaches to secret management with GitOps, the issues involved, and the secret management solutions offered by various tools and platforms. We will discuss the pros and cons of Vault, SOPS, offerings by public cloud providers, and more.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;wednesday-june-23&#34;&gt;Wednesday, June 23&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sched.co/ios6&#34;&gt;MLOps with Jenkins-X: Production-ready Machine Learning&lt;/a&gt; by &lt;a href=&#34;https://cdcon2021.sched.com/speaker/terry289&#34;&gt;Terry Cox&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Explore ways to treat Machine Learning assets as first class citizens within a DevOps process as Jenkins-X MLOps Lead, Terry Cox demonstrates how to automate your training and release pipeline in Cloud environments, using the library of ML template projects provided with Jenkins-X.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sched.co/iouo&#34;&gt;Enabling a DevOps Mindset at Scale in an Enterprise&lt;/a&gt; by Jimmy McNamara &amp;amp; Nick Penston, Fidelity Investments
&lt;ul&gt;
&lt;li&gt;Talk through the cultural enablers to create a strong DevOps culture within large organisations. Nick and Jimmy will talk through the cultural enablers to support large numbers of very talented and ambitious cloud engineers. Touching on strategies supporting strong communication and talent development for cloud engineers. Key themes: Talent Development Enabling DevOps culture Harnessing the voice of the developer/cloud engineer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sched.co/j06v&#34;&gt;BoF Session: Jenkins X - James Strachan &amp;amp; James Rawlings, Cloudbees&lt;/a&gt; by James Strachan &amp;amp; James Rawlings
&lt;ul&gt;
&lt;li&gt;This BoF will be an open discussion on anything related to Jenkins X, automating Continuous Delivery, Kubernetes, cloud and how to Accelerate delivering value to your customers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;thursday-june-24&#34;&gt;Thursday, June 24&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://sched.co/ios0&#34;&gt;How Jenkins X is Integrating Observability from the Inside, and the Benefits for its Users&lt;/a&gt; by &lt;a href=&#34;https://cdcon2021.sched.com/speaker/vincent.behar1&#34;&gt;Vincent Behar&lt;/a&gt;, Dailymotion&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In this session, we&amp;rsquo;ll focus on observability for Jenkins X: what observability means for a Continuous Delivery platform such as Jenkins X, and why it&amp;rsquo;s important.&lt;/li&gt;
&lt;li&gt;We&amp;rsquo;ll see how Jenkins X v3 is integrating observability from the inside, using standards such as OpenTelemetry, and packaging a full observability stack using Grafana - with Loki, Promtail, Tempo, and Prometheus.&lt;/li&gt;
&lt;li&gt;And we&amp;rsquo;ll highlight the benefits for the users:
&lt;ul&gt;
&lt;li&gt;platform observability with alerting for all the Kubernetes components (Lighthouse, Tekton, Cert-Manager, &amp;hellip;)&lt;/li&gt;
&lt;li&gt;out-of-the-box dashboards for Continuous Delivery Indicators (Mean Lead Time, Time To Review, Release, and Deployment Frequency, &amp;hellip;)&lt;/li&gt;
&lt;li&gt;distributed traces for your pipelines&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://sched.co/iotV&#34;&gt;What&amp;rsquo;s new with Jenkins X 3&lt;/a&gt; by James Rawlings &amp;amp; James Strachan, CloudBees&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This session will cover the architectural improvements and new features of Jenkins X v3.&lt;/li&gt;
&lt;li&gt;We&amp;rsquo;ll dive into the key areas that have undergone major development.&lt;/li&gt;
&lt;li&gt;GitOps: a better approach to installation and upgrades leveraging Helmfile, using an in-cluster operator to apply desired state stored in Git.&lt;/li&gt;
&lt;li&gt;Secrets: out of the box integration with external secret management solutions such as Google + Amazon cloud services Infrastructure: decoupled infrastructure management using Terraform UX: hosted dashboard to link your pull request logs along with a local Octant UI for deeper cluster visualisations&lt;/li&gt;
&lt;li&gt;Cloud Native Pipelines: now using vanilla Tekton pipelines with no abstraction layer.&lt;/li&gt;
&lt;li&gt;Along with Lighthouse to handle both in repo and shared pipeline definitions we now have a clean, extendable way to describe pipelines. Health: health checks and insight via Grafana&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://sched.co/iote&#34;&gt;Embrace ChatOps by Following the git-flow as Usual&lt;/a&gt; by &lt;a href=&#34;https://cdcon2021.sched.com/speaker/rick417&#34;&gt;Rick Zhao&lt;/a&gt;, Qingcloud&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Simplicity matters. It’s not desirable for us to invest in more systems or platforms. The best scenario is to keep our daily work unchanged. For example, software engineers usually spend a lot of time writing codes or documents and also have interactions with various pull requests. Lighthouse is similar to Prow, but it supports multiple git providers. We can speed up delivery no matter if you&amp;rsquo;re using GitHub, Gitlab, or Gitea.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Don&#39;t use docker, use kubernetes</title>
      <link>https://jenkins-x.io/blog/2021/05/17/dont-use-docker/</link>
      <pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/05/17/dont-use-docker/</guid>
      <description>
        
        
        &lt;p&gt;Are you developing software that&amp;rsquo;s intended to run on kubernetes? If so we recommend not to use docker on your laptop.&lt;/p&gt;
&lt;p&gt;Docker on Windows/MacOS helps you run a VM that can then run linux containers easily. But why bother?&lt;/p&gt;
&lt;p&gt;We highly recommend just use a development kubernetes cluster - build and run your containers there instead then you&amp;rsquo;re closer to a production like environment.&lt;/p&gt;
&lt;h2 id=&#34;why-use-kubernetes-instead-of-docker&#34;&gt;Why use kubernetes instead of docker?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;why test on a completely different VM and container orchestrator than production? It&amp;rsquo;s better to test on a similar environment to where you are really going to deploy your code&lt;/li&gt;
&lt;li&gt;test your kubernetes yaml / helm chart and associated configuration at the same time as you run your containers helps you catch mistakes earlier:
&lt;ul&gt;
&lt;li&gt;it&amp;rsquo;s not just about running the container image; it&amp;rsquo;s about lots of other things too like networking, configuration, secrets, storage/volumes, cloud infrastructure, service mesh, liveness/readiness/startup probes - so why not test all of those things rather than just the image?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;some corporate environments don&amp;rsquo;t let you run VMs on your laptop anyway so running docker locally isn&amp;rsquo;t an option&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-to-get-kubernetes&#34;&gt;How to get kubernetes?&lt;/h2&gt;
&lt;p&gt;First you&amp;rsquo;ll need a kubernetes cluster.&lt;/p&gt;
&lt;p&gt;I fully agree with James Ward that &lt;a href=&#34;https://twitter.com/_JamesWard/status/1393270529474408450?s=20&#34;&gt;developers should not need to run kubernetes&lt;/a&gt;. Friends don&amp;rsquo;t let friends setup and manage kubernetes clusters by hand :).&lt;/p&gt;
&lt;p&gt;So try ask your infrastructure team for a development cluster or, if you can, use the cloud to set-up a managed kubernetes cluster. All the public clouds have a relatively straightforward way to spin up a fully managed kubernetes cluster for you that will be relatively inexpensive &amp;amp; they are easy to scale down when you don&amp;rsquo;t need them.&lt;/p&gt;
&lt;p&gt;e.g. on &lt;a href=&#34;https://cloud.google.com/kubernetes-engine&#34;&gt;Google Cloud&lt;/a&gt; it&amp;rsquo;s a couple of clicks and about 5 minutes later you&amp;rsquo;ll have a fully managed kubernetes cluster ready to use. Its easy to enable auto-scaling too. Plus there&amp;rsquo;s a free tier.&lt;/p&gt;
&lt;p&gt;If that&amp;rsquo;s not easy for you to achieve you could try reuse a namespace in your staging cluster? Though we don&amp;rsquo;t recommend developing on a production cluster; its too easy to accidentally mess up production; e.g. by using up too many resources or overwriting a cluster scoped resource like a &lt;code&gt;CustomResourceDefinition&lt;/code&gt; or &lt;code&gt;ClusterRole&lt;/code&gt; etc.&lt;/p&gt;
&lt;p&gt;If you have zero budget you could try &lt;a href=&#34;https://minikube.sigs.k8s.io/docs/start/&#34;&gt;minikube&lt;/a&gt; or &lt;a href=&#34;https://kind.sigs.k8s.io/docs/user/quick-start/&#34;&gt;kind&lt;/a&gt; on top of docker; though its much better to reuse as close to the production setup of kubernetes as you can - there can be large variations in platform, version, setup, network, machine size and so forth.&lt;/p&gt;
&lt;p&gt;If you are deploying software on kubernetes then I&amp;rsquo;d hope you&amp;rsquo;ve some managed kubernetes solution; so why not use that and spin up another cluster for your team for development?&lt;/p&gt;
&lt;p&gt;If your budget is so stretched that you can&amp;rsquo;t afford 2 kubernetes clusters; one for production and one for development + staging; maybe it&amp;rsquo;s time to look at using just pure serverless / FaaS instead of kubernetes anyway? Even in that case it&amp;rsquo;s better to use your serverless / FaaS infrastructure than docker locally for similar reasons.&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-connect-to-kubernetes&#34;&gt;How do I connect to kubernetes?&lt;/h2&gt;
&lt;p&gt;So first you&amp;rsquo;ll need to &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/&#34;&gt;install kubectl&lt;/a&gt; and connect to your kubernetes cluster. This step is provider specific - so refer to your kubernetes provider / cloud vendor for that bit.&lt;/p&gt;
&lt;p&gt;You can then verify you are connected by running some &lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#get&#34;&gt;kubectl get&lt;/a&gt; commands such as&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get ns
kubectl get node
kubectl get pod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-replace-docker-with-kubernetes&#34;&gt;How do I replace docker with kubernetes?&lt;/h2&gt;
&lt;h3 id=&#34;docker-run--kubectl-run&#34;&gt;docker run =&amp;gt; kubectl run&lt;/h3&gt;
&lt;p&gt;Instead of &lt;code&gt;docker run&lt;/code&gt; to run container images you can use &lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#run&#34;&gt;kubectl run&lt;/a&gt; to run a container image&lt;/p&gt;
&lt;p&gt;If you wish to expose a DNS name for a pod you can use &lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#expose&#34;&gt;kubectl expose&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;docker-build--kubectl-build&#34;&gt;docker build =&amp;gt; kubectl build&lt;/h3&gt;
&lt;p&gt;A drop in replacement for &lt;code&gt;docker build&lt;/code&gt; is this &lt;a href=&#34;https://github.com/vmware-tanzu/buildkit-cli-for-kubectl#buildkit-cli-for-kubectl&#34;&gt;kubectl plugin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vmware-tanzu/buildkit-cli-for-kubectl/main/docs/pants-cast.svg&#34; alt=&#34;Pants Cast&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;compose--helm&#34;&gt;compose =&amp;gt; helm&lt;/h3&gt;
&lt;p&gt;Some folks use docker compose files to define all of their various microservices; front end, back end, database etc.&lt;/p&gt;
&lt;p&gt;If you have deployed your applications to staging/production then you are probably already using either &lt;a href=&#34;https://helm.sh/&#34;&gt;helm charts&lt;/a&gt; or kubernetes yaml to define those deployments and services already.&lt;/p&gt;
&lt;p&gt;So just reuse all of them when running things locally in your own cluster/namespace.&lt;/p&gt;
&lt;p&gt;Then you don&amp;rsquo;t have to keep 2 completely different configuration files in sync; you can usually just reuse the same helm charts in all environments and clusters.&lt;/p&gt;
&lt;p&gt;If you have some compose files you could try out &lt;a href=&#34;https://github.com/kubernetes/kompose&#34;&gt;kompose&lt;/a&gt; to help use them more effectively on kubernetes&lt;/p&gt;
&lt;h3 id=&#34;testcontainers--sidecars--kubedock&#34;&gt;testcontainers =&amp;gt; sidecars / kubedock&lt;/h3&gt;
&lt;p&gt;Some folks use &lt;a href=&#34;https://www.testcontainers.org/&#34;&gt;testcontainers&lt;/a&gt; for running extra containers in docker to make it easier to do testing. e.g. to run a database service to run tests using the database.&lt;/p&gt;
&lt;p&gt;You could try &lt;a href=&#34;https://github.com/joyrex2001/kubedock&#34;&gt;kubedock&lt;/a&gt; with testcontainers to see if that solves your problem without requiring a local docker installation.&lt;/p&gt;
&lt;p&gt;It does depend a little on what your solution is for CI.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href=&#34;https://jenkins-x.io/v3&#34;&gt;Jenkins X&lt;/a&gt; or &lt;a href=&#34;https://github.com/tektoncd/pipeline&#34;&gt;tekton pipelines&lt;/a&gt; then you can &lt;a href=&#34;https://github.com/tektoncd/pipeline/blob/main/docs/taskruns.md#specifying-sidecars&#34;&gt;define sidecars&lt;/a&gt; in your pipeline to make sure you have whatever additional services you need when running your tests.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href=&#34;https://www.jenkins.io/&#34;&gt;Jenkins&lt;/a&gt; then you can add the side cars to the &lt;code&gt;pod.yaml&lt;/code&gt; you use with the &lt;a href=&#34;https://plugins.jenkins.io/kubernetes/&#34;&gt;kubernetes plugin&lt;/a&gt; or you could reuse the &lt;a href=&#34;https://www.jenkins.io/blog/2021/04/21/tekton-plugin/&#34;&gt;tekton client plugin&lt;/a&gt; and use tekton pipelines and sidecars&lt;/p&gt;
&lt;p&gt;If you are &lt;a href=&#34;https://github.com/features/actions&#34;&gt;GitHub Actions&lt;/a&gt; then you can spin up a kubernetes cluster using &lt;a href=&#34;https://kind.sigs.k8s.io/&#34;&gt;kind&lt;/a&gt; via this &lt;a href=&#34;https://github.com/marketplace/actions/kind-kubernetes-in-docker-action&#34;&gt;kind github action&lt;/a&gt; - you can then spin up whatever services you need for your tests via &lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#apply&#34;&gt;kubectl apply&lt;/a&gt; or &lt;code&gt;helm install&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;help-we-are-not-even-using-kubernetes-yet&#34;&gt;help! we are not even using kubernetes yet&lt;/h3&gt;
&lt;p&gt;If you have not even started on your journey to kubernetes and have no idea what a &lt;a href=&#34;https://helm.sh/&#34;&gt;helm chart&lt;/a&gt; is, you could consider &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;setting up Jenkins X&lt;/a&gt; in your cluster which will then:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/&#34;&gt;automate setting up the CI / CD&lt;/a&gt; for your projects including automatically creating versioned container images and helm charts whenever you merge changes to the main branch&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/promotion/&#34;&gt;automatic promotion through environments via GitOps&lt;/a&gt; so that new versions of your services are automatically promoted to your &lt;code&gt;Staging&lt;/code&gt; environment and, by default, when approved are promoted to &lt;code&gt;Production&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/preview/&#34;&gt;Preview Environments&lt;/a&gt; automatically spin up Preview Environments for your Pull Requests so you can get fast feedback before changes are merged to the main branch&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once someone on your team has &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;setup up Jenkins X&lt;/a&gt; then please follow the &lt;a href=&#34;https://jenkins-x.io/v3/develop/developing/&#34;&gt;development guide&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;other-handy-kubectl-commands&#34;&gt;other handy kubectl commands&lt;/h3&gt;
&lt;p&gt;You may find these handy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#logs&#34;&gt;kubectl logs&lt;/a&gt; to view the logs of any running pod (which is kubernetes terminology for 1 or more containers deployed together as a single unit on the same node)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#port-forward&#34;&gt;kubectl port-forward&lt;/a&gt; lets you easily port forward from a pod to a local port so you can easily test things out without having to expose things via ingress&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;inner-loop&#34;&gt;inner loop&lt;/h3&gt;
&lt;p&gt;If you want to optimise your inner loop so you can edit source code and see the changes running quickly on kubernetes then please check out the options for &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/inner-loop/&#34;&gt;inner development loop&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Lots of developers have grown fond of their docker installation over the years. Docker was a total game changer in its day!&lt;/p&gt;
&lt;p&gt;However if you are building/testing/debugging software to deploy on kubernetes we highly recommend you consider reclaiming the memory, CPU &amp;amp; disk from your laptop and stop running docker locally and just use more kubernetes.&lt;/p&gt;
&lt;p&gt;It will help you go faster, find those kubernetes related issues sooner and help you learn more about kubernetes which will be useful for figuring out production issues whenever they happen.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X 3 - May 2021 LTS</title>
      <link>https://jenkins-x.io/blog/2021/05/12/jx3-lts-may-21/</link>
      <pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/05/12/jx3-lts-may-21/</guid>
      <description>
        
        
        &lt;p&gt;May 2001 &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/lts/&#34;&gt;LTS release&lt;/a&gt; is now available!&lt;/p&gt;
&lt;p&gt;LTS is a slower cadence version stream which contains a verified set of releases and configurations that have been used by teams tracking the bleeding edge Jenkins X.&lt;/p&gt;
&lt;p&gt;Included in this release:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Protect Pipeline Visualiser with OAuth2 &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/ingress/oauth&#34;&gt;how to docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Terraform repositories are now protected by the Jenkins X version stream&lt;/li&gt;
&lt;li&gt;external-dns helm chart upgrade to &lt;a href=&#34;https://artifacthub.io/packages/helm/bitnami/external-dns/5.0.0&#34;&gt;v5.0.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Reduce external secrets polling of cloud services to reduce cloud costs&lt;/li&gt;
&lt;li&gt;[Jenkins] for users using Jenkins the &lt;a href=&#34;https://github.com/jenkinsci/tekton-client-plugin&#34;&gt;Tekton Client plugin&lt;/a&gt; is now installed by default&lt;/li&gt;
&lt;li&gt;Stackdriver format logging enabled when using GKE and services that use &lt;a href=&#34;https://github.com/jenkins-x/jx-logging&#34;&gt;jx-logging&lt;/a&gt; library.  If you enable the Stackdriver API in GCP you will get well formatted logs and alerts via Stackdriver.&lt;/li&gt;
&lt;li&gt;Jenkins X Grafana dashboards updates with Lighthouse telemetry&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X 3.x GA is here!</title>
      <link>https://jenkins-x.io/blog/2021/04/15/jx-v3-ga/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/04/15/jx-v3-ga/</guid>
      <description>
        
        
        &lt;p&gt;I&amp;rsquo;m super excited to announce the 3.0 GA (General Availability) release of Jenkins X!&lt;/p&gt;
&lt;img width=&#34;387px&#34; src=&#34;https://jenkins-x.io/images/jxxx.png&#34;&gt;
&lt;p&gt;Jenkins X automates your CI/CD on kubernetes to help you &lt;a href=&#34;https://jenkins-x.io/v3/devops/accelerate/&#34;&gt;accelerate&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/&#34;&gt;Automated CI/CD pipelines&lt;/a&gt; lets you focus on your actually application code while Jenkins X automatically creates battle tested &lt;a href=&#34;https://github.com/tektoncd/pipeline&#34;&gt;Tekton&lt;/a&gt;  CI/CD pipelines for your project which are &lt;a href=&#34;https://jenkins-x.io/blog/2021/02/25/gitops-pipelines/&#34;&gt;managed via GitOps&lt;/a&gt; so that its super easy to keep your pipelines up to date across your repositories or to upgrade or &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/catalog/#overriding-a-pipeline-step-locally&#34;&gt;override pipelines or steps&lt;/a&gt; for specific repositories.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/promotion&#34;&gt;Automatic promotion of versioned artifacts&lt;/a&gt; via &lt;a href=&#34;https://jenkins-x.io/v3/devops/patterns/gitops/&#34;&gt;GitOps&lt;/a&gt; through your &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/&#34;&gt;Environments&lt;/a&gt; such as &lt;code&gt;Staging&lt;/code&gt;, &lt;code&gt;Pre-production&lt;/code&gt; and &lt;code&gt;Production&lt;/code&gt; whether they are running in the same kubernetes cluster or you are using &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/multi-cluster/&#34;&gt;multiple clusters for your environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/preview/&#34;&gt;Preview Environments&lt;/a&gt; lets you propose code changes via Pull Requests and have a Preview Environment automatically created, running your code in kubernetes to get fast feedback from your team before agreeing to merge changes to the main branch&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/develop/developing/#using-chatops&#34;&gt;ChatOps&lt;/a&gt; comment on Pull Requests to give feedback, approve/hold changes, trigger optional pipelines for additional testing and other &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/chatops/&#34;&gt;ChatOps commands&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a &lt;a href=&#34;https://jenkins-x.io/v3/develop/developing/#demo&#34;&gt;demo&lt;/a&gt; of &lt;a href=&#34;https://jenkins-x.io/v3/develop/developing/&#34;&gt;how to develop code with Jenkins X&lt;/a&gt;&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/4wqwulEzseM?t=279s&#34; title=&#34;Demo of developing with Jenkins X&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;documentation&#34;&gt;Documentation&lt;/h2&gt;
&lt;p&gt;the main documentation of the changes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/about/overview/&#34;&gt;the new architecture&lt;/a&gt; with modular plugins and improved &lt;a href=&#34;https://jenkins-x.io/v3/about/extending/&#34;&gt;extension points&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/about/changes/&#34;&gt;what has changed since 3.x started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/about/comparison/&#34;&gt;how 3.x compares to 2.x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/devops/&#34;&gt;DevOps Guides&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/v3/devops/patterns/&#34;&gt;DevOps Patterns&lt;/a&gt; provides an overview of our learnings in the DevOps space&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;here&amp;rsquo;s a brief summary of the differences:&lt;/p&gt;
&lt;h3 id=&#34;changes-since-the-3x-beta&#34;&gt;Changes since the 3.x beta&lt;/h3&gt;
&lt;p&gt;The following &lt;a href=&#34;https://jenkins-x.io/v3/about/changes/&#34;&gt;improvements have been made since the first beta&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/blog/2021/04/01/jx3-builtin-observability/&#34;&gt;Integrated observability and monitoring&lt;/a&gt; with &lt;a href=&#34;https://jenkins-x.io/blog/2021/04/08/jx3-pipeline-trace/&#34;&gt;Pipeline Tracing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/blog/2021/04/01/jx3-osiris-preview-envs/&#34;&gt;Auto scale preview environments with Osiris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/cluster/#automatic-upgrades&#34;&gt;Enable auto upgrade&lt;/a&gt; to keep your cluster up to date&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;user-changes-since-2x&#34;&gt;User Changes since 2.x&lt;/h3&gt;
&lt;p&gt;As a user the high level UX of Jenkins X is similar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#automated-pipelines&#34;&gt;automated Continuous Delivery pipelines&lt;/a&gt; for using &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/&#34;&gt;tekton&lt;/a&gt; for your repositories with &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#promotion&#34;&gt;automatic promotion&lt;/a&gt; between your &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pull requests on your repositories create separate &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;Preview Environments&lt;/a&gt; where your team can review your changes and give fast feedback before your changes are approved and merged into the main trunk.&lt;/li&gt;
&lt;/ul&gt;
&lt;img width=&#34;600&#34; src=&#34;https://jenkins-x.io/images/pr-comment.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;h4 id=&#34;new-features&#34;&gt;New features&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;we now default to &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/#source-changes&#34;&gt;vanilla tekton YAML for defining pipelines&lt;/a&gt; while &lt;a href=&#34;https://jenkins-x.io/blog/2020/11/11/accelerate-tekton/&#34;&gt;accelerating your tekton&lt;/a&gt; with &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/#adding-tasks-from-the-tekton-catalog&#34;&gt;tekton catalog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;we include an open source &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/dashboard/&#34;&gt;dashboard&lt;/a&gt; for visualising pipelines and logs which you can invoke via:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx dash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;we have a full &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/octant/&#34;&gt;Kubernetes and Jenkins X console&lt;/a&gt; based on the excellent &lt;a href=&#34;https://octant.dev/&#34;&gt;octant&lt;/a&gt; which you can try out via:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx ui
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/2LCPHi0BnUg&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;platform-changes&#34;&gt;Platform Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;we now use &lt;a href=&#34;https://helm.sh/&#34;&gt;helm&lt;/a&gt; (3.x) and &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt; along with optionally &lt;a href=&#34;https://kustomize.io/&#34;&gt;kustomize&lt;/a&gt; in a GitOps style to define and configure both Jenkins X itself, your tools and applications in any namespace&lt;/li&gt;
&lt;li&gt;support &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/multi-cluster/&#34;&gt;multi cluster&lt;/a&gt; out of the box so you can keep &lt;code&gt;Staging&lt;/code&gt; and &lt;code&gt;Production&lt;/code&gt; in separate clusters to your development cluster where your pipelines run, you create and release immutable container images and other artifacts.&lt;/li&gt;
&lt;li&gt;to &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;setup or upgrade&lt;/a&gt; Jenkins X we use &lt;a href=&#34;https://www.terraform.io/&#34;&gt;terraform&lt;/a&gt; to setup your cloud resources on &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/azure/&#34;&gt;Azure&lt;/a&gt;, &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/eks/&#34;&gt;Amazon&lt;/a&gt; or &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/google/&#34;&gt;Google&lt;/a&gt; while also supporting on-premises, minkube and OpenShift - see the &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;Admin Guides&lt;/a&gt; for more detail
&lt;ul&gt;
&lt;li&gt;the actual installation of kubernetes resources takes place using the &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/operator/&#34;&gt;git operator&lt;/a&gt; so it runs reliably inside the cluster itself&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;we default to using &lt;a href=&#34;https://github.com/external-secrets/kubernetes-external-secrets&#34;&gt;Kubernetes External Secrets&lt;/a&gt; to manage all secrets for Jenkins X itself, development tools and your applications too.
&lt;ul&gt;
&lt;li&gt;This means we can support various secret backends such as Alibaba Cloud KMS Secret Manager, Amazon Secret Manager, Azure Key Vault, Hashicorp Vault or GCP Secret Manager&lt;/li&gt;
&lt;li&gt;It also means we can then check in all kubernetes resources and custom resources directly into git (apart from Kubernetes &lt;code&gt;Secrets&lt;/code&gt;) so that it super easy to version, review and reason about your kubernetes resources in a GitOps way.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;built in &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/tls_dns/&#34;&gt;TLS and DNS&lt;/a&gt; support along with &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/health/&#34;&gt;Heath&lt;/a&gt; reporting and visualising via &lt;a href=&#34;https://github.com/Comcast/kuberhealthy&#34;&gt;kuberhealthy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;we now have an &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/lts/&#34;&gt;LTS distribution&lt;/a&gt; which lets you switch to a much more slower cadence of releases of Jenkins X&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have been using Jenkins X 3.x in production now for many months (for CI/CD of all of the &lt;a href=&#34;https://jenkins-x.io/v3/about/overview/source/&#34;&gt;3.x codebase&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/&#34;&gt;continuously upgrading our cluster in the standard way&lt;/a&gt; and it&amp;rsquo;s been much simpler and easier to use, operate and configure.&lt;/p&gt;
&lt;p&gt;We have also been continuously delivering changes from Jenkins X into our production cluster for many months now and it&amp;rsquo;s been working great - &lt;a href=&#34;https://jenkins-x.io/v3/devops/patterns/gitops/&#34;&gt;GitOps&lt;/a&gt; FTW!&lt;/p&gt;
&lt;p&gt;In general Jenkins X 3.x is now much simpler and more flexible. It supports &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;lots more platforms than before&lt;/a&gt; and should be easy to extend and configure for other platforms too.&lt;/p&gt;
&lt;div class=&#34;row&#34;&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;p class=&#34;card-text text-center&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/eks/&#34; title=&#34;setup Jenkins X on Amazon cloud with EKS&#34;&gt;
            &lt;img alt=&#34;Amazon&#34; src=&#34;https://jenkins-x.io/images/logo/aws.svg&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;p class=&#34;card-text text-center&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/azure/&#34; title=&#34;setup Jenkins X on Azure cloud with AKS&#34;&gt;
            &lt;img alt=&#34;Azure&#34; src=&#34;https://jenkins-x.io/images/logo/azure.svg&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;p class=&#34;card-text text-center&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/gke/&#34; title=&#34;setup Jenkins X on Google Cloud with GKE&#34;&gt;
            &lt;img alt=&#34;Google&#34; src=&#34;https://jenkins-x.io/images/logo/gcp.svg&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;row pt-4&#34;&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;p class=&#34;card-text text-center&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/on-premises/&#34; title=&#34;setup Jenkins X on any Kubernetes cluster without cloud resources&#34;&gt;
            &lt;img alt=&#34;On-Premises&#34; src=&#34;https://jenkins-x.io/images/logo/k8s.svg&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;p class=&#34;card-text text-center&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/minikube/&#34; title=&#34;setup Jenkins X on your laptop&#34;&gt;
            &lt;img alt=&#34;Minkube&#34; src=&#34;https://jenkins-x.io/images/logo/minikube.svg&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;h1 class=&#34;card-title&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/openshift/&#34; title=&#34;setup Jenkins X on OpenShift&#34;&gt;
            &lt;img width=&#34;397&#34; height=&#34;66&#34; alt=&#34;OpenShift&#34; src=&#34;https://jenkins-x.io/images/logo/openshift.png&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/h1&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3 id=&#34;getting-started&#34;&gt;Getting started&lt;/h3&gt;
&lt;p&gt;If you have never tried &lt;a href=&#34;https://jenkins-x.io/v3/about/&#34;&gt;3.x&lt;/a&gt; before then please follow the &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;Admin Guide&lt;/a&gt; to get Jenkins X installed on your cloud provider, on-premises kubernetes cluster or minikube.&lt;/p&gt;
&lt;p&gt;If you previously tried the 3.x alpha then the &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/migrate/v3-alpha/&#34;&gt;migration instructions are here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For folks on older 2.x versions of Jenkins X please see &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/migrate/v2/&#34;&gt;the 2.x migration instructions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once your cluster has been installed or migrated then check out the &lt;a href=&#34;https://jenkins-x.io/v3/develop/&#34;&gt;User Guide&lt;/a&gt; on how to develop software continuously with Jenkins X.&lt;/p&gt;
&lt;h3 id=&#34;final-thoughts&#34;&gt;Final thoughts&lt;/h3&gt;
&lt;p&gt;A huge thanks goes out to all the &lt;a href=&#34;https://jenkins-x.io/community/#contributors&#34;&gt;contributors&lt;/a&gt;, folks in the &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;Jenkins X community&lt;/a&gt; and the &lt;a href=&#34;https://jenkins-x.io/v3/about/overview/projects/&#34;&gt;community around all the open source projects we reuse&lt;/a&gt; who&amp;rsquo;ve helped get this beta together. The improvements in Jenkins X 3.x since 2.x are totally amazing, well done everyone!&lt;/p&gt;
&lt;p&gt;Please give Jenkins X a try and &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;let us know what you think&lt;/a&gt; or &lt;a href=&#34;https://github.com/jenkins-x/issues&#34;&gt;raise an issue&lt;/a&gt;. All feedback highly appreciated - particularly how we can keep improving to help you develop faster.&lt;/p&gt;
&lt;p&gt;If you are at all interested in Continuous Delivery with kubernetes using &lt;a href=&#34;https://jenkins-x.io/v3/about/overview/projects/&#34;&gt;tools&lt;/a&gt; like &lt;a href=&#34;https://helm.sh/&#34;&gt;helm&lt;/a&gt;, &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt;, &lt;a href=&#34;https://knative.dev/&#34;&gt;knative&lt;/a&gt;,  &lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;lighthouse&lt;/a&gt; and last but definitely not least, &lt;a href=&#34;https://github.com/tektoncd/cli&#34;&gt;tekton&lt;/a&gt;  then please join the &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;community&lt;/a&gt; - its great fun!&lt;/p&gt;
&lt;p&gt;For any questions and feedback please reach out on slack &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;https://jenkins-x.io/community/#slack&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X 3 - April 2021 LTS</title>
      <link>https://jenkins-x.io/blog/2021/04/12/jx3-lts-apr-21/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/04/12/jx3-lts-apr-21/</guid>
      <description>
        
        
        &lt;p&gt;This is the second &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/lts/&#34;&gt;LTS release&lt;/a&gt; for Jenkins X 3.x.&lt;/p&gt;
&lt;p&gt;LTS is a slower cadence version stream which contains a verified set of releases and configurations that have been used by teams tracking the bleeding edge Jenkins X.&lt;/p&gt;
&lt;p&gt;Initially when we decided to maintain an LTS version stream we thought we&amp;rsquo;d aim for monthly releases however this second release comes two months after the first.  This has given us more chances to run fixes and chart upgrades on Jenkins X own infrastructure to verify stability.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; This LTS release is intended to be the final one before Jenkins X 3 is made Generally Available so stay tuned for the exciting news coming very soon!  We will of course continue to develop and release LTS post GA.&lt;/p&gt;
&lt;p&gt;Included in this release:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;General beta bug fixes and helm chart upgrades&lt;/li&gt;
&lt;li&gt;Enable &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/observability&#34;&gt;Observability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enable &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/slack&#34;&gt;Slack&lt;/a&gt; notifications&lt;/li&gt;
&lt;li&gt;Support for GitLab, Gitea, BitBucket Server and GitHub Enterprise&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please be aware of these changes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/about/changes&#34;&gt;Breaking changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If using Vault move it outside of being managed by Jenkins X GitOps &lt;a href=&#34;https://jenkins-x.io/v3/develop/faq/config/vault/#after-an-upgrade-the-boot-job-is-waiting-for-vault-in-jx-vault&#34;&gt;important notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Traces for your pipelines</title>
      <link>https://jenkins-x.io/blog/2021/04/08/jx3-pipeline-trace/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/04/08/jx3-pipeline-trace/</guid>
      <description>
        
        
        &lt;p&gt;Now that Jenkins X has solid integration with &lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; for its &lt;a href=&#34;https://jenkins-x.io/blog/2021/04/01/jx3-builtin-observability/&#34;&gt;observability&lt;/a&gt;, it&amp;rsquo;s time to start building fun things!&lt;/p&gt;
&lt;p&gt;And the first one is &lt;strong&gt;tracing for all your pipelines&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/jx-pipelines-visualizer/pipeline-trace.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;With it, you can easily see the timings of all your pipelines, stages, and steps. This is great to inspect a &amp;ldquo;slow&amp;rdquo; pipeline and quickly see the slower steps.&lt;/p&gt;
&lt;p&gt;We are using &lt;a href=&#34;https://opentelemetry.io/&#34;&gt;OpenTelemetry&lt;/a&gt; to generate a &amp;ldquo;logical&amp;rdquo; view of the pipeline, with 1 trace per pipeline and 1 span for each stage and step.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/v3/observability_pipeline_trace.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;By default, these traces are ingested by &lt;a href=&#34;https://github.com/grafana/tempo&#34;&gt;Grafana Tempo&lt;/a&gt;. But if you prefer to export them to a different destination, it&amp;rsquo;s very easy, and thanks to the &lt;a href=&#34;https://opentelemetry.io/docs/collector/&#34;&gt;OpenTelemetry Collector&lt;/a&gt; you can export to a lot of different services. You can see the full list &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/exporter&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The trace identifier is also stored in the pipeline itself so that the &lt;a href=&#34;https://github.com/jenkins-x/jx-pipelines-visualizer&#34;&gt;Jenkins X Pipelines Visualizer UI&lt;/a&gt; can link directly to the trace.&lt;/p&gt;
&lt;h3 id=&#34;how-can-you-benefit-from-it-in-your-own-jenkins-x-cluster&#34;&gt;How can you benefit from it in your own Jenkins X cluster?&lt;/h3&gt;
&lt;p&gt;You just need to enable the observability stack, as explained in the &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/observability/&#34;&gt;observability admin guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then, trigger a pipeline, and once it&amp;rsquo;s finished, go to the web UI, and click on the &amp;ldquo;Trace&amp;rdquo; button on the top-right. That&amp;rsquo;s it!&lt;/p&gt;
&lt;h3 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/h3&gt;
&lt;p&gt;This is only the first step of native tracing support in Jenkins X. Stay tuned for more!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X v3: now with built-in observability</title>
      <link>https://jenkins-x.io/blog/2021/04/01/jx3-builtin-observability/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/04/01/jx3-builtin-observability/</guid>
      <description>
        
        
        &lt;p&gt;As a Continuous Delivery platform, Jenkins X has a central part in your infrastructure. If it becomes unstable or unusable, it will impact the whole software delivery of your organization.&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Your CI/CD pipelines are a part of your production story. Observability for CI/CD is observability for a critical prod component.&lt;/p&gt;&amp;mdash; Jaana Dogan ヤナ ドガン (@rakyll) &lt;a href=&#34;https://twitter.com/rakyll/status/1341177825525547012?ref_src=twsrc%5Etfw&#34;&gt;December 22, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;This is why observability is a critical topic for Jenkins X, and work has started to get observability built-in for Jenkins X v3:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Platform Observability&lt;/strong&gt;: visualize logs and metrics for everything running in the Kubernetes cluster: Jenkins X&amp;rsquo;s own components - Tekton, Lighthouse, cert-manager, &amp;hellip; - but also your own applications, that will be deployed either in preview environments or in the staging/prod environments.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Continuous Delivery Indicators&lt;/strong&gt;: visualize pull requests, pipelines, releases, and deployments metrics, collected from cluster events and git events.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We&amp;rsquo;re using &lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; as the central visualization component: the main entry point from which you can get a complete overview of both your application&amp;rsquo;s lifecycle - development, build, tests, releases, deployments, runtime - and your Continuous Delivery platform.&lt;/p&gt;
&lt;h2 id=&#34;platform-observability&#34;&gt;Platform Observability&lt;/h2&gt;
&lt;p&gt;Platform observability is not enabled by default for the moment, so the first step is to enable it, as explained in the &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/observability/platform-observability/&#34;&gt;platform observability admin guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once it&amp;rsquo;s done, you&amp;rsquo;ll get a running Grafana instance, pre-configured with data sources for applications logs - using &lt;a href=&#34;https://grafana.com/oss/loki/&#34;&gt;Loki&lt;/a&gt; - and applications metrics - using &lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt;. But most important, it comes with a set of pre-defined &lt;a href=&#34;https://github.com/jenkins-x-charts/grafana-dashboard&#34;&gt;Grafana dashboards&lt;/a&gt; for the main platform components: Tekton, Lighthouse, cert-manager, &amp;hellip;&lt;/p&gt;
&lt;p&gt;Here is an example of such a dashboard, using a mix of data sources to display &lt;a href=&#34;https://cert-manager.io/&#34;&gt;cert-manager&lt;/a&gt; metrics collected by Prometheus - including the certificates expiration dates - and logs collected by Loki/Promtail:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/v3/observability_platform_cert-manager.png&#34; alt=&#34;cert-manager grafana dashboard for Jenkins X&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;continuous-delivery-indicators&#34;&gt;Continuous Delivery Indicators&lt;/h2&gt;
&lt;p&gt;Continuous Delivery Indicators&#39; main goal is to give people insights into their workflows/processes so that they can continuously improve them. This is based on the &lt;a href=&#34;https://www.devops-research.com/research.html&#34;&gt;DORA devops metrics&lt;/a&gt; and the &lt;a href=&#34;https://queue.acm.org/detail.cfm?id=3454124k&#34;&gt;SPACE framework&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/jenkins-x/cd-indicators&#34;&gt;CD Indicators&lt;/a&gt; addon is not enabled by default for the moment, so the first step is to enable it, as explained in the &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/observability/cd-indicators/&#34;&gt;continuous delivery indicators admin guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once it&amp;rsquo;s done, you&amp;rsquo;ll get a running collector, along with a PostgreSQL database. The collector will listen for various events, both from the cluster and the git repositories, and store pull requests, pipelines, releases, and deployments data in the PostgreSQL database. The addon will also expose a new Grafana data source along with pre-configured Grafana dashboards, which will be picked up by your running Grafana instance.&lt;/p&gt;
&lt;p&gt;Here is an example of such a dashboard, displaying various indicators for a single repository/application: contributors, reviews, pull requests, releases, deployments, &amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/v3/observability_cd_indicators_repository.png&#34; alt=&#34;Continuous Delivery Indicators for a single repository&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;roadmap&#34;&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;This is only the beginning! The next steps - in no particular order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;configure alerting - using Prometheus alertmanager and Grafana alerting features - with a set of pre-defined alerts&lt;/li&gt;
&lt;li&gt;improve the dashboards&lt;/li&gt;
&lt;li&gt;enable it by default, so that users can benefit from it out of the box&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Contributions are welcomed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx3-versions&#34;&gt;Grafana/loki/prometheus/&amp;hellip; configuration in the versionstream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-charts/grafana-dashboard&#34;&gt;Grafana dashboards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/cd-indicators&#34;&gt;Continuous Delivery Indicators Collector &amp;amp; Grafana dashboards&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Scaling Preview Environments with Osiris</title>
      <link>https://jenkins-x.io/blog/2021/04/01/jx3-osiris-preview-envs/</link>
      <pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/04/01/jx3-osiris-preview-envs/</guid>
      <description>
        
        
        &lt;p&gt;One of Jenkins X&amp;rsquo;s core features is the &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/preview/&#34;&gt;preview environments&lt;/a&gt;: temporary environments created automatically for each Pull Requests, to deploy your application and its dependencies. You can then use this preview environment to run integration tests, or manually use/test your application.&lt;/p&gt;
&lt;p&gt;This is all great until you have more and more applications, each with a few dependencies (postgresql, mongodb, &amp;hellip;) and a few opened pull requests at any time. This means that you&amp;rsquo;ll get more and more pods running in your Kubernetes cluster, in addition to Jenkins X&amp;rsquo;s own components, your build pipelines, and of course your staging and production applications - unless you are using &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/multi-cluster/&#34;&gt;multi-cluster&lt;/a&gt;. The result is that you&amp;rsquo;ll need more nodes or bigger nodes. Which means more money.&lt;/p&gt;
&lt;p&gt;But, these preview environments are in fact idle most of the time: they are only used for the integration tests, and sometimes when someone manually uses them. The rest of the time - including all night for example - they are just staying there, idle, and consuming resources. What if we could easily scale them down when they are idle, and automatically bring them up when we need them? So that a Pull Request staying opened for 2 weeks because someone went on vacation won&amp;rsquo;t consume resources in your cluster.&lt;/p&gt;
&lt;h3 id=&#34;osiris&#34;&gt;Osiris&lt;/h3&gt;
&lt;p&gt;Enter &lt;a href=&#34;https://github.com/dailymotion-oss/osiris&#34;&gt;Osiris&lt;/a&gt;! Initially created by the &lt;a href=&#34;https://github.com/deislabs&#34;&gt;Deislabs team&lt;/a&gt;, Osiris is a Kubernetes component that will automatically scale down your &amp;ldquo;idle&amp;rdquo; pods, and scale them up when a request comes in. Although the &lt;a href=&#34;https://github.com/deislabs/osiris&#34;&gt;original project&lt;/a&gt; has been archived, the &lt;a href=&#34;https://github.com/dailymotion-oss&#34;&gt;Dailymotion team&lt;/a&gt; has taken over the maintenance of &lt;a href=&#34;https://github.com/dailymotion-oss/osiris&#34;&gt;a fork&lt;/a&gt;. And they have been using it with success in their Jenkins X dev cluster for more than 2 years: they regularly have around 50 preview environments active at any time, and&amp;hellip; 0 pods from these environments running at night - or on weekends. Coupled with a cluster autoscaler, it means that their Kubernetes cluster use between 3 and more than 20 nodes depending on the workload. Being able to scale down to a minimum number of nodes is a great benefit when using cloud resources.&lt;/p&gt;
&lt;h3 id=&#34;how-can-you-benefit-from-it-in-your-own-jenkins-x-cluster&#34;&gt;How can you benefit from it in your own Jenkins X cluster?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;first, you&amp;rsquo;ll need to follow the &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/preview-environments/&#34;&gt;admin guide to enable Osiris in your dev cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;and then, you&amp;rsquo;ll need to add annotations to your Deployment/Statefulset and Service manifests - as explained in the &lt;a href=&#34;https://github.com/dailymotion-oss/osiris&#34;&gt;Osiris documentation&lt;/a&gt; - in your application&amp;rsquo;s Helm chart&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that if you store data, you&amp;rsquo;ll need to use persistent volumes (for postgresql, mongodb, &amp;hellip;) so that you won&amp;rsquo;t lose your data after a scale down/up of your pods.&lt;/p&gt;
&lt;h3 id=&#34;how-does-it-work&#34;&gt;How does it work?&lt;/h3&gt;
&lt;p&gt;Osiris will automatically inject itself as a proxy in front of all the pods with the right annotation, so that it can see all requests for your pods. If it doesn&amp;rsquo;t see any request for a configurable amount of time - 10 minutes by default - it will scale down the deployment (or statefulset), and place itself behind the associated service. So that if a new request comes in, Osiris will be able to scale up the deployment (or statefulset), and then forward the request to the new pod.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: cdCon 2021 - Call for Jenkins X Proposals</title>
      <link>https://jenkins-x.io/blog/2021/02/25/cdcon-cfp/</link>
      <pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/02/25/cdcon-cfp/</guid>
      <description>
        
        
        &lt;p&gt;Hear ye! Hear ye! Jenkins X Community,&lt;/p&gt;
&lt;p&gt;cdCon 2021 (the Continuous Delivery Foundation’s annual flagship event) is happening June 23-24 and its call for papers is open!&lt;/p&gt;
&lt;p&gt;This is your chance to share what you’ve been doing with Jenkins X. Are you building something cool? Using it to solve real-world problems? Are you making things fast? Secure? Or maybe you’re a contributor and want to share what’s new. In all cases, we want to hear from you!&lt;/p&gt;
&lt;p&gt;Submit your talk for &lt;a href=&#34;https://events.linuxfoundation.org/cdcon/&#34;&gt;cdCon 2021&lt;/a&gt; to be part of the conversation driving the future of software delivery for technology teams, enterprise leadership, and open-source communities.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Submission Deadline&lt;/strong&gt;: Friday, March 5 at 11:59 PM PST&lt;/p&gt;
&lt;h2 id=&#34;topics&#34;&gt;Topics&lt;/h2&gt;
&lt;p&gt;Here are the suggested tracks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Continuous Delivery Ecosystem&lt;/strong&gt; – This track spans the entire Continuous Delivery ecosystem, from workflow orchestration, configuration management, testing, security, release automation, deployment strategies, developer experience, and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Advanced Delivery Techniques&lt;/strong&gt; – For talks on the very cutting edge of continuous delivery and emerging technology, for example, progressive delivery, observability, and MLOps.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitOps &amp;amp; Cloud-Native CD&lt;/strong&gt; – Submit to this track for talks related to continuous delivery involving containers, Kubernetes, and cloud*native technologies. This includes GitOps, cloud-native CD pipelines, chatops, best practices, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Continuous Delivery in Action&lt;/strong&gt; – This track is for showcasing real-world continuous delivery addressing challenges in specific domains e.g. fintech, embedded, healthcare, retail, etc. Talks may cover topics such as governance, compliance, security, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Leadership Track&lt;/strong&gt; – Talks for leaders and decision-makers on topics such as measuring DevOps, build vs buy, scaling, culture, security, FinOps, and developer productivity.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Community Track&lt;/strong&gt; – There is more to open source than code contributions. This track covers topics such as growing open source project communities, diversity &amp;amp; inclusion, measuring community health, project roadmaps, and any other topic around sustaining open source and open source communities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Singular project focus and/or interoperability between:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jenkins&lt;/li&gt;
&lt;li&gt;Jenkins X&lt;/li&gt;
&lt;li&gt;Ortelius&lt;/li&gt;
&lt;li&gt;Spinnaker&lt;/li&gt;
&lt;li&gt;Screwdriver&lt;/li&gt;
&lt;li&gt;Tekton&lt;/li&gt;
&lt;li&gt;Other – e.g. Keptn, Flagger, Argo, Flux&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;View all tracks and read &lt;a href=&#34;https://events.linuxfoundation.org/cdcon/program/cfp/&#34;&gt;CFP details here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We look forward to reading your proposal!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/cdcon/program/cfp/&#34;&gt;Submit your talk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/cdcon-cfp-jx.png&#34; alt=&#34;cfp image&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: GitOps your cloud native pipelines</title>
      <link>https://jenkins-x.io/blog/2021/02/25/gitops-pipelines/</link>
      <pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/02/25/gitops-pipelines/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton pipelines&lt;/a&gt; are cloud native and are designed from the ground up for kubernetes and the cloud:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there&amp;rsquo;s no single point of failure and the pipelines are elastically scalable&lt;/li&gt;
&lt;li&gt;each pipeline is completely declarative and self defined&lt;/li&gt;
&lt;li&gt;each pipeline executes independently of any others&lt;/li&gt;
&lt;li&gt;pipelines are orchestrated via the sophisticated kubernetes scheduler:
&lt;ul&gt;
&lt;li&gt;can use pipeline specific metadata for resource limits and node selectors: memory, CPU, machine type (GPU, windows/macOS/linux etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;its easy to associate pipelines with &lt;a href=&#34;https://jenkins-x.io/v3/devops/cloud-native/#map-iam-roles-to-kubernetes-service-accounts&#34;&gt;Cloud IAM roles&lt;/a&gt; to avoid you having to upload cluster admin secrets to your public CI service which really helps security and helps reduce accidental bitcoin mining on your cloud account&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a previous blog we talked about how you can &lt;a href=&#34;https://jenkins-x.io/blog/2020/11/11/accelerate-tekton/&#34;&gt;accelerate your use of tekton with Jenkins X&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-problem&#34;&gt;The problem&lt;/h2&gt;
&lt;p&gt;We are moving towards a microservice kind of world with many teams writing many bits of software in many repositories. So there are lots and lots of pipelines. These pipelines keep getting more sophisticated over time; doing much more (all kinds of building, analysis, reporting, testing, ChatOps etc) and the software/images/approaches they use change.&lt;/p&gt;
&lt;p&gt;So how can we manage, configure and maintain them all so that there are many pipelines for many repositories; where each repository can customise anything it needs but we can easily maintain everything continuously and its easy to understand and tool around?&lt;/p&gt;
&lt;h3 id=&#34;previous-solutions&#34;&gt;Previous solutions&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;ve tried to tackle this problem in a number of ways over the years; each has pros and cons.&lt;/p&gt;
&lt;p&gt;One option is to put all your pipelines in a shared library. You can then reference the pipelines by name in each of your repositories.&lt;/p&gt;
&lt;p&gt;But what if you want to change a bit of a pipeline for a specific repository? If you change it globally for everyone you can break things. You may just want local customisation for your repository only.&lt;/p&gt;
&lt;p&gt;You can add parameters into your pipelines. They are &lt;a href=&#34;https://github.com/tektoncd/pipeline/issues/1484&#34;&gt;quite verbose on Pipelines and PipelineRuns&lt;/a&gt;; but it&amp;rsquo;s hard to think up front of every parameterisation that may be required by downstream repositories. e.g. changing any image; changing any command line argument in any step, adding/changing any environment variables or volumes? How about adding extra steps before/after a particular step? It can soon get very complex and results in very complex pipelines that are hard to understand and use.&lt;/p&gt;
&lt;p&gt;Another option is if you need to change a pipeline file you just copy the entire file or create a fork. But then you end up with 100s of copies or forks of pipelines that are hard to synchronise and manage. You end using ancient image versions or older approaches in some repositories which leads to maintenance nightmare. How do you roll out security updates to images in all those repositories, copies and forks?&lt;/p&gt;
&lt;p&gt;Another approach we tried is using a tool like &lt;a href=&#34;https://googlecontainertools.github.io/kpt/&#34;&gt;kpt&lt;/a&gt; to share YAML files across git repositories and then upgrade them via git. This does work quite well; though the downside is whenever you upgrade a new version (e.g. we roll out a new pipeline catalog or a new image change to a tool for security reasons) you need to generate a pull request on every git repository to upgrade them and usually you end up with merge conflicts as the tekton YAML is not trivial; even fairly minor local customisations lead to merge conflict hell.&lt;/p&gt;
&lt;p&gt;So how can you apply the benefits of &lt;a href=&#34;https://jenkins-x.io/v3/devops/gitops/&#34;&gt;GitOps&lt;/a&gt; to your cloud native pipelines while also avoiding copy-paste of lots of YAML into all of your repositories, keeping things easy to understand and flexible so any repository can customize things when required but at the same time make it painless to move reliably forward as the pipeline catalogs and images change?&lt;/p&gt;
&lt;h2 id=&#34;gitops-your-pipelines&#34;&gt;GitOps your pipelines&lt;/h2&gt;
&lt;p&gt;Now our recommendation on the &lt;a href=&#34;https://jenkins-x.io/&#34;&gt;Jenkins X&lt;/a&gt; project is to use &lt;a href=&#34;https://jenkins-x.io/v3/devops/gitops/&#34;&gt;GitOps&lt;/a&gt; for your pipelines as well as for your source code and deployment configuration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;store your pipelines as declarative YAML files inside each of your git repositories.&lt;/li&gt;
&lt;li&gt;use the standard &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/pipelines/&#34;&gt;Tekton YAML syntax&lt;/a&gt; so that you get &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/editing/#ide-support&#34;&gt;IDE support&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/editing/#linting&#34;&gt;easy linting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This lets each git repository configure what pipelines are triggered by what events with what pipeline steps.&lt;/p&gt;
&lt;p&gt;If you need to &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/editing/&#34;&gt;edit your pipelines in any repository&lt;/a&gt; they are right there in git; it is then easy for each repository to use its own version and configuration if required. This lets pipelines and repositories change over time independently to help you accelerate.&lt;/p&gt;
&lt;h2 id=&#34;sharing-tasks-and-steps-across-repositories&#34;&gt;Sharing Tasks and Steps across repositories&lt;/h2&gt;
&lt;p&gt;Rather than copy pasting &lt;a href=&#34;https://tekton.dev/docs/pipelines/tasks/#configuring-a-task&#34;&gt;task and step YAML&lt;/a&gt; between repositories we can refer to a &lt;code&gt;Task&lt;/code&gt; or a &lt;code&gt;Step&lt;/code&gt; in a Task as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;refer to all the steps in a shared task by using&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;taskSpec&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uses:sourceURI&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;refer to a single &lt;em&gt;named&lt;/em&gt; step from a shared task&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;taskSpec&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;stepTemplate&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uses:sourceURI&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mystep&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sourceuri-notation&#34;&gt;SourceURI notation&lt;/h3&gt;
&lt;p&gt;The source URI notation is enabled by a special &lt;code&gt;image&lt;/code&gt; prefix of &lt;strong&gt;uses:&lt;/strong&gt; on step or if an image on a step is blank and the &lt;code&gt;stepTemplate:&lt;/code&gt; has an &lt;code&gt;image&lt;/code&gt; prefix of &lt;strong&gt;uses:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We borrowed this idea from &lt;a href=&#34;https://github.com/google/ko&#34;&gt;ko&lt;/a&gt; and &lt;a href=&#34;https://github.com/mattmoor/mink&#34;&gt;mink&lt;/a&gt;; the idea of using a custom prefix on image URIs.&lt;/p&gt;
&lt;p&gt;You can refer to the &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/blob/master/docs/pipelines.md&#34;&gt;detailed documentation&lt;/a&gt; on how the step inheritence and overriding works.&lt;/p&gt;
&lt;p&gt;For a &lt;a href=&#34;https://github.com&#34;&gt;github.com&lt;/a&gt; source URI we use the syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uses:owner/repository/pathToFile@version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This references the &lt;a href=&#34;https://github.com&#34;&gt;https://github.com&lt;/a&gt; repository for &lt;code&gt;owner/repository&lt;/code&gt; and &lt;strong&gt;@version&lt;/strong&gt; can be a git tag, branch or SHA.&lt;/p&gt;
&lt;p&gt;If you are not using &lt;a href=&#34;https://github.com&#34;&gt;github.com&lt;/a&gt; to host your git repositories you can access a pipeline task or step from your custom git serve use the &lt;strong&gt;uses:lighthouse:&lt;/strong&gt; prefix before &lt;code&gt;owner&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uses:lighthouse:owner/repository/pathToFile@version&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We &lt;a href=&#34;https://jenkins-x.io/v3/devops/gitops/#recommendations&#34;&gt;recommend you version everything with GitOps&lt;/a&gt; so you know exactly what versions are being used from git.&lt;/p&gt;
&lt;p&gt;However you can use &lt;strong&gt;@HEAD&lt;/strong&gt; to reference the latest version.&lt;/p&gt;
&lt;p&gt;To use a locked down version based on the &lt;em&gt;version stream&lt;/em&gt; of your cluster, you can use &lt;strong&gt;@versionStream&lt;/strong&gt; which means use the git SHA for the repository which is configured in the version stream.&lt;/p&gt;
&lt;p&gt;The nice thing about &lt;strong&gt;@versionStream&lt;/strong&gt; is that the pipeline catalog you inherit tasks and steps from is locked down to an exact SHA in the version stream; but it avoids you having to go through every one of your git repositories whenever you upgrade a pipeline catalog.&lt;/p&gt;
&lt;h2 id=&#34;reusing-tasks-and-steps-from-tekton-catalog&#34;&gt;Reusing Tasks and Steps from Tekton Catalog&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/tektoncd/catalog&#34;&gt;Tekton Catalog&lt;/a&gt; git repository defines a ton of Tekton pipelines you can reuse in your pipelines&lt;/p&gt;
&lt;p&gt;You can &lt;code&gt;image: uses:sourceURI&lt;/code&gt; notation inside any pipeline file in your &lt;code&gt;.lighthouse/jenkins-x/mypipeline.yaml&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uses:tektoncd/catalog/task/git-clone/0.2/git-clone.yaml@HEAD&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will then include the steps from the &lt;a href=&#34;https://github.com/tektoncd/catalog/blob/master/task/git-clone/0.2/git-clone.yaml&#34;&gt;git-clone.yaml&lt;/a&gt; file&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not just the &lt;a href=&#34;https://github.com/tektoncd/catalog&#34;&gt;Tekton Catalog&lt;/a&gt;  - you can use this same approach to reuse Tasks or steps from any git repository of your choosing; such as the &lt;a href=&#34;https://github.com/jenkins-x/jx3-pipeline-catalog/tree/master/tasks&#34;&gt;Jenkins X Pipeline catalog&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-it-looks&#34;&gt;How it looks&lt;/h2&gt;
&lt;p&gt;So here is an &lt;a href=&#34;https://github.com/jenkins-x/jx3-pipeline-catalog/blob/master/packs/javascript/.lighthouse/jenkins-x/release.yaml&#34;&gt;example release pipeline&lt;/a&gt; generated via the &lt;a href=&#34;https://github.com/jenkins-x/jx3-pipeline-catalog/tree/master/tasks&#34;&gt;Jenkins X Pipeline catalog&lt;/a&gt; if you create a &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/catalog&#34;&gt;JavaScript quickstart&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tekton.dev/v1beta1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;PipelineRun&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;release&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;pipelineSpec&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;tasks&lt;/span&gt;:
    - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;from-build-pack&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;taskSpec&lt;/span&gt;:
        &lt;span style=&#34;color:#f92672&#34;&gt;stepTemplate&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;env&lt;/span&gt;:
          - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;NPM_CONFIG_USERCONFIG&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;value&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/tekton/home/npm/.npmrc&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uses:jenkins-x/jx3-pipeline-catalog/tasks/javascript/release.yaml@versionStream&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;resources&lt;/span&gt;:
            &lt;span style=&#34;color:#f92672&#34;&gt;requests&lt;/span&gt;:
              &lt;span style=&#34;color:#f92672&#34;&gt;cpu&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;400m&lt;/span&gt;
              &lt;span style=&#34;color:#f92672&#34;&gt;memory&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;512Mi&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;volumeMounts&lt;/span&gt;:
          - &lt;span style=&#34;color:#f92672&#34;&gt;mountPath&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/tekton/home/npm&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;npmrc&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;workingDir&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/workspace/source&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
        - &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;next-version&lt;/span&gt;
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-variables&lt;/span&gt;
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;build-npm-install&lt;/span&gt;
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;build-npm-test&lt;/span&gt;
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;check-registry&lt;/span&gt;
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;build-container-build&lt;/span&gt;
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;promote-changelog&lt;/span&gt;
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;promote-helm-release&lt;/span&gt;
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;promote-jx-promote&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;npmrc&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;secret&lt;/span&gt;:
            &lt;span style=&#34;color:#f92672&#34;&gt;optional&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;secretName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;npmrc&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;serviceAccountName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tekton-bot&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;timeout&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;240h0m0s&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can see it mounts an npm secret for using npm package management and specifies CPU and memory requirements. It then is using the &lt;strong&gt;uses:&lt;/strong&gt; notation to inherit a bunch of steps from the &lt;a href=&#34;https://github.com/jenkins-x/jx3-pipeline-catalog/blob/master/tasks/javascript/release.yaml&#34;&gt;jenkins-x/jx3-pipeline-catalog/tasks/javascript/release.yaml&lt;/a&gt; as well as sharing the &lt;a href=&#34;https://github.com/jenkins-x/jx3-pipeline-catalog/blob/master/tasks/git-clone/git-clone.yaml&#34;&gt;jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml&lt;/a&gt; task&lt;/p&gt;
&lt;p&gt;Also notice we don&amp;rsquo;t have to copy and paste the exact details of the images, commands, arguments, environment variables and volume mounts required for each step; we can just reference them via Git. Also each pipeline in each repository can reference different versions if required.&lt;/p&gt;
&lt;h3 id=&#34;customizing-an-inherited-step&#34;&gt;Customizing an inherited step&lt;/h3&gt;
&lt;p&gt;You can edit the step in your &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/#ide-support&#34;&gt;IDE&lt;/a&gt; and add any custom properties such as &lt;code&gt;command&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;, &lt;code&gt;script&lt;/code&gt; or &lt;code&gt;volumeMount&lt;/code&gt; - those values then override the inherited step.&lt;/p&gt;
&lt;p&gt;e.g. you can then change any command line, add an environment variable or add a new volume mount without copy pasting the whole step. e.g. we change the &lt;code&gt;script&lt;/code&gt; value of the &lt;code&gt;jx-variables&lt;/code&gt; step below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tekton.dev/v1beta1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;PipelineRun&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;pipelineSpec&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;tasks&lt;/span&gt;:
    - &lt;span style=&#34;color:#f92672&#34;&gt;taskSpec&lt;/span&gt;:
        &lt;span style=&#34;color:#f92672&#34;&gt;stepTemplate&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;uses:jenkins-x/jx3-pipeline-catalog/tasks/javascript/release.yaml@versionStream&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
        - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jx-variables&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            #!/usr/bin/env sh
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            echo my replacement command script goes here&lt;/span&gt;            
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Any extra properties in the steps are used to override the underlying uses step.&lt;/p&gt;
&lt;h3 id=&#34;inlining-a-pipeline-step-locally&#34;&gt;Inlining a pipeline step locally&lt;/h3&gt;
&lt;p&gt;If you want to edit a step that is inherited from a pipeline catalog just run the &lt;a href=&#34;https://github.com/jenkins-x/jx-pipeline/blob/master/docs/cmd/jx-pipeline_override.md#jx-pipeline-override&#34;&gt;jx pipeline override&lt;/a&gt; command from a clone of your repository.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx pipeline override
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will then prompt you to pick which pipeline and step that&amp;rsquo;s inherited via the &lt;code&gt;image: uses:sourceURI&lt;/code&gt; notation. When chosen the step will be inlined into your local file so you can &lt;a href=&#34;#customizing-an-inherited-step&#34;&gt;edit any of the properties&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can use the git compare to see the changes and remove any properties you don&amp;rsquo;t wish to override.&lt;/p&gt;
&lt;h3 id=&#34;viewing-the-effective-pipeline&#34;&gt;Viewing the effective pipeline&lt;/h3&gt;
&lt;p&gt;To see the actual Tekton pipeline that would be executed from your local source directory you can run the &lt;a href=&#34;https://github.com/jenkins-x/jx-pipeline/blob/master/docs/cmd/jx-pipeline_effective.md#jx-pipeline-effective&#34;&gt;jx pipeline effective&lt;/a&gt; command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx pipeline effective
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to open the effective pipeline in your editor, such as &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;VS Code&lt;/a&gt; you can do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx pipeline effective -e code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you use &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;Intellij&lt;/a&gt; or any of &lt;a href=&#34;https://www.jetbrains.com/products/#type=ide&#34;&gt;JetBrains other IDEs&lt;/a&gt; you can do the following if you have &lt;a href=&#34;https://www.youtube.com/watch?v=SVANj3gAWt8&#34;&gt;enabled&lt;/a&gt; the &lt;code&gt;idea&lt;/code&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=SVANj3gAWt8&#34;&gt;command line tool&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx pipeline effective -e idea
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to always view an effective pipeline in your editor then define the &lt;code&gt;JX_EDITOR&lt;/code&gt; environment variable&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;export JX_EDITOR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;code&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# now we will always open effective pipelines inside VS Code&lt;/span&gt;
jx pipeline effective
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;ve been on our own digital transformation journey in the world of pipelines and used many different approaches over the years to manage many pipelines across many repositories.&lt;/p&gt;
&lt;p&gt;A few months ago we moved to the above GitOps approach for our cloud native pipelines and we are absolutely loving it!&lt;/p&gt;
&lt;p&gt;Its super easy to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;share pipelines across all of your git repositories without copy/paste&lt;/li&gt;
&lt;li&gt;easily customise pipelines in any project and be able to easily understand what the local changes are and roll them back if required&lt;/li&gt;
&lt;li&gt;upgrade pipelines across your repositories in a consistent way as you &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/cluster/&#34;&gt;upgrade your images, applications and cluster via GitOps&lt;/a&gt; so that new versions of pipeline catalogs are upgraded once they pass the system tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are thinking about using cloud native pipelines with &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; please try it out and see what you think. We&amp;rsquo;d love to hear your &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;feedback&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X 3 - February 2021 LTS</title>
      <link>https://jenkins-x.io/blog/2021/02/01/jx3-lts-feb-21/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/02/01/jx3-lts-feb-21/</guid>
      <description>
        
        
        &lt;p&gt;This is the first &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/lts/&#34;&gt;LTS release&lt;/a&gt; for Jenkins X 3.x.  We are  still in the Beta release and the leadup to GA includes ensuring the process for LTS monthly releases is validated and working well.
This first releases focuses on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;community feedback following the Beta release&lt;/li&gt;
&lt;li&gt;general helm chart upgrades&lt;/li&gt;
&lt;li&gt;improved developer UX when editing Tekton pipelines &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/editing&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;support for in-repo and shared Tekton pipeline libraries including git URI support,
e.g.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;uses:jenkins-x/jx3-pipeline-catalog/packs/javascript/.lighthouse/jenkins-x/pullrequest.yaml@v1.2.3&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;more documentation and examples can be found &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/blob/master/docs/pipelines.md#configuring-pipelines&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;whats-the-difference&#34;&gt;What&amp;rsquo;s the difference?&lt;/h2&gt;
&lt;p&gt;Because Jenkins X uses GitOps we can see the git diff of changes that will be brought in with a cluster upgrade.   Here is the Pull Request that has been verified for February LTS release.
&lt;a href=&#34;https://github.com/jenkins-x/jx3-lts-versions/pull/209/files&#34;&gt;https://github.com/jenkins-x/jx3-lts-versions/pull/209/files&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;anything-else-to-be-aware-of&#34;&gt;Anything else to be aware of?&lt;/h2&gt;
&lt;p&gt;Included in the release is a switch of the NGINX Helm chart from the old Helm stable registry.  It was discussed on the community slack that some users on EKS and not using a custom domain had to change the domain in their cluster jx-requirements.yml file.&lt;/p&gt;
&lt;p&gt;The change of Chart repository meant the old resources were removed and new ones added, resulting in a new Kubernetes LoadBalancer service was created, resulting in a new external IP address.  You may need to update the domain in your &lt;code&gt;jx-requirements.yml&lt;/code&gt;.  To get the external IP run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get service -n nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note the external ip address and update your cluster git repository, &lt;code&gt;jx-requirements.yml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;domain: $EXTERNAL_IP_FROM_ABOVE.nip.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git commit
git push
jx admin logs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And you should see the new ingress rules created when the boot job finishes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get ing -n jx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;whats-next&#34;&gt;What&amp;rsquo;s next?&lt;/h1&gt;
&lt;p&gt;March LTS release aims to switch the incluster boot jobs to use &lt;a href=&#34;https://carvel.dev/kapp/&#34;&gt;https://carvel.dev/kapp/&lt;/a&gt; rather than using &lt;code&gt;kubectl&lt;/code&gt; to apply and prune Kubernetes resources.  &lt;code&gt;kapp&lt;/code&gt; is a dependency aware approach to installing Kubernetes resources, this aims to help avoid timing issues when installing resources before certain services like cert-manager are fully up and running.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X 3.x walkthroughs</title>
      <link>https://jenkins-x.io/blog/2021/01/26/jx3-walkthroughs/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/01/26/jx3-walkthroughs/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X 3.x is now looking ahead towards a GA release, with that we are producing walkthroughs for key areas to help users not only get started but get the most out of Jenkins X.&lt;/p&gt;
&lt;p&gt;To kick this off we are going to start with 9 videos that we&amp;rsquo;ll follow up with more dedicated blogs over the coming weeks.  The complete playlist can be found &lt;a href=&#34;https://www.youtube.com/playlist?list=PLr_PmC4W69dKM3fo8OK729fdmX_MTqdHd&#34;&gt;here&lt;/a&gt; however the blog below gives a more context for each one.&lt;/p&gt;
&lt;p&gt;There are a few key areas we are focusing on here:&lt;/p&gt;
&lt;h2 id=&#34;intro--high-level-architecture&#34;&gt;Intro + high level architecture&lt;/h2&gt;
&lt;p&gt;Starting off with a very quick introduction including what to expect from the walkthrough series.&lt;/p&gt;
&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/kDCNDAyqwpo?VQ=HD1080&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Jenkins X 3.x has focussed on clearer lines of separation, making the architecture significantly more pluggable, extensible and maintainable.  With better tooling including UIs and more reliable guard rails for installations and upgrades.  Jenkins X 3 also minimises abstractions and wrapping; so it promotes the direct use of open source projects like Helm, Helmfile and Tekton.&lt;/p&gt;
&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/bVp5_tZ21AA?VQ=HD1080&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h1 id=&#34;installation-and-setup&#34;&gt;Installation and setup&lt;/h1&gt;
&lt;h2 id=&#34;infrastructure-and-provisioning&#34;&gt;Infrastructure and provisioning&lt;/h2&gt;
&lt;p&gt;Decoupling the management of Cloud infrastructure away from Jenkins X to tools that are better suited for the job.  Jenkins X has started with Terraform and this manages all the cloud resources needed by Jenkins X&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes cluster&lt;/li&gt;
&lt;li&gt;Cloud Service Accounts&lt;/li&gt;
&lt;li&gt;IAM bindings&lt;/li&gt;
&lt;li&gt;Storage buckets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Over time Jenkins X plans to support other tools (aided by the &lt;a href=&#34;https://github.com/kubernetes-sigs/cluster-api&#34;&gt;Kubernetes Cluster API&lt;/a&gt;) users in the Kubernetes ecosystem leverage such as &lt;a href=&#34;https://crossplane.io/&#34;&gt;crossplane.io&lt;/a&gt;, &lt;a href=&#34;https://cloud.google.com/config-connector/docs/overview&#34;&gt;Google Config Connector&lt;/a&gt;, &lt;a href=&#34;https://github.com/aws/aws-controllers-k8s&#34;&gt;AWS Controller&lt;/a&gt; etc.  These make use of cloud resources declared as custom resources with a Kubernetes operator managing CRUD activities for them.&lt;/p&gt;
&lt;p&gt;Once the cloud infrastructure is created, self provisioning happens using GitOps and incluster installation.  No more flakey client side installs.&lt;/p&gt;
&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/fKGZrNgs8So?VQ=HD1080&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;tls-and-dns&#34;&gt;TLS and DNS&lt;/h2&gt;
&lt;p&gt;A large number of deployments require inbound traffic, whether that is for access to their applications, websites, REST endpoints, Webhook handlers there is often a need for Ingress HTTP traffic into a cluster and to ensure communication is secure.&lt;/p&gt;
&lt;p&gt;To achieve this there are two common efforts needed&lt;/p&gt;
&lt;p&gt;DNS - configuring a custom owned domain and using DNS to route traffic to endpoints
TLS - providing end to end security for web traffic on the internet&lt;/p&gt;
&lt;p&gt;In fact many web services do not accept working with insecure endpoints and others require manual override to accept the risk before being able to use the service.&lt;/p&gt;
&lt;p&gt;Jenkins X uses two OSS projects to automatically manage DNS (&lt;a href=&#34;https://github.com/kubernetes-sigs/external-dns&#34;&gt;External DNS&lt;/a&gt;) and handle the management of TLS certificates (&lt;a href=&#34;https://cert-manager.io/&#34;&gt;Cert-manager&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Once a domain is owned, External DNS will work with cloud providers to create A records that route traffic from the internet to users clusters.  Cert-manager will react to a request from Jenkins X to verify a cluster owns a domain and will issue a wildcard TLS certificate using Lets Encrypt that is used for all Ingress into the cluster.  Cert-manager will also handle certificate renewals.  This is all handled automatically following the setup of Jenkins X.&lt;/p&gt;
&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/OqsSqZqF0gY?VQ=HD1080&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h1 id=&#34;using-jenkins-x&#34;&gt;Using Jenkins X&lt;/h1&gt;
&lt;h2 id=&#34;gitops&#34;&gt;GitOps&lt;/h2&gt;
&lt;p&gt;Initially started out as an implementation detail of Jenkins X but has evolved much more into an administrators typical workflow.  Managing installs, upgrades and rollbacks via Git provides approvals, reviews, traceability, RBAC in the same way we manage code.  This is the backbone of Jenkins X and provides us with the peace of mind for disaster recovery.&lt;/p&gt;
&lt;p&gt;Jenkins X ships with a git operator which is responsible for applying generated Kubernetes resources which live in the cluster Git repository.  Every application and configuration for the cluster is in this repository.&lt;/p&gt;
&lt;h2 id=&#34;health&#34;&gt;Health&lt;/h2&gt;
&lt;p&gt;In any Kubernetes installation there can be a lot of microservices each with the responsibility to provide functionality that is needed by the overall system.  Understanding when things go wrong and the impact of these issues can be difficult to evaluate.  It is also useful to have a status page of sorts to quickly check the health of your system.&lt;/p&gt;
&lt;p&gt;Jenkins X uses &lt;a href=&#34;https://github.com/Comcast/kuberhealthy&#34;&gt;Kuberhealthy&lt;/a&gt; and a lot of custom health checks to periodically report on the health of a Jenkins X installation.  These custom health checks are easy to extend in any language, already the Jenkins X community has been contributing their own.&lt;/p&gt;
&lt;p&gt;There is a CLI which can be used to query the health report as well and a UI.&lt;/p&gt;
&lt;p&gt;The health statuses can be easily integrated into users operational alerting systems too.&lt;/p&gt;
&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/4wqwulEzseM?VQ=HD1080&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;extending-pipelines&#34;&gt;Extending pipelines&lt;/h2&gt;
&lt;p&gt;Jenkins X uses vanilla Tekton pipeline resources and has deprecated the v2 &lt;code&gt;jenkins-x.yml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We will show a demo shortly of working with Tekton pipelines and inheriting shared Tasks but for now we can see it is easy using Lighthouse to trigger shared Pipelines from a git repository.  The demo uses the old favorite from the Jenkins project Chuck Norris, only here we are invoking a cloud native pipeline to comment with the joke on a Pull Request.&lt;/p&gt;
&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/cJcwV4jgE0Y?VQ=HD1080&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;secrets&#34;&gt;Secrets&lt;/h2&gt;
&lt;p&gt;Secrets management stores (e.g. AWS Secrets Manager, Hashicorp Vault, Google Secrets Manager) have gained popularity from both Administrators and Developers.  Having a single source of truth for a secret is extremely useful especially when obtaining and changing values, some solutions even offer automatic secret rotation.&lt;/p&gt;
&lt;p&gt;With GitOps as described above we need a way to inject real secrets into a cluster rather than storing them in Git.&lt;/p&gt;
&lt;p&gt;Jenkins X uses &lt;a href=&#34;https://github.com/external-secrets/kubernetes-external-secrets&#34;&gt;External Secrets&lt;/a&gt; from which runs as a Kubernetes controller, using a Kubernetes Custom Resource it knows how to automatically map values from a Secret Management Store into Kubernetes Secrets.  This makes it easy for applications to leverage GitOps while keeping the benefits of using a secrets management solution.&lt;/p&gt;
&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/_gjGfwlxEY4?VQ=HD1080&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;upgrades&#34;&gt;Upgrades&lt;/h2&gt;
&lt;p&gt;Jenkins X now uses GitOps for the whole cluster, one repository keeps all applications and configurations that should be applied to a cluster.  This cluster repository also includes a copy of the version stream mentioned below.  Jenkins X uses a tool called &lt;a href=&#34;https://github.com/GoogleContainerTools/kpt&#34;&gt;kpt&lt;/a&gt; which reliable syncrosises released version configuration into their own repository that can then be committed and applied to your cluster.&lt;/p&gt;
&lt;h2 id=&#34;version-streams&#34;&gt;Version Streams&lt;/h2&gt;
&lt;p&gt;The world of continuous delivery can bring challenges.  One of the biggest challenges Jenkins X itself had while embracing CD was how people handle receiving constant change via releases.&lt;/p&gt;
&lt;p&gt;Some people wanted to live on the bleeding edge, receiving fixes, improvements and new features as fast as possible so they can help provide feedback and continually improve.  Others had more stable requirements which expect more mature features along with corresponding complete documentation that gave better confidence an upgrade will not cause any adverse effects.&lt;/p&gt;
&lt;p&gt;Jenkins X has had the concept of version streams which allows the project to collect a number of helm charts, CLI, Docker image version changes together, run further automated testing and release together for users to consume in an upgrade.  This acts as a quality gate.&lt;/p&gt;
&lt;p&gt;For Jenkins X 3 we have extended this to include a second version stream which gets automatically updated via a Pull Request however that is merged on a slower cadence to cater for users that want greater confidence in the release.  We call this the &lt;a href=&#34;https://jenkins-x.io/v3/guides/upgrades/lts&#34;&gt;Long Term Support (LTS) version stream&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Users can decide which version stream to track or even use a custom one that they maintain themselves.&lt;/p&gt;
&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/9ZaqdwD3cTs?VQ=HD1080&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;cluster-recovery&#34;&gt;Cluster recovery&lt;/h2&gt;
&lt;p&gt;Clusters can be recreated if they move regions, are accidentally deleted or part of intentional housekeeping to continually verify disaster recovery processes.&lt;/p&gt;
&lt;p&gt;Because Jenkins X uses Terraform for infrastructure checked into Git and a another Git repository specifically for the cluster, it means we can recreate a cluster and resume all services with very little manual intervention.  This video deletes and recovers a cluster on GCP using Jenkins X.&lt;/p&gt;
&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/2QgX3cn0GqU?VQ=HD1080&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: New features in the pipelines visualizer UI</title>
      <link>https://jenkins-x.io/blog/2021/01/18/jx-pipelines-visualizer-v1/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2021/01/18/jx-pipelines-visualizer-v1/</guid>
      <description>
        
        
        &lt;p&gt;The &lt;a href=&#34;https://github.com/jenkins-x/jx-pipelines-visualizer&#34;&gt;Jenkins X Pipelines Visualizer UI&lt;/a&gt; has recently received a number of new features, so let&amp;rsquo;s do a little tour of these new features!&lt;/p&gt;
&lt;h2 id=&#34;pipeline-view&#34;&gt;Pipeline View&lt;/h2&gt;
&lt;p&gt;When viewing a pipeline, the biggest new feature is the &lt;strong&gt;collapsed logs&lt;/strong&gt;. No more hundreds - or thousands - of log lines, we now group the logs per-container (step), which are collapsed by default. Along with the status of the step and its duration, so it&amp;rsquo;s easier to go to the interesting part of the logs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/jx-pipelines-visualizer/v1-pipeline-success.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Clicking on a log line will expand the logs for this specific container. You can also use the &amp;ldquo;Toggle Steps&amp;rdquo; button to expand/collapse the logs for all the steps at once.&lt;/p&gt;
&lt;p&gt;While we&amp;rsquo;re talking about the logs, you can notice the 2 new buttons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;View raw logs&lt;/li&gt;
&lt;li&gt;Download raw logs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On top of the logs, we now display some information about the pipeline:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the pipeline &lt;strong&gt;meta information&lt;/strong&gt;: name, context, build, and a link to see the raw YAML representation of the pipeline&lt;/li&gt;
&lt;li&gt;the pipeline &lt;strong&gt;status&lt;/strong&gt;: status, started/finished date/time, and duration&lt;/li&gt;
&lt;li&gt;the pipeline &lt;strong&gt;source&lt;/strong&gt;: git repository, pull request or branch, commit SHA, author&lt;/li&gt;
&lt;li&gt;the pipeline &lt;strong&gt;stages&lt;/strong&gt;, with links to see the timeline of the steps in each stage. You can also click on the &amp;ldquo;Show Timeline&amp;rdquo; button to view the pipeline timeline with all stages and steps.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;strong&gt;pipeline timeline&lt;/strong&gt; has been improved to include all the steps for all stages, but it is currently hidden by default - to avoid using too much space. Clicking on a stage will bring you to the steps, and clicking on a step will bring you to the logs for this step.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/jx-pipelines-visualizer/v1-pipeline-success-with-timeline.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note that for a pipeline which includes a deployment to a Preview Environment, the UI will also display a link to the application&amp;rsquo;s URL in that specific Preview Environment.&lt;/p&gt;
&lt;h2 id=&#34;homepage&#34;&gt;Homepage&lt;/h2&gt;
&lt;p&gt;The homepage got some love too, with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a few stats about the pipelines: top statuses, repositories, authors and durations - with links to filter the pipelines&lt;/li&gt;
&lt;li&gt;direct links to the git repositories and pull requests&lt;/li&gt;
&lt;li&gt;the Jenkins X logo&lt;/li&gt;
&lt;li&gt;and a favicon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/jx-pipelines-visualizer/v1-home.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;roadmap&#34;&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;We started this project at v0, and we believe that now it has enough features to be a v1!&lt;/p&gt;
&lt;p&gt;On our roadmap - without any specific order - we have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx-pipelines-visualizer/issues/73&#34;&gt;#73&lt;/a&gt; &lt;strong&gt;live refresh of a running pipeline&lt;/strong&gt; - for now only the logs are updated live, not the meta information of the pipeline (status, stages/steps timings)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx-pipelines-visualizer/issues/42&#34;&gt;#42&lt;/a&gt; &lt;strong&gt;support local timezone&lt;/strong&gt; - for now everything is in UTC&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;improve the support for archived pipelines&lt;/strong&gt;: load pipelines archived in the long-term storage&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;contributing&#34;&gt;Contributing&lt;/h3&gt;
&lt;p&gt;Thanks to all the contributors!&lt;/p&gt;
&lt;p&gt;All contributions are welcomed, the source code is: &lt;a href=&#34;https://github.com/jenkins-x/jx-pipelines-visualizer&#34;&gt;github.com/jenkins-x/jx-pipelines-visualizer&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X 3.x beta is here!</title>
      <link>https://jenkins-x.io/blog/2020/12/09/jx-v3-beta/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/12/09/jx-v3-beta/</guid>
      <description>
        
        
        &lt;p&gt;I&amp;rsquo;m super excited to announce the 3.0 beta of Jenkins X! Christmas has come early this year!&lt;/p&gt;
&lt;img width=&#34;387px&#34; src=&#34;https://jenkins-x.io/images/jxxx.png&#34;&gt;
&lt;p&gt;the main documentation of the changes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/about/overview/&#34;&gt;the new architecture&lt;/a&gt; with modular plugins and improved &lt;a href=&#34;https://jenkins-x.io/v3/about/extending/&#34;&gt;extension points&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/about/changes/&#34;&gt;what has changed since 3.x started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/about/comparison/&#34;&gt;how 3.x compares to 2.x&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;but here&amp;rsquo;s a brief summary of the differences:&lt;/p&gt;
&lt;h3 id=&#34;user-changes&#34;&gt;User Changes&lt;/h3&gt;
&lt;p&gt;As a user the high level UX of Jenkins X is similar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#automated-pipelines&#34;&gt;automated Continuous Delivery pipelines&lt;/a&gt; for using &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/&#34;&gt;tekton&lt;/a&gt; for your repositories with &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#promotion&#34;&gt;automatic promotion&lt;/a&gt; between your &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pull requests on your repositories create separate &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#preview-environments&#34;&gt;Preview Environments&lt;/a&gt; where your team can review your changes and give fast feedback before your changes are approved and merged into the main trunk.&lt;/li&gt;
&lt;/ul&gt;
&lt;img width=&#34;600&#34; src=&#34;https://jenkins-x.io/images/pr-comment.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;h4 id=&#34;new-features&#34;&gt;New features&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;we now default to &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/#source-changes&#34;&gt;vanilla tekton YAML for defining pipelines&lt;/a&gt; while &lt;a href=&#34;https://jenkins-x.io/blog/2020/11/11/accelerate-tekton/&#34;&gt;accelerating your tekton&lt;/a&gt; with &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/#adding-tasks-from-the-tekton-catalog&#34;&gt;tekton catalog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;we include an open source &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/dashboard/&#34;&gt;dashboard&lt;/a&gt; for visualising pipelines and logs which you can invoke via:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx dash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;we have a full &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/octant/&#34;&gt;Kubernetes and Jenkins X console&lt;/a&gt; based on the excellent &lt;a href=&#34;https://octant.dev/&#34;&gt;octant&lt;/a&gt; which you can try out via:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx ui
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;iframe width=&#34;600&#34; height=&#34;300&#34; src=&#34;https://www.youtube.com/embed/2LCPHi0BnUg&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;platform-changes&#34;&gt;Platform Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;we now use &lt;a href=&#34;https://helm.sh/&#34;&gt;helm&lt;/a&gt; (3.x) and &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt; along with optionally &lt;a href=&#34;https://kustomize.io/&#34;&gt;kustomize&lt;/a&gt; in a GitOps style to define and configure both Jenkins X itself, your tools and applications in any namespace&lt;/li&gt;
&lt;li&gt;support &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/multi-cluster/&#34;&gt;multi cluster&lt;/a&gt; out of the box so you can keep &lt;code&gt;Staging&lt;/code&gt; and &lt;code&gt;Production&lt;/code&gt; in separate clusters to your development cluster where your pipelines run, you create and release immutable container images and other artifacts.&lt;/li&gt;
&lt;li&gt;to &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;setup or upgrade&lt;/a&gt; Jenkins X we use &lt;a href=&#34;https://www.terraform.io/&#34;&gt;terraform&lt;/a&gt; to setup your cloud resources on &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/azure/&#34;&gt;Azure&lt;/a&gt;, &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/eks/&#34;&gt;Amazon&lt;/a&gt; or &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/google/&#34;&gt;Google&lt;/a&gt; while also supporting on-premises, minkube and OpenShift - see the &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;Admin Guides&lt;/a&gt; for more detail
&lt;ul&gt;
&lt;li&gt;the actual installation of kubernetes resources takes place using the &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/operator/&#34;&gt;git operator&lt;/a&gt; so it runs reliably inside the cluster itself&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;we default to using &lt;a href=&#34;https://github.com/external-secrets/kubernetes-external-secrets&#34;&gt;Kubernetes External Secrets&lt;/a&gt; to manage all secrets for Jenkins X itself, development tools and your applications too.
&lt;ul&gt;
&lt;li&gt;This means we can support various secret backends such as Alibaba Cloud KMS Secret Manager, Amazon Secret Manager, Azure Key Vault, Hashicorp Vault or GCP Secret Manager&lt;/li&gt;
&lt;li&gt;It also means we can then check in all kubernetes resources and custom resources directly into git (apart from Kubernetes &lt;code&gt;Secrets&lt;/code&gt;) so that it super easy to version, review and reason about your kubernetes resources in a GitOps way.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;built in &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/tls_dns/&#34;&gt;TLS and DNS&lt;/a&gt; support along with &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/health/&#34;&gt;Heath&lt;/a&gt; reporting and visualising via &lt;a href=&#34;https://github.com/Comcast/kuberhealthy&#34;&gt;kuberhealthy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;we now have an &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/lts/&#34;&gt;LTS distribution&lt;/a&gt; which lets you switch to a much more slower cadence of releases of Jenkins X&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have been using Jenkins X 3.x in production now for many months (for CI/CD of all of the &lt;a href=&#34;https://jenkins-x.io/v3/about/overview/source/&#34;&gt;3.x codebase&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/upgrades/&#34;&gt;continuously upgrading our cluster in the standard way&lt;/a&gt; and it&amp;rsquo;s been much simpler and easier to use, operate and configure.&lt;/p&gt;
&lt;p&gt;In general Jenkins X 3.x is now much simpler and more flexible. It supports &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;lots more platforms than before&lt;/a&gt; and should be easy to extend and configure for other platforms too.&lt;/p&gt;
&lt;div class=&#34;row&#34;&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;p class=&#34;card-text text-center&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/eks/&#34; title=&#34;setup Jenkins X on Amazon cloud with EKS&#34;&gt;
            &lt;img alt=&#34;Amazon&#34; src=&#34;https://jenkins-x.io/images/logo/aws.svg&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;p class=&#34;card-text text-center&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/azure/&#34; title=&#34;setup Jenkins X on Azure cloud with AKS&#34;&gt;
            &lt;img alt=&#34;Azure&#34; src=&#34;https://jenkins-x.io/images/logo/azure.svg&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;p class=&#34;card-text text-center&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/gke/&#34; title=&#34;setup Jenkins X on Google Cloud with GKE&#34;&gt;
            &lt;img alt=&#34;Google&#34; src=&#34;https://jenkins-x.io/images/logo/gcp.svg&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&#34;row pt-4&#34;&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;p class=&#34;card-text text-center&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/on-premises/&#34; title=&#34;setup Jenkins X on any Kubernetes cluster without cloud resources&#34;&gt;
            &lt;img alt=&#34;On-Premises&#34; src=&#34;https://jenkins-x.io/images/logo/k8s.svg&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;p class=&#34;card-text text-center&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/minikube/&#34; title=&#34;setup Jenkins X on your laptop&#34;&gt;
            &lt;img alt=&#34;Minkube&#34; src=&#34;https://jenkins-x.io/images/logo/minikube.svg&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;col-sm-4&#34;&gt;
    &lt;div class=&#34;card text-center align-center h-100&#34;&gt;
      &lt;div class=&#34;card-body align-center&#34;&gt;
        &lt;h1 class=&#34;card-title&#34;&gt;
          &lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/openshift/&#34; title=&#34;setup Jenkins X on OpenShift&#34;&gt;
            &lt;img width=&#34;397&#34; height=&#34;66&#34; alt=&#34;OpenShift&#34; src=&#34;https://jenkins-x.io/images/logo/openshift.png&#34; style=&#34;float: none;&#34;/&gt;
          &lt;/a&gt;
        &lt;/h1&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h3 id=&#34;getting-started&#34;&gt;Getting started&lt;/h3&gt;
&lt;p&gt;If you have never tried &lt;a href=&#34;https://jenkins-x.io/v3/about/&#34;&gt;3.x&lt;/a&gt; before then please follow the &lt;a href=&#34;https://jenkins-x.io/v3/admin/&#34;&gt;Admin Guide&lt;/a&gt; to get Jenkins X installed on your cloud provider, on-premises kubernetes cluster or minikube.&lt;/p&gt;
&lt;p&gt;If you previously tried the 3.x alpha then the &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/migrate/v3-alpha/&#34;&gt;migration instructions are here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For folks on older 2.x versions of Jenkins X please see &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/migrate/v2/&#34;&gt;the 2.x migration instructions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once your cluster has been installed or migrated then check out the &lt;a href=&#34;https://jenkins-x.io/v3/develop/&#34;&gt;User Guide&lt;/a&gt; on how to develop software continuously with Jenkins X.&lt;/p&gt;
&lt;h3 id=&#34;final-thoughts&#34;&gt;Final thoughts&lt;/h3&gt;
&lt;p&gt;A huge thanks goes out to all the &lt;a href=&#34;https://jenkins-x.io/community/#contributors&#34;&gt;contributors&lt;/a&gt;, folks in the &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;Jenkins X community&lt;/a&gt; and the &lt;a href=&#34;https://jenkins-x.io/v3/about/overview/projects/&#34;&gt;community around all the open source projects we reuse&lt;/a&gt; who&amp;rsquo;ve helped get this beta together. The improvements in Jenkins X 3.x since 2.x are totally amazing, well done everyone!&lt;/p&gt;
&lt;p&gt;Please give Jenkins X a try and &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;let us know what you think&lt;/a&gt; or &lt;a href=&#34;https://github.com/jenkins-x/issues&#34;&gt;raise an issue&lt;/a&gt;. All feedback highly appreciated - particularly how we can keep improving to help you develop faster.&lt;/p&gt;
&lt;p&gt;If you are at all interested in Continuous Delivery with kubernetes using &lt;a href=&#34;https://jenkins-x.io/v3/about/overview/projects/&#34;&gt;tools&lt;/a&gt; like &lt;a href=&#34;https://helm.sh/&#34;&gt;helm&lt;/a&gt;, &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt;, &lt;a href=&#34;https://knative.dev/&#34;&gt;knative&lt;/a&gt;,  &lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;lighthouse&lt;/a&gt; and last but definitely not least, &lt;a href=&#34;https://github.com/tektoncd/cli&#34;&gt;tekton&lt;/a&gt;  then please join the &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;community&lt;/a&gt; - its great fun!&lt;/p&gt;
&lt;p&gt;I hope you have a great break over the holiday season and 2021 is a little better and more fun than 2020!&lt;/p&gt;
&lt;p&gt;For any questions and feedback please reach out on slack &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;https://jenkins-x.io/community/#slack&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X 3.x - beta is close!</title>
      <link>https://jenkins-x.io/blog/2020/12/04/jx-v3-update/</link>
      <pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/12/04/jx-v3-update/</guid>
      <description>
        
        
        &lt;p&gt;It has been &amp;lsquo;all hands on deck&amp;rsquo; in recent months with the focus on Jenkins X 3 alpha.  First off a huge thankyou to everyone involved.  The OSS community spirit has really shone through what has been a very difficult year for everyone.  Knowing that people from all over the world come and help each other, share banter and work at all hours of the day to help build out a true open source cloud native continuous delivery solution for developers - it&amp;rsquo;s quite fantastic to see and amazing to be apart of.&lt;/p&gt;
&lt;p&gt;As a result of all this hard work the Beta is iminent so this is a good opportunity to thank all involved so far and to outline what to expect in the coming days.&lt;/p&gt;
&lt;p&gt;While we&amp;rsquo;ve been in the Alpha phase it has provided us with the opportunity to deprecate and remove APIs, commands and obsolete features that existed in v2.  This means we will not have any code dependency on the v2 codebase and so going forward v3 will be easier to maintain without the tech debt.&lt;/p&gt;
&lt;p&gt;With that, we aim to make a big push and roll out a few last changes in preparation for Beta, here&amp;rsquo;s a couple you will notice if you are already on the Alpha.  We recommend taking time to understand these, and avoid upgrading for a few days so that changes can be handled in one go, as there will be a constant stream of larger updates happening:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jx requirements - this is the yaml file used to describe install needs for Jenkins X, until now there have been options available that were unsupported, confusing and in some cases did nothing.  These have now all been removed and the structure of the file has changed to be CRD like including an API version.  Upon upgrade &lt;code&gt;jx gitops upgrade&lt;/code&gt; will migrate your &lt;code&gt;jx-requirements.yml&lt;/code&gt; and push the changes back to the cluster gitops repository.  You should not see any errors however there are some pipeline steps that need to be updated in order to work with the new structure, this is covered next.&lt;/li&gt;
&lt;li&gt;pipeline catalog - currently Jenkins X 3.x defaults to in-repo pipelines where your Tekton resources are managed by kpt, these will need to be updated to work with the new or old requirements described above.  This means you will also need to run &lt;code&gt;jx gitops upgrade&lt;/code&gt; in each your application git repos.  In the near future Jenkins X 3.x will make it easy to work with shared pipeline libraries / catalog repositories, referencing them via URL rather than in-repo.  This is so that users have the flexibility to choose which option is best for your use case.  In-repo pipelines and shared pipeline libraries have pros and cons for each, mainly about maintaining changes.  But for now, you will need to upgrade each application git repository.&lt;/li&gt;
&lt;li&gt;nested helmfiles - this is a great feature from Chris Mellard which will be merged very soon.  The idea is that your cluster git repository will have support for multiple helmfiles, ones that will contain core Jenkins X charts and maintained by kpt via the &lt;code&gt;jx gitops upgrade&lt;/code&gt; process, and others where you can add your own charts rather than extending the single helmfile that is there today.&lt;/li&gt;
&lt;li&gt;nginx - for the alpha we have upgraded all the core helm charts we ship in a base Jenkins X installation, the last to land is Nginx thanks to Ankit!  This is not expected to cause issues however the change does involve moving to a different chart, there is a risk that there may be some very small window of downtime for the ingress controller so webhooks fired during the upgrade may fail to be delivered.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Balancing upgrades with continuous delivery brings many challenges.  However with Kubernetes, GitOps, Jenkins X version streams (including the monthly LTS coming soon) and other tools like kpt makes the process more transparent and provides a greater level of high availability.&lt;/p&gt;
&lt;p&gt;Jenkins X automatically upgrades its own infrastructure with every version stream release and we haven&amp;rsquo;t experienced any disruption during the alpha period so far.  We aim to continue this, but when we know there will be disruption we endeavour to inform and explain why ahead of time.&lt;/p&gt;
&lt;p&gt;Keep an eye out for announcements of the Beta and thanks again to all involved in the community and we are very much looking forward to welcoming new people too.  We are very excited for the Beta release and given the feedback so far we understand users are too.&lt;/p&gt;
&lt;p&gt;For any questions and feedback please reach out on slack &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;https://jenkins-x.io/community/#slack&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Accelerate your Tekton with Jenkins X</title>
      <link>https://jenkins-x.io/blog/2020/11/11/accelerate-tekton/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/11/11/accelerate-tekton/</guid>
      <description>
        
        
        &lt;p&gt;One of the goals of &lt;a href=&#34;https://jenkins-x.io/&#34;&gt;Jenkins X&lt;/a&gt; has always been to help &lt;a href=&#34;https://jenkins-x.io/about/overview/accelerate/&#34;&gt;accelerate&lt;/a&gt; and automate Continuous Delivery so that developers can focus on delivering value to their customers; either by creating that new microservice or adding features to an existing project and not writing and managing pipelines.&lt;/p&gt;
&lt;p&gt;Pipeline engines like &lt;a href=&#34;https://www.jenkins.io/&#34;&gt;Jenkins&lt;/a&gt; and &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; are awesome - they can do anything! But they start as a blank sheet of paper where you have to fill in all the details of how to compile your code, test it, verify it, tag it, release, distribute and delivery it to production. Figuring all that stuff out can take a huge amount of time to create and maintain. This gets even more complex as we are all creating more and more microservices each with their own pipelines making more and more things to create and manage.&lt;/p&gt;
&lt;p&gt;We want to be able to reuse pipelines and tasks to get work done. But at the same time we want flexibility; not all applications are the same and sometimes things need to be changed on a per team or application basis.&lt;/p&gt;
&lt;h2 id=&#34;version-2x&#34;&gt;Version 2.x&lt;/h2&gt;
&lt;p&gt;In Jenkins X 2.x we went with a &lt;code&gt;jenkins-x.xml&lt;/code&gt; approach to pipelines which let you inherit pipelines from reuable pipeline library and then use a composition DSL above &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; which lets you add/remove/replace steps.&lt;/p&gt;
&lt;p&gt;e.g. to use the &lt;code&gt;javascript&lt;/code&gt; pipeline library but override a step you could use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;buildPack&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;javascript&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;pipelineConfig&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;pipelines&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;overrides&lt;/span&gt;:
      - &lt;span style=&#34;color:#f92672&#34;&gt;pipeline&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;release&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;helm-release&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;step&lt;/span&gt;: 
          &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;busybox&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;sh&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;echo &amp;#34;this command is replaced&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This was a pretty good approach; it lets us reuse common pipelines in a shared git repository and let&amp;rsquo;s reuse a composition DSL.&lt;/p&gt;
&lt;p&gt;However we&amp;rsquo;ve found that this approach as a few downsides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we have to create and maintain a DSL above Tekton which adds complexity and can be a leaky abstraction
&lt;ul&gt;
&lt;li&gt;e.g. the DSL does not yet support all of the semantics of Tekton yet such as conditions, &lt;a href=&#34;https://github.com/tektoncd/pipeline/blob/master/docs/pipelines.md#using-the-runafter-parameter&#34;&gt;runAfter&lt;/a&gt; or &lt;a href=&#34;https://github.com/tektoncd/pipeline/blob/master/docs/pipelines.md#adding-finally-to-the-pipeline&#34;&gt;finally tasks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tekton moves fast; it&amp;rsquo;s hard to keep up in a DSL ;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;its complex trying to understand how to make local modifications of pipelines
&lt;ul&gt;
&lt;li&gt;particularly if you just want to add an environment variable; modify a command line argument or something&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;we can&amp;rsquo;t use &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/#ide-support&#34;&gt;IDE tooling&lt;/a&gt; for &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; to edit/visualise pipelines&lt;/li&gt;
&lt;li&gt;we can&amp;rsquo;t reuse &lt;a href=&#34;https://github.com/tektoncd/catalog&#34;&gt;Tekton Catalog tasks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;vision&#34;&gt;Vision&lt;/h2&gt;
&lt;p&gt;We want developers to have reusable pipelines for all their applications lifecycles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;continuous integration&lt;/li&gt;
&lt;li&gt;verification, testing, linting&lt;/li&gt;
&lt;li&gt;releasing, packaging, promoting, deploying&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also want to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;automate the generation of pipelines so most of the time developers don&amp;rsquo;t need to care about pipelines&lt;/li&gt;
&lt;li&gt;reuse pipelines across applications
&lt;ul&gt;
&lt;li&gt;usually all, say, spring boot microservices tend to be built and released in the same way&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;make it easy for developers to view/edit the pipelines if required
&lt;ul&gt;
&lt;li&gt;maintain those changes over time as everything in the cloud native ecosystem is changing all the time&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From a technical perspective:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we believe &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; is currently the best cloud native standard way to represent pipelines and tasks for Continuous Delivery and we want that to be the primary DSL for developers and tools&lt;/li&gt;
&lt;li&gt;we want to work with the &lt;a href=&#34;https://github.com/tektoncd/catalog&#34;&gt;Tekton Catalog&lt;/a&gt; so its easy to share tasks among teams&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;version-3x&#34;&gt;Version 3.x&lt;/h2&gt;
&lt;p&gt;For &lt;a href=&#34;https://jenkins-x.io/v3/&#34;&gt;Jenkins X 3.x&lt;/a&gt; we really wanted to move closer to this vision: to &lt;em&gt;accelerate&lt;/em&gt; the adoption of Tekton and help give developers Tekton super powers.&lt;/p&gt;
&lt;p&gt;Re-reading &lt;a href=&#34;https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/declarative-application-management.md&#34;&gt;Brian Grant&amp;rsquo;s document on Declarative application management in Kubernetes&lt;/a&gt; really got us thinking about this problem of how to reuse complex YAML files for pipelines and tasks while also allowing local modifications while also avoiding a complex leaky DSL for composition.&lt;/p&gt;
&lt;p&gt;Then we tried out &lt;a href=&#34;https://googlecontainertools.github.io/kpt/&#34;&gt;kpt&lt;/a&gt; (pronounced &lt;code&gt;kept&lt;/code&gt;) and everything fell into place pretty quickly.&lt;/p&gt;
&lt;h3 id=&#34;using-tekton-in-your-repository&#34;&gt;Using Tekton in your repository&lt;/h3&gt;
&lt;p&gt;When you &lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/#create-a-new-project-from-a-quickstart&#34;&gt;create a new quickstart&lt;/a&gt; or &lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/#import-an-existing-project&#34;&gt;import a repository&lt;/a&gt; into &lt;a href=&#34;https://jenkins-x.io/v3/&#34;&gt;Jenkins X 3.x&lt;/a&gt; you get a new folder: &lt;strong&gt;.lighthouse/jenkins-x&lt;/strong&gt; added to your source code which contains the Tekton pipeline files you need for your application.&lt;/p&gt;
&lt;p&gt;So for a typical application the &lt;strong&gt;.lighthouse/jenkins-x&lt;/strong&gt; folder will contain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;release.yaml&lt;/strong&gt; the Tekton &lt;code&gt;PipelineRun&lt;/code&gt; for releasing your application&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pullrequest.yaml&lt;/strong&gt; the Tekton &lt;code&gt;PipelineRun&lt;/code&gt; for perform continuous integration testing, verification and the creation of a Preview Environment for your proposed changes before they merge to the main branch&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;triggers.yaml&lt;/strong&gt; to define the &lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;lighthouse&lt;/a&gt; &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/blob/master/docs/trigger/github-com-jenkins-x-lighthouse-pkg-triggerconfig.md#Config&#34;&gt;TriggerConfig&lt;/a&gt; which defines the &lt;a href=&#34;https://jenkins-x.io/docs/resources/faq/using/chatops/#what-is-chatops&#34;&gt;ChatOps&lt;/a&gt; and triggering configuration via a &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/blob/master/docs/trigger/github-com-jenkins-x-lighthouse-pkg-triggerconfig.md#ConfigSpec&#34;&gt;spec field&lt;/a&gt; which defines &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/blob/master/docs/trigger/github-com-jenkins-x-lighthouse-pkg-config-job.md#Presubmit&#34;&gt;presubmits&lt;/a&gt; and &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/blob/master/docs/trigger/github-com-jenkins-x-lighthouse-pkg-config-job.md#Postsubmit&#34;&gt;postsubmits&lt;/a&gt; (i.e. Pull Request and Release triggers).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/&#34;&gt;Pipeline Catalog documentation&lt;/a&gt; for more details on how this works and go to the &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/#reference-guide&#34;&gt;reference guide&lt;/a&gt; if you want to dive into the details.&lt;/p&gt;
&lt;p&gt;As a developer you can mostly ignore the &lt;code&gt;.lighthouse&lt;/code&gt; folder if you don&amp;rsquo;t care about how the pipelines work. If you are interested you can look inside.&lt;/p&gt;
&lt;p&gt;If you need to modify anything, just open the Tekton files in your &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/#ide-support&#34;&gt;IDE&lt;/a&gt; and modify them. No complex DSL to understand other than Tekton itself. Then the changes will be used when you submit your local changes via a Pull Request (for the pull request pipeline) or they get merged to the main branch (for release pipeline changes).&lt;/p&gt;
&lt;p&gt;To handle change going forward from upstream pipeline catalogs while preserving any local modifications we use a generic &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/#upgrading-pipelines-and-helm-charts&#34;&gt;update mechanism on all git repositories&lt;/a&gt; which is powered by &lt;a href=&#34;https://googlecontainertools.github.io/kpt/&#34;&gt;kpt&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;reusing-tekton-catalog-tasks&#34;&gt;Reusing Tekton Catalog Tasks&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/tektoncd/catalog&#34;&gt;Tekton Catalog&lt;/a&gt; contains a ton of reusable Tekton &lt;code&gt;Tasks&lt;/code&gt; for doing all kinds of things in the Continuous Delivery landscape with a variety of tools.&lt;/p&gt;
&lt;p&gt;We want to make it super easy for you to reuse any of them easily in your project.&lt;/p&gt;
&lt;p&gt;So now the new &lt;a href=&#34;https://github.com/jenkins-x/jx-pipeline/blob/master/docs/cmd/jx-pipeline_import.md&#34;&gt;jx pipeline import&lt;/a&gt; command can be used to import &lt;code&gt;Task&lt;/code&gt; resources from the &lt;a href=&#34;https://github.com/tektoncd/catalog&#34;&gt;Tekton Catalog&lt;/a&gt; so you can use them inside your project.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a &lt;a href=&#34;https://asciinema.org/a/368282&#34;&gt;demo of this in action&lt;/a&gt;:&lt;/p&gt;
&lt;script src=&#34;https://asciinema.org/a/368282.js&#34; id=&#34;asciicast-368282&#34; async&gt;&lt;/script&gt;
&lt;p&gt;The tekton Task resources are copied into your &lt;strong&gt;.lighthouse&lt;/strong&gt; directory in a folder using &lt;a href=&#34;https://googlecontainertools.github.io/kpt/&#34;&gt;kpt&lt;/a&gt; so that you can modify things locally if you need to and can &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipeline-catalog/#upgrading-pipelines-and-helm-charts&#34;&gt;upgrade your local copy with upstream changes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This lets you work with shared resources from the Tekton community and, when required, modify them to suit and manage them easily over time.&lt;/p&gt;
&lt;h3 id=&#34;sharing-steps-between-tasks&#34;&gt;Sharing steps between Tasks&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; makes it super easy to share &lt;code&gt;Task&lt;/code&gt; resources between different &lt;code&gt;Pipeline&lt;/code&gt; instances. Though there is a current &lt;a href=&#34;https://github.com/tektoncd/pipeline/issues/3476&#34;&gt;limitation&lt;/a&gt; where splitting a &lt;code&gt;Pipeline&lt;/code&gt; into multiple reusable &lt;code&gt;Task&lt;/code&gt; instances results in the pipeline being split among multiple &lt;code&gt;Pod&lt;/code&gt; resources; which means to share state between the Tasks you need to use a &lt;code&gt;Persistent Volume&lt;/code&gt; for each pipeline run which can be a bit of an overhead.&lt;/p&gt;
&lt;p&gt;For example: you may think it&amp;rsquo;s a nice idea to have a reusable &lt;code&gt;Task&lt;/code&gt; to git clone your source code then use it with your other &lt;code&gt;Task&lt;/code&gt; to run your tests. It turns out that can be quite expensive infrastructure wise; as it means your cluster will end up making a Persistent Volume for each pipeline invocation so that the git clone pod can clone git and store the state on the PV so that your real Task pod can start and mount the same volume to see the contents of git. Its much easier to just share the git clone steps in each Task; so that there&amp;rsquo;s no need for the PV; just git clone in each separate Task directly.&lt;/p&gt;
&lt;p&gt;So for cases where you want to reuse a collection of steps inside &lt;code&gt;Task&lt;/code&gt; resources we added an annotation in &lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;lighthouse&lt;/a&gt; so that we can import steps from a URL to avoid the copy/paste.&lt;/p&gt;
&lt;p&gt;e.g. in our &lt;a href=&#34;https://github.com/jenkins-x/jx3-pipeline-catalog/tree/master/packs&#34;&gt;pipeline catalog&lt;/a&gt; we use this approach to share the git clone Task steps such as &lt;a href=&#34;https://github.com/jenkins-x/jx3-pipeline-catalog/blob/master/packs/javascript/.lighthouse/jenkins-x/release.yaml#L4-L5&#34;&gt;this example&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tekton.dev/v1beta1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Task&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;annotations&lt;/span&gt;:        
    &lt;span style=&#34;color:#75715e&#34;&gt;# lets share the git clone tasks as the initial steps in this Task&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;lighthouse.jenkins-x.io/prependStepsURL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://raw.githubusercontent.com/jenkins-x/jx3-pipeline-catalog/005e78cf69b643862344397a635736a51dd1bd89/tasks/git-clone/git-clone.yaml&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hopefully we can migrate to a standard tekton based approach &lt;a href=&#34;https://github.com/tektoncd/pipeline/issues/3476&#34;&gt;if this issue is resolved&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;custom-pipeline-catalogs&#34;&gt;Custom Pipeline Catalogs&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/tektoncd/catalog&#34;&gt;Tekton Catalog&lt;/a&gt; is an awesome way to reuse Tasks but it doesn&amp;rsquo;t help when trying to reuse complete &lt;code&gt;PipelineRun&lt;/code&gt; and &lt;code&gt;Pipeline&lt;/code&gt; resources across projects and repositories while also being able to modify them as needed on a per team or repository basis.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/v3/&#34;&gt;Jenkins X 3.x&lt;/a&gt; comes with its own default &lt;a href=&#34;https://github.com/jenkins-x/jx3-pipeline-catalog/tree/master/packs&#34;&gt;pipeline catalog for different languages, tools and frameworks&lt;/a&gt;. This catalog contains reusable steps, Tasks and Pipelines you can use on any project.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s easy for you to fork this catalog to make changes for your team or share between teams in your company. You can make as many catalogs as you like and put whichever catalogs you want in the &lt;code&gt;extensions/pipeline-catalogs.yaml&lt;/code&gt; file of your cluster git repository of your &lt;a href=&#34;https://jenkins-x.io/v3/&#34;&gt;Jenkins X 3.x install&lt;/a&gt;. For more detail there&amp;rsquo;s the &lt;a href=&#34;https://github.com/jenkins-x/jx-project/blob/master/docs/config.md#project.jenkins-x.io/v1alpha1.PipelineCatalog&#34;&gt;configuration reference here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then when developers &lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/#create-a-new-project-from-a-quickstart&#34;&gt;create a new quickstart&lt;/a&gt; or &lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/#import-an-existing-project&#34;&gt;import a repository&lt;/a&gt; developers will be asked to pick the catalog they want from your list if there is more than one, or the configured catalog is silently used.&lt;/p&gt;
&lt;p&gt;This gives you complete freedom to configure things at a global, team or repository level while also making it easy to share changes across projects, teams and companies.&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;We are super excited about the combination of &lt;a href=&#34;https://jenkins-x.io/v3/&#34;&gt;Jenkins X 3.x&lt;/a&gt;, &lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt;, &lt;a href=&#34;https://github.com/tektoncd/catalog&#34;&gt;Tekton Catalog&lt;/a&gt; and ChatOps.&lt;/p&gt;
&lt;p&gt;We hope that you can use the above capabilities to solve your Continuous Delivery needs and over time you can take your Pipelines and make your own Pipeline Catalogs and share them with folks inside and outside of your company.&lt;/p&gt;
&lt;p&gt;Hopefully this can help us all accelerate our Tekton pipelines and catalogs towards more continuous delivery awesome with flexible reusable tasks and pipelines! If you want to give this a try &lt;a href=&#34;https://jenkins-x.io/v3/&#34;&gt;check out Jenkins X 3.x&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Hacktoberfest</title>
      <link>https://jenkins-x.io/blog/2020/09/23/hacktoberfest2020/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/09/23/hacktoberfest2020/</guid>
      <description>
        
        
        &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/community/events/2020-hacktoberfest.jpg&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;We are excited to announce that Jenkins X will be participating in Hacktoberfest again this year! Hacktoberfest is a month-long global celebration of open source software.&lt;/p&gt;
&lt;p&gt;From October 1 to October 31, submit four pull requests to qualify for the limited edition Hacktoberfest shirt. All backgrounds and skill levels are encouraged to participate in Hacktoberfest and join a global community of open source contributors.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Learn more about Hacktoberfest and sign up &lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;contribute-to-jenkins-x&#34;&gt;Contribute to Jenkins X&lt;/h3&gt;
&lt;p&gt;We welcome your contributions to the Jenkins X project!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx-docs/issues?q=is%3Aissue+is%3Aopen+hacktoberfest&#34;&gt;Issues labelled &amp;ldquo;hacktoberfest&amp;rdquo;&lt;/a&gt; generally indicate good first issues. However, all pull requests will count towards your Hacktoberfest challenge. Jenkins X welcomes contributors to both:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx&#34;&gt;the Jenkins X &lt;code&gt;jx&lt;/code&gt; source code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx-docs&#34;&gt;the Jenkins X documentation website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;contribute-to-jx-source-code&#34;&gt;Contribute to &lt;code&gt;jx&lt;/code&gt; source code&lt;/h3&gt;
&lt;p&gt;There are plenty of &lt;a href=&#34;https://github.com/jenkins-x/jx/issues&#34;&gt;open issues&lt;/a&gt;, and we welcome your help in making Jenkins X even more awesome.&lt;/p&gt;
&lt;p&gt;Jenkins X is written largely in Go, but you don&amp;rsquo;t need to be an expert to contribute! If you are new to the project, search for issues labelled &amp;ldquo;good-first-issue&amp;rdquo;. Our &lt;a href=&#34;https://jenkins-x.io/community/code/&#34;&gt;Contributing Guide&lt;/a&gt; has advice for getting started with contributing to Jenkins X.&lt;/p&gt;
&lt;h3 id=&#34;contribute-to-the-docs&#34;&gt;Contribute to the docs&lt;/h3&gt;
&lt;p&gt;We welcome your help in improving the Jenkins X documenation. If you see areas of the documentation that need fixing or augmentation please raise a pull request. Our guide for &lt;a href=&#34;https://jenkins-x.io/community/documentation/&#34;&gt;Contributing to the Documentation&lt;/a&gt; has advice for getting started with contributing to the Jenkins X docs.&lt;/p&gt;
&lt;h3 id=&#34;ask-us-questions&#34;&gt;Ask us questions&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;re happy to help if you have any questions. Talk to us on our slack channels, which are part of the Kubernetes slack. Join  Kubernetes slack &lt;a href=&#34;http://slack.k8s.io/&#34;&gt;here&lt;/a&gt; and find us on our channels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;#jenkins-x-dev for developers of Jenkins X&lt;/li&gt;
&lt;li&gt;#jenkins-x-user for users of Jenkins X&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also have online office hours, where we talk about new developments in Jenkins X and you are welcome to ask us questions. We meet for office hours &lt;strong&gt;every other Tuesday&lt;/strong&gt; at 15:00 UTC (&lt;em&gt;See your timezone &lt;a href=&#34;https://time.is/1500_in_UTC&#34;&gt;here&lt;/a&gt;&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Next office hours are on &lt;strong&gt;6 October&lt;/strong&gt;. Join us on this &lt;a href=&#34;https://zoom.us/j/397862697&#34;&gt;meeting link&lt;/a&gt;. See the &lt;a href=&#34;https://jenkins-x.io/community/calendar/&#34;&gt;Jenkins X calendar&lt;/a&gt; for events that you are welcome to join.&lt;/p&gt;
&lt;p&gt;Find out more about becoming involved in the Jenkins X community &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We look forward to seeing you in open source, fixing all the things!&lt;/em&gt;&lt;/p&gt;
&lt;img src=&#34;https://jenkins-x.io/images/404-page/GOPHER RIDING REX.png&#34; class=&#34;img-thumbnail&#34;&gt;
&lt;p&gt;image by Ashley McNamara, &lt;a href=&#34;https://github.com/ashleymcnamara/gophers/blob/master/GOPHER%20RIDING%20REX.png&#34;&gt;creative commons license&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: New UI to visualize your pipelines and logs</title>
      <link>https://jenkins-x.io/blog/2020/09/23/jx-pipelines-visualizer/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/09/23/jx-pipelines-visualizer/</guid>
      <description>
        
        
        &lt;p&gt;Welcome to the &lt;a href=&#34;https://github.com/dailymotion/jx-pipelines-visualizer&#34;&gt;Jenkins X Pipelines Visualizer&lt;/a&gt;: a new open-source read-only UI for Jenkins X, with a very specific goal and scope: visualize the pipelines and logs.&lt;/p&gt;
&lt;p&gt;This project was started at &lt;a href=&#34;https://www.dailymotion.com/&#34;&gt;Dailymotion&lt;/a&gt; and quickly shared with the Jenkins X community.&lt;/p&gt;
&lt;h2 id=&#34;why-a-new-ui&#34;&gt;Why a new UI?&lt;/h2&gt;
&lt;p&gt;There is already the &lt;a href=&#34;https://jenkins-x.io/blog/2020/08/06/octant-jx/&#34;&gt;Octant-based UI&lt;/a&gt;, so why a new UI?&lt;/p&gt;
&lt;p&gt;The main reason is that &lt;a href=&#34;https://octant.dev/&#34;&gt;Octant&lt;/a&gt; &amp;ldquo;is an application and is intended as a single client tool and at this time there are no plans to support hosted versions of Octant&amp;rdquo; - see &lt;a href=&#34;https://github.com/vmware-tanzu/octant/pull/450&#34;&gt;this thread on the Octant github repository&lt;/a&gt; for more information and details.&lt;/p&gt;
&lt;p&gt;So while Octant answers to a lot of use-cases, there is one for which it is not suited: quickly printing the build logs on a browser, for a specific pipeline. We want to be able to click on a link from a Pull/Merge Request, and get the pipeline logs. This is the specific use-case covered by the Pipelines Visualizer.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;p&gt;We want to keep it small, focused, and fast. It&amp;rsquo;s a read-only UI, so there won&amp;rsquo;t be &amp;ldquo;actions&amp;rdquo; to trigger a pipeline - because it can already be done using &amp;ldquo;chatops&amp;rdquo; commands in the Pull Request for example.&lt;/p&gt;
&lt;p&gt;But there are a few interesting features already:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;first, it&amp;rsquo;s very fast to get the logs. Much faster than the old JXUI.&lt;/li&gt;
&lt;li&gt;it can retrieve the logs from pipelines that have been garbage-collected - if you configure the URL of the buckets where the logs are stored.&lt;/li&gt;
&lt;li&gt;it has URLs compatible with the old JXUI - so it&amp;rsquo;s very easy to replace the old JXUI with this new UI and keep all the links working.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;roadmap&#34;&gt;Roadmap&lt;/h2&gt;
&lt;p&gt;This project was shared very early with the community, after just a few hours of work. So our short-term goal is to improve the UI - make it beautiful.&lt;/p&gt;
&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;
&lt;p&gt;We did a &lt;a href=&#34;https://youtu.be/zv0Dn9RYzwE?t=709&#34;&gt;demo of jx-pipelines-visualizer&lt;/a&gt; at the last &lt;a href=&#34;https://jenkins-x.io/community/office_hours/&#34;&gt;office hours&lt;/a&gt;:&lt;/p&gt;
 &lt;iframe width=&#34;80%&#34; height=&#34;460&#34; src=&#34;https://www.youtube.com/embed/zv0Dn9RYzwE?start=709&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/dailymotion/jx-pipelines-visualizer&#34;&gt;jx-pipelines-visualizer github repository&lt;/a&gt; if you want to install it in your cluster - there is a Helm Chart which can be added to your Jenkins X Dev Environment.&lt;/p&gt;
&lt;p&gt;And any contributions are welcomed - either create an issue or pull request in the project&amp;rsquo;s github repository, or come in the &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;#jenkins-x-dev&lt;/a&gt; Slack Channel.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X Talks at CDCon</title>
      <link>https://jenkins-x.io/blog/2020/09/16/cdcon2020/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/09/16/cdcon2020/</guid>
      <description>
        
        
        &lt;p&gt;There will be six Jenkins X talks given by various speakers at the first-ever &lt;a href=&#34;https://events.linuxfoundation.org/cdcon/&#34;&gt;CDCon&lt;/a&gt; on October 7-8. The two-day virtual event, hosted by the Continuous Delivery Foundation, will focus on improving the world&amp;rsquo;s capacity to deliver software with security and speed.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://events.linuxfoundation.org/cdcon/&#34;&gt;Register&lt;/a&gt; to attend the virtual event for only 25 USD and get access to all of the following Jenkins X talks and more.&lt;/p&gt;
&lt;h2 id=&#34;wednesday-october-7&#34;&gt;Wednesday, October 7&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cdcon2020.sched.com/event/dpvW/a-cicd-framework-for-production-machine-learning-at-massive-scale-using-jenkins-x-and-seldon-core-alejandro-saucedo-seldon&#34;&gt;A CI/CD Framework for Production Machine Learning at Massive Scale (using Jenkins X and Seldon Core)&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;Speaker:&lt;/strong&gt; Alejandro Saucedo, Seldon
&lt;strong&gt;Time:&lt;/strong&gt; 1:15 PM PDT&lt;/p&gt;
&lt;p&gt;Managing production machine learning systems as internal data science infrastructure requirements grow, has uncovered new challenges which have required fundamentally different approaches to that of traditional CI/CD in software engineering. In this talk we will dive into the work we are doing at the SIG-MLOps and the CD Foundation towards developing the methodologies that encompass best practices to continuously integrate and deploy machine learning in production at massive scale. In this talk, we&amp;rsquo;ll provide key insights on the core MLOps concepts, as well as a hands-on coding example where we take a text classification model through its training, deployment and promotion as canary and shadow deployments, which will also allow us to get deeper and more specific insight on our production environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cdcon2020.sched.com/event/dpvQ/dailymotions-continuous-delivery-story-vincent-behar-dailymotion&#34;&gt;Dailymotion&amp;rsquo;s Continuous Delivery Story&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;Speaker:&lt;/strong&gt; Vincent Behar, Dailymotion
&lt;strong&gt;Time:&lt;/strong&gt; 3:30 PM PDT&lt;/p&gt;
&lt;p&gt;In this session, Vincent will share Dailymotion&amp;rsquo;s Continuous Delivery story with Jenkins, Jenkins X and Tekton. He will come back on the initial state and issues faced on the CI/CD topic, and how it was solved. He will insist on the practices that were put in place and the benefits that resulted from switching to Jenkins X. He will conclude with the new challenges brought by improving Dailymotion&amp;rsquo;s Continuous Delivery platform. If you are wondering if Jenkins X is the right tool for you, and the impact it can have on your team(s), then this is the right session for you!&lt;/p&gt;
&lt;h2 id=&#34;thursday-october-8&#34;&gt;Thursday, October 8&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cdcon2020.sched.com/event/e2NG/moving-from-jenkins-to-jenkins-x-scaling-and-accelerating-cicd-dr-michael-garbade-education-ecosystem&#34;&gt;Moving from Jenkins to Jenkins X: Scaling and Accelerating CI/CD&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;Speaker:&lt;/strong&gt; Dr Michael Garbade, Education Ecosystem
&lt;strong&gt;Time:&lt;/strong&gt; 12:00 PM PDT&lt;/p&gt;
&lt;p&gt;Jenkins has served as a continuous integration (CI) tool long before the emergence of Kubernetes and distributed systems running on cloud-native platforms.
Working with Jenkins as a stand-alone open-source tool has proved to be extremely difficult for distributed systems engineers, as it is designed for small projects and not scalable to bigger projects.
Jenkins X has emerged as a way to both improve and automate continuous delivery pipelines to Kubernetes and cloud-native environments.
In this talk, we will discuss the limitations of Jenkins, how Jenkins X addresses those limitations, how it leverages open source and commercial CI/CD tools for easier bug fixes, faster deployments, stability, consistency and improved communication.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cdcon2020.sched.com/event/dpvc/enable-a-pipeline-as-code-capability-for-12000-developers-jimmy-mcnamara-fidelity-investments&#34;&gt;Enable a Pipeline As Code Capability for 12,000 Developers&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;Speaker:&lt;/strong&gt; Jimmy McNamara, Fidelity Investments
&lt;strong&gt;Time:&lt;/strong&gt; 1:00 PM PDT&lt;/p&gt;
&lt;p&gt;Aoife Fitzmaurice and Jimmy McNamara take us through a journey on how Fidelity Investments plans to roll out a Pipeline As Code capability to 12,000 developers. Leveraging cloud-based Kubernetes platforms to ensure best operational outcomes the team is driven to enable this best practice capability across Fidelity. This capability is key to assisting the growth of both an inner-sourcing and open-sourcing culture throughout the firm.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cdcon2020.sched.com/event/dqON/gitops-and-secrets-kara-de-la-marck-cloudbees&#34;&gt;GitOps and Secrets&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;Speaker:&lt;/strong&gt; Kara de la Marck, CloudBees
&lt;strong&gt;Time:&lt;/strong&gt; 1:00 PM PDT&lt;/p&gt;
&lt;p&gt;GitOps uses Git as the “single source of truth” for declarative infrastructure and enables developers to manage infrastructure with the same Git pull requests they use to manage a codebase. Having all configuration files version-controlled by Git has many advantages, but best practices for securely managing secrets with GitOps remain contested. Join us in this presentation about GitOps and secret management. Attendees will learn about the pros and cons of various approaches and why the Jenkins X project has chosen to standardize on Kubernetes external secrets for secret management.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://cdcon2020.sched.com/event/dpvT/kubernetes-chaos-engineering-with-chaos-toolkit-and-jenkins-x-viktor-farcic-cloudbees&#34;&gt;Kubernetes Chaos Engineering With Chaos Toolkit and Jenkins X&lt;/a&gt;&lt;/strong&gt;
&lt;strong&gt;Speaker:&lt;/strong&gt; Viktor Farcic, CloudBees
&lt;strong&gt;Time:&lt;/strong&gt; 3:15 PM PDT&lt;/p&gt;
&lt;p&gt;The only thing more satisfying than being able to destroy things without consequences is to be awarded for destruction. If you do have destructive tendencies, but you&amp;rsquo;d like to convert them into something positive, chaos engineering might be just the thing you need. We&amp;rsquo;ll explore through a hands-on demo on how to use Chaos Toolkit to define and run chaos experiments inside a Kubernetes cluster with Istio. We&amp;rsquo;ll see a few use-cases of potential problems that can be detected and solved. We&amp;rsquo;ll automate the deployment of chaos experiments using Jenkins X and make them an integral part of our continuous delivery pipelines.&lt;/p&gt;
&lt;h2 id=&#34;register-for-cdcon&#34;&gt;Register for CDCon&lt;/h2&gt;
&lt;p&gt;Don&amp;rsquo;t miss out on these great talks. &lt;a href=&#34;https://events.linuxfoundation.org/cdcon/&#34;&gt;Register for CDCon&lt;/a&gt; to attend.&lt;/p&gt;
&lt;p&gt;CDCon has pledged to donate 100% of the proceeds received from CDCon 2020 registration to charitable causes: Black Girls Code, Women Who Code and the CDF Diversity Fund. Registrants indicate which charitable fund they want their 25 USD registration fees to go to during registration. If you can’t afford the registration cost, please apply for the &lt;a href=&#34;https://events.linuxfoundation.org/cdcon/attend/scholarships/&#34;&gt;diversity scholarship&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jenkins-x.io/images/cdcon-register.png&#34; alt=&#34;CDCon Banner&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Welcome to Jenkins X 3.x alpha!</title>
      <link>https://jenkins-x.io/blog/2020/09/16/jx-v3-alpha/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/09/16/jx-v3-alpha/</guid>
      <description>
        
        
        &lt;p&gt;We are very pleased to announce the &lt;a href=&#34;https://jenkins-x.io/v3/&#34;&gt;alpha release of Jenkins X version 3&lt;/a&gt;&lt;/p&gt;
&lt;iframe style=&#34;border:none&#34; width=&#34;800&#34; height=&#34;450&#34; src=&#34;https://whimsical.com/embed/SnJBgXG6jz9pqQewiDTNRt@2Ux7TurymNDXVRa4FpLk&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;You can read more about the &lt;a href=&#34;https://jenkins-x.io/v3/about/overview/&#34;&gt;overview of the architecture and components here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This release has lots of &lt;a href=&#34;https://jenkins-x.io/v3/about/benefits/&#34;&gt;benefits over version 2&lt;/a&gt; is much easier to use, understand and manage. It is more flexible and simpler to configure for different infrastructures and cloud providers.&lt;/p&gt;
&lt;p&gt;The new release works well with any combination of helm 3, helmfile, kpt and/or kustomize.&lt;/p&gt;
&lt;p&gt;For those who&amp;rsquo;ve used Jenkins X version 2 you can check out a &lt;a href=&#34;https://jenkins-x.io/v3/about/comparison/&#34;&gt;comparison of the two versions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is a &lt;a href=&#34;https://www.youtube.com/watch?v=RYgKvRpjkoY&amp;amp;feature=youtu.be&#34;&gt;demo video showing how to get started with Jenkins X on Google Cloud with Terraform and Vault&lt;/a&gt;:&lt;/p&gt;
 &lt;iframe width=&#34;1292&#34; height=&#34;654&#34; src=&#34;https://www.youtube.com/embed/RYgKvRpjkoY&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;We also &lt;a href=&#34;https://www.youtube.com/watch?v=NZVp66YDl5s&#34;&gt;did a live demo of getting started and using version 3&lt;/a&gt; at the &lt;a href=&#34;https://octant.dev/community/&#34;&gt;octant office hours last week&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We also included the &lt;a href=&#34;https://github.com/jenkins-x/enhancements/issues/38&#34;&gt;helmfile based preview environments enhancement&lt;/a&gt; via the new &lt;a href=&#34;https://github.com/jenkins-x/jx-preview&#34;&gt;jx-preview&lt;/a&gt; plugin which makes it much easier to make more sophisticated previews such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using multiple namespaces for you previews&lt;/li&gt;
&lt;li&gt;using per preview namespaces or deploying previews into shared namespaces (e.g. via Canaries)&lt;/li&gt;
&lt;li&gt;using helmfile to cleanly remove resources&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We now have support, via Terraform for 2 of the big 3 public clouds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/admin/platform/eks/&#34;&gt;Amazon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/admin/platform/gke/&#34;&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Azure support is getting really close; if you&amp;rsquo;d like to help get it ready &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;join us on slack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also when using your laptop or local kubernetes cluster without terraform we support:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/admin/platform/minikube/&#34;&gt;Minikube&lt;/a&gt; so you can run Jenkins X on your laptop&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/v3/admin/platforms/on-premises/&#34;&gt;On-Premises&lt;/a&gt; so you can use any vanilla kubernetes cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We are working on improving the UX of the installation/upgrade; we&amp;rsquo;re hoping to soon have a pure terraform (or Terraform Cloud) way to spin up a Jenkins X installation on a public cloud with a minimum of fuss. We&amp;rsquo;ll hopefully blog about that soon&amp;hellip;&lt;/p&gt;
&lt;p&gt;So please take it for a spin and &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;let us know what you think&lt;/a&gt;! If you can think of any ways we can improve let us know!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Octant: the OSS UI for Jenkins X</title>
      <link>https://jenkins-x.io/blog/2020/08/06/octant-jx/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/08/06/octant-jx/</guid>
      <description>
        
        
        &lt;p&gt;A common question we have heard in the community over the years is &lt;a href=&#34;https://jenkins-x.io/docs/resources/faq/config/#is-there-a-ui-available-for-jenkins-x&#34;&gt;Is there an open source UI for Jenkins X?&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Well we now have an answer: its &lt;a href=&#34;https://github.com/vmware-tanzu/octant&#34;&gt;Octant&lt;/a&gt; using the &lt;a href=&#34;https://github.com/jenkins-x/octant-jx&#34;&gt;octant-jx&lt;/a&gt; plugin.&lt;/p&gt;
&lt;h2 id=&#34;why-octant&#34;&gt;Why Octant?&lt;/h2&gt;
&lt;p&gt;We love &lt;a href=&#34;https://github.com/vmware-tanzu/octant&#34;&gt;Octant&lt;/a&gt; because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;open source and very easy to extend with plugins in Go or TypeScript/JavaScript&lt;/li&gt;
&lt;li&gt;lets you visualise and work with all kubernetes and custom resources across multiple clusters&lt;/li&gt;
&lt;li&gt;thanks to &lt;a href=&#34;https://github.com/jenkins-x/octant-jx&#34;&gt;octant-jx&lt;/a&gt;  has awesome integration with Jenkins X components like apps, environments, pipelines, repositories etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;p&gt;Longer term we&amp;rsquo;re planning on making most of the developer and operations features of Jenkins X available through the UI via &lt;a href=&#34;https://github.com/jenkins-x/octant-jx&#34;&gt;octant-jx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;e.g. we hope as part of &lt;a href=&#34;https://github.com/jenkins-x/enhancements/issues/36&#34;&gt;Jenkins X 3.x&lt;/a&gt; you&amp;rsquo;ll be able to install or upgrade Jenkins X and watch the installation proceed all via Octant.&lt;/p&gt;
&lt;p&gt;But already right now today you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;view applications, environments, pipelines, repositories&lt;/li&gt;
&lt;li&gt;for a pipeline quickly navigate to:
&lt;ul&gt;
&lt;li&gt;its Pod, Log, Pull Request or Preview Environment&lt;/li&gt;
&lt;li&gt;for each step you can view the step detail or log of the step&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;see the various jobs and pipelines used to operate Jenkins X itself&lt;/li&gt;
&lt;li&gt;over time will add management UI capabilities for installing, upgrading and administering Jenkins&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Find out &lt;a href=&#34;https://github.com/vmware-tanzu/octant#usage&#34;&gt;more about installing and using Octant here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;
&lt;p&gt;We did a &lt;a href=&#34;https://youtu.be/Njl247hjRuU?t=186&#34;&gt;demo of octant-jx&lt;/a&gt; at the last &lt;a href=&#34;https://jenkins-x.io/community/office_hours/&#34;&gt;office hours&lt;/a&gt;. We also &lt;a href=&#34;https://www.youtube.com/watch?v=Njl247hjRuU&amp;amp;t=2027s&#34;&gt;presented octant-jx&lt;/a&gt; at the &lt;a href=&#34;https://octant.dev/community/&#34;&gt;octant office hours this week&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is a &lt;a href=&#34;https://www.youtube.com/watch?v=2LCPHi0BnUg&amp;amp;feature=youtu.be&#34;&gt;demo video showing octant in action with Jenkins X&lt;/a&gt;:&lt;/p&gt;
 &lt;iframe width=&#34;1292&#34; height=&#34;654&#34; src=&#34;https://www.youtube.com/embed/2LCPHi0BnUg&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: CJXD to upstream Jenkins X to the future</title>
      <link>https://jenkins-x.io/blog/2020/07/29/cjxdtoupstreamjxtofuture/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/07/29/cjxdtoupstreamjxtofuture/</guid>
      <description>
        
        
        &lt;p&gt;CJXD was first introduced at the end of July 2019 with the aim to provide a more stable version of Jenkins X that was under heavy development.  The release cadence was reduced to one per month, the upgrade process well tested and a large focus on stability issues was taken on.  It is fair to say that this was not only expected but absolutely needed by users of Jenkins X to service their own software delivery. A little over a year on we are now in a better place, following the improvements above means we are now able to focus all attention back towards the upstream Jenkins X and look towards where Jenkins X needs to go next.  There is still much to do, areas which require attention in design, upgrades related to other projects and innovation to explore.  With that, the need for CJXD over and above using upstream Jenkins X is reduced.  CloudBees will stop releasing CJXD builds and focus purely upstream and it’s engineering efforts towards working with the OSS community on JX3 Alpha, Beta, GA and beyond.&lt;/p&gt;
&lt;p&gt;JX3 is in a relatively early stage, we have an enhancement issue &lt;a href=&#34;https://github.com/jenkins-x/enhancements/issues/36&#34;&gt;here&lt;/a&gt; and plan to start showing some initial developments and design docs to help people get involved in the next week or two.&lt;/p&gt;
&lt;p&gt;While the OSS community works on getting JX3 to GA, users of CJXD have a few options.  Both option 1 and 2 below involve moving to the stable upstream JX2.  One important note here is you will need to remove the Jenkins X UI as this a CloudBees specific offering and will not continue in favour of the new extensible OSS UI powered by Octant.  This was demo’d at the &lt;a href=&#34;https://youtu.be/Njl247hjRuU&#34;&gt;recent office hours&lt;/a&gt; as well as discussing some next steps we are working through for JX3.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt; Upgrade your existing CJXD installation to upstream JX2.  There are some steps on how to do this below, there may be some edge cases in doing this but as in all the options here the OSS community in on hand to help &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;https://jenkins-x.io/community/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Notes:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You will continue to be able to apply JX2 upgrades.&lt;/li&gt;
&lt;li&gt;No backwards compatible upgrade for Vault if you are using it.  The migration configuration steps below will omit Vault from this and future upgrades.  Note for JX3 we are working on using external secrets as an abstraction above lots of secret store implementations.  So for now we recommend keeping on the Vault Operator 0.4.16 release and manage the Vault upgrade along with the JX 3 external secrets work.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt; Create a brand new JX2 cluster and jx import your git repositories.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Option 3:&lt;/strong&gt; Stay on CJXD and wait to move to JX3 although the timelines for this are unknown it is the primary development focus going forward so lots more details on this coming soon.  Note you won’t be able to upgrade to obtain future JX 2 fixes.&lt;/p&gt;
&lt;p&gt;The Jenkins X OSS community is very active on Slack, we host regular open office hours zoom sessions and are building out a number of special interest groups in the coming weeks and months which we would love for you to be a part of.  Twitter is active and a good way to keep up to date with events, plus we are launching a new Discourse community forum.  There is no better time to be involved, if you are looking to contribute code, learn or share new things or help carve out the future direction of Jenkins X, we are eager for your involvement.&lt;/p&gt;
&lt;p&gt;As a start please come and say hello on the slack channel or be brave and help kick off &lt;a href=&#34;https://jenkinsx.discourse.group/&#34;&gt;https://jenkinsx.discourse.group/&lt;/a&gt; - you just need to sign up.&lt;/p&gt;
&lt;p&gt;Looking forward to seeing you soon.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;migration-steps-for-cjxd-to-upstream-jenkins-x&#34;&gt;Migration steps for CJXD to upstream Jenkins X&lt;/h1&gt;
&lt;h2 id=&#34;configuration-changes&#34;&gt;Configuration changes&lt;/h2&gt;
&lt;p&gt;Get the latest jx CLI &lt;a href=&#34;https://github.com/jenkins-x/jx/releases&#34;&gt;https://github.com/jenkins-x/jx/releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Change version stream, boot config repos URL + tags, remove Jenkins X UI and remove the upgrade for Vault.&lt;/p&gt;
&lt;p&gt;Change the git repository for your development environment, get the URL using:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx get environments
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and apply these changes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;remove the &lt;code&gt;env/jx-app-ui&lt;/code&gt; folder and &lt;code&gt;jx-app-ui&lt;/code&gt; from &lt;code&gt;env/requirements.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;remove the &lt;code&gt;jx step boot vault&lt;/code&gt; boot pipeline step&lt;/li&gt;
&lt;li&gt;switch from the CJXD version stream to the upstream Jenkins X one&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The exact changes described above can be found in this commit:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cb-kubecd/environment-cjxdtest1-dev/commit/2596efdb51b812758ce847e16beb2035af4f61f1&#34;&gt;https://github.com/cb-kubecd/environment-cjxdtest1-dev/commit/2596efdb51b812758ce847e16beb2035af4f61f1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once these changes are merged into the mainline branch follow the boot pipeline using:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx get build logs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once the boot pipeline has finished successfully you can upgrade to the very latest release (the git sha’s above are the latest at writing this blog)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; jx upgrade boot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Review and /approve the generated pull request, follow the boot pipeline logs to success.&lt;/p&gt;
&lt;p&gt;If you run into problems, need any help or guidance please ask in the the Jenkins X community &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;https://jenkins-x.io/community/&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Consolidate the use of Apps / Addons - Coding Phase 2</title>
      <link>https://jenkins-x.io/blog/2020/07/27/gsoc2020/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/07/27/gsoc2020/</guid>
      <description>
        
        
        &lt;p&gt;The coding phase 2 of Google Summer of Code will end this week, so I&amp;rsquo;d like to share my coding phase 2 work.&lt;/p&gt;
&lt;p&gt;The addons have been migrated to apps on coding phase 1, but these apps have not been hosted to OSS, so during the coding phase 2, Jenkins X team build OSS cluster to host my apps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-apps/jx-app-flagger&#34;&gt;jx-app-flagger&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-apps/jx-app-ingress&#34;&gt;jx-app-ingress&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-apps/jx-app-gloo&#34;&gt;jx-app-gloo&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-apps/jx-app-ingress&#34;&gt;jx-app-kubeless&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;you can use &lt;code&gt;jx add app&lt;/code&gt; command to install the above apps, I also made a number of PR:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/pull/7472&#34;&gt;https://github.com/jenkins-x/jx/pull/7472&lt;/a&gt; - fix &lt;code&gt;jx add app&lt;/code&gt; command&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/pull/7441&#34;&gt;https://github.com/jenkins-x/jx/pull/7441&lt;/a&gt; - fix skip dir when looping Helm templates&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/pull/7440&#34;&gt;https://github.com/jenkins-x/jx/pull/7440&lt;/a&gt; - deprecate create addon kubeless&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/pull/7436&#34;&gt;https://github.com/jenkins-x/jx/pull/7436&lt;/a&gt; - support &lt;code&gt;jx add app&lt;/code&gt; from git repository&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My work is inseparable from my mentors and Jenkins X team, in particular, my mentor -  Kara de la Marck took good care of me in every way (such as language, English is my second language), so thank you for your time ❤️&lt;/p&gt;
&lt;h4 id=&#34;next-phase-work&#34;&gt;Next phase work&lt;/h4&gt;
&lt;p&gt;In the next phase I will write these apps document and add deprecate note to jx, and continue to explore apps. I will also follow up about apps/addons issues on jx then try to solve the issues. Jenkins X team is going to be releasing 3.x of Jenkins X, I also need to get familiar with it - &lt;a href=&#34;https://github.com/jenkins-x/octant-jx&#34;&gt;https://github.com/jenkins-x/octant-jx&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&#34;feedback&#34;&gt;Feedback&lt;/h4&gt;
&lt;p&gt;If you are interested in the project, or to guide me. Welcome to join #jenkins-x-gsoc channel on &lt;a href=&#34;https://cdeliveryfdn.slack.com/join/shared_invite/enQtODM2NDI1NDc0MzIxLTA1MDcxMzUyMGU2NWVlNmQwN2M1N2M4MWJjOWFkM2UzMDY0OWNkNjAzNzM0NzVkNjQ5M2NkMmY2MTRkMWY4MWY#/&#34;&gt;CDF Slack&lt;/a&gt; 🙌&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Consolidate the use of Apps / Addons - Coding Phase 1</title>
      <link>https://jenkins-x.io/blog/2020/07/12/gsoc2020/</link>
      <pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/07/12/gsoc2020/</guid>
      <description>
        
        
        &lt;p&gt;The coding phase 1 of Google Summer of Code ended last week, I&amp;rsquo;m working on &lt;a href=&#34;https://www.jenkins.io/projects/gsoc/2020/projects/jenkins-x-apps-consolidation/&#34;&gt;Consolidate the use of Apps / Addons&lt;/a&gt;, so I&amp;rsquo;d like to share my coding phase 1 work.&lt;/p&gt;
&lt;p&gt;In the project, I mainly migrate addons to apps, the way is easier for improve jx apps and addons.&lt;/p&gt;
&lt;p&gt;During the time, I&amp;rsquo;ve migrated all addons to apps via Helm chart way.&lt;/p&gt;
&lt;p&gt;The following is my make apps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodece/jx-app-kubeless&#34;&gt;https://github.com/nodece/jx-app-kubeless&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodece/jx-app-owasp-zap&#34;&gt;https://github.com/nodece/jx-app-owasp-zap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodece/jx-app-flagger&#34;&gt;https://github.com/nodece/jx-app-flagger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodece/jx-app-gloo&#34;&gt;https://github.com/nodece/jx-app-gloo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodece/jx-app-istio&#34;&gt;https://github.com/nodece/jx-app-istio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodece/jx-app-ingress&#34;&gt;https://github.com/nodece/jx-app-ingress&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Current, we only move to jx-app-kubeless to the &lt;a href=&#34;https://github.com/jenkins-x-apps&#34;&gt;jenkins-x-apps&lt;/a&gt; repository, other apps haven&amp;rsquo;t been moved to the &lt;a href=&#34;https://github.com/jenkins-x-apps&#34;&gt;jenkins-x-apps&lt;/a&gt; repository.&lt;/p&gt;
&lt;p&gt;You can visit &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1k2KEMdk5-9HrU-IUuataYD63Kl-JEsuy5aXus7Dcitc/edit?usp=sharing&#34;&gt;here&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h4 id=&#34;next-phase-work&#34;&gt;Next phase work&lt;/h4&gt;
&lt;p&gt;The next phase is to add &lt;code&gt;jx delete app&lt;/code&gt; command to jx, but it has been implemented by Jenkins X contributor, so I made a new plan for next phase.&lt;/p&gt;
&lt;p&gt;The following is my plan for the next phase:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Improve &lt;code&gt;jx add app&lt;/code&gt; - It will support to fetch any git repository to install app. I also consider migrate application to apps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perfect the work of phase 1, these apps haven&amp;rsquo;t moved to jenkins-x-apps repository yet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow up on jx issues to improve jx.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;demo-for-coding-phase-1&#34;&gt;Demo for coding phase 1&lt;/h3&gt;
&lt;p&gt;I presentation my coding phase 1 demo on YouTube lase week.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Notes: the video language is Chinese.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Ka2Uor_oTWc&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Last week, Jenkins hold a meeting for Jenkins GSoC students to present their phase 1 work, I also present my coding phase 1 work on the meeting.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/HQLhakpx5mk&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h4 id=&#34;feedback&#34;&gt;Feedback&lt;/h4&gt;
&lt;p&gt;If you are interested in the project, or to guide me. Welcome to join #jenkins-x-gsoc channel on &lt;a href=&#34;https://cdeliveryfdn.slack.com/join/shared_invite/enQtODM2NDI1NDc0MzIxLTA1MDcxMzUyMGU2NWVlNmQwN2M1N2M4MWJjOWFkM2UzMDY0OWNkNjAzNzM0NzVkNjQ5M2NkMmY2MTRkMWY4MWY#/&#34;&gt;CDF Slack&lt;/a&gt;. 🙌&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X &amp; Open Innovation </title>
      <link>https://jenkins-x.io/blog/2020/07/08/jxopeninnovation/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/07/08/jxopeninnovation/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X burst onto the CI/CD scene a couple of years ago - reimagining CI/CD on Kubernetes with pipeline automation, GitOps built-in and and preview environments to help teams collaborate and accelerate their software delivery at any scale. It has been evolving at a breakneck pace, keeping up with the changes in the wider Kubernetes ecosystem.&lt;/p&gt;
&lt;p&gt;With the release of Helm 3, Jenkins X Labs nurtured an early experiment to adopt it. On May 15th, the primary sponsor of Jenkins X, CloudBees, &lt;a href=&#34;https://jenkins-x.io/blog/2020/05/15/helm3/#why-isnt-this-all-more-open&#34;&gt;shared a post&lt;/a&gt; talking about the future direction of Helm 3 and Jenkins X.&lt;/p&gt;
&lt;p&gt;Open source projects rise to ubiquity thanks to a virtuous cycle of technology and business adoption. It is a constant challenge to balance these concerns and delineate what is open source and what can be commercialized. In a fast-changing open source and tech landscape, sometimes the line gets drawn in the wrong place.&lt;/p&gt;
&lt;p&gt;The Jenkins X community is passionate and vocal and Mauricio Salatino, &lt;a href=&#34;https://twitter.com/salaboy&#34;&gt;Salaboy&lt;/a&gt;, &lt;a href=&#34;https://salaboy.com/2020/05/19/why-isnt-jenkins-xs-future-more-open/&#34;&gt;shared a post&lt;/a&gt; strongly expressing his views on the new direction. The post was supported by a &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/7207&#34;&gt;Github issue&lt;/a&gt; which allowed other community members to also share feedback on this topic. Many of CloudBees founders and leaders are veterans of open source projects. CloudBees is &lt;a href=&#34;https://www.previous.cloudbees.com/open-source&#34;&gt;committed to open source&lt;/a&gt;. We demonstrate our commitment through deep involvement in open source projects and communities. So we took this feedback very seriously and listened to what the community was telling us.&lt;/p&gt;
&lt;p&gt;One line that stood out in Salatino&amp;rsquo;s post is this: &lt;em&gt;&amp;ldquo;Jenkins X is unlike any other project that I worked on in the past&amp;rdquo;.&lt;/em&gt; This is significant, especially given how many OSS projects Salatino contributes to. Salatino continues:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;The speed of changes in these projects is unprecedented and keeping up with all of it is a big challenge. Because of this, Jenkins X is more than a solution to a CI/CD problem, it is a shared community learning experience and a research project that pushes the boundaries of best practices for CI/CD in Kubernetes.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;Jenkins X is a solution to a CI/CD problem, but it is more than that. It &lt;em&gt;is&lt;/em&gt; a shared community learning experience. It &lt;em&gt;is&lt;/em&gt; a research project that pushes the boundaries of best practices for CI/CD in Kubernetes. And the engine that powers all of this is the open source community.&lt;/p&gt;
&lt;p&gt;CI/CD right now is going through a renaissance with the onset of microservices, containers and cloud native technologies. The whole space is evolving rapidly. We have seen this earlier this year, with the rise of Tekton which was adopted as the main pipeline engine for Jenkins X. Jenkins X in a year&amp;rsquo;s time is likely to be very different than it is today.  At CloudBees, we believe open source drives innovation, leads to better, more robust technology and benefits everyone.&lt;/p&gt;
&lt;p&gt;We are very grateful to Salatino and the wider community for graciously speaking up and giving feedback on how the project should evolve. With this in mind we want to play our part by ensuring Jenkins X future is open and innovative. You may have already noticed some of the changes, such as the &lt;a href=&#34;https://jenkins-x.io/community/roadmap/&#34;&gt;open roadmap&lt;/a&gt; being discussed. Specifically, on Helm 3 we want this work to resume in the open as a community effort, in the form of a Jenkins X Helm 3 working group. These are just a couple of steps towards that north star of open innovation.&lt;/p&gt;
&lt;p&gt;Jenkins X is unlike any other open source project out there, let&amp;rsquo;s keep pushing the boundaries of what&amp;rsquo;s possible - together and in the open.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: CloudBees contributions to Jenkins X - June 2020</title>
      <link>https://jenkins-x.io/blog/2020/06/26/cjxd-june-20/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/06/26/cjxd-june-20/</guid>
      <description>
        
        
        &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/logo/cloudbees.png&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;For everyone here at Cloudbees, June has been a really productive month and the release 11 of CJXD comes with a set of new available features and fixes for upstream Jenkins X, as well as a new version of the UI that we are really excited to release!&lt;/p&gt;
&lt;p&gt;Regarding Jenkins X new features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Thanks to Hardy Ferentschik, you can now bring your own Vault to your Jenkins X cluster. It will allow you to use an already existing Vault instance to store your Jenkins X secrets, checkout the documentation &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/installing/boot/secrets/#external&#34;&gt;here&lt;/a&gt;. He also improved the &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/vault/#accessing-secrets&#34;&gt;existing documentation&lt;/a&gt; to help you access and manage your secrets.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you can’t find a Buildpack that suits your projects in the &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;list&lt;/a&gt; of available ones, Adam Magan has been working on allowing you to use your own custom buildpacks, please find the documentation &lt;a href=&#34;https://jenkins-x.io/docs/create-project/build-packs/#using-custom-build-packs&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As for the CloudBees UI, the team is happy to make available some really useful features in a new Preview version:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You can now create a new project from a list of available “quickstarts” that you can use as a template and that will be pre configured to work with Jenkins X. If you want to get started with projects, please check the &lt;a href=&#34;https://docs.cloudbees.com/docs/cloudbees-jenkins-x-distribution/latest/user-interface/projects&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have an existing project that you want to manage using Jenkins X, you can now also use the UI to import it in your cluster.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The UI is now exposed with its own URL and protected by basic authentication. Please check out the &lt;a href=&#34;https://docs.cloudbees.com/docs/cloudbees-jenkins-x-distribution/latest/user-interface/install&#34;&gt;documentation&lt;/a&gt; to have more details about that.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course the team continues to fix the issues reported by the community, since the previous release, over 30 issues has been closed, with the goal of making Jenkins X always more reliable.
Special thanks to &lt;a href=&#34;https://github.com/ankitm123&#34;&gt;ankitm123&lt;/a&gt; who is really involved in the community and has been fixing a lot of issues in this release.&lt;/p&gt;
&lt;p&gt;Finally, we have a couple of things in progress that will come soon, be prepared for some exciting announcements around OpenShift support. Also Gitlab and Bitbucket Server support for Lighthouse are available in preview mode, if you want to give it a try, please check out the &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/installing/boot/git-provider/#bitbucket-server&#34;&gt;documentation&lt;/a&gt;, we welcome feedback and bug reports !&lt;/p&gt;
&lt;p&gt;If it’s not done yet, feel free to start using the Cloudbees Jenkins X Distribution, all you need to know in order to have it up and running is &lt;a href=&#34;https://docs.cloudbees.com/docs/cloudbees-jenkins-x-distribution/latest/&#34;&gt;here&lt;/a&gt; !&lt;/p&gt;
&lt;p&gt;Romain&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: My story with Jenkins X GSoC - Consolidate the use of Apps / Addons</title>
      <link>https://jenkins-x.io/blog/2020/06/18/gsoc2020/</link>
      <pubDate>Thu, 18 Jun 2020 22:55:25 +0800</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/06/18/gsoc2020/</guid>
      <description>
        
        
        &lt;p&gt;I&amp;rsquo;m Zixuan, and I&amp;rsquo;m very happy to be recognized by the Jenkins and Jenkins X teams in Google Summer of Code 2020.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m working on &lt;a href=&#34;https://jenkins.io/projects/gsoc/2020/project-ideas/jenkins-x-apps-consolidation/&#34;&gt;Consolidate the use of Apps / Addons&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;excellent-mentor-team&#34;&gt;Excellent mentor team&lt;/h3&gt;
&lt;p&gt;Jenkins and Jenkins X has an excellent team of mentors, everyone is very kind and super knowledgeable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;James Strachan&lt;/li&gt;
&lt;li&gt;Kara de la Marck&lt;/li&gt;
&lt;li&gt;markyjackson&lt;/li&gt;
&lt;li&gt;Nikhil Da Rocha&lt;/li&gt;
&lt;li&gt;Oleg Nenashev&lt;/li&gt;
&lt;li&gt;Oscar Medina&lt;/li&gt;
&lt;li&gt;Sahil Kalra&lt;/li&gt;
&lt;li&gt;Sladyn&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;work-output&#34;&gt;Work output&lt;/h3&gt;
&lt;p&gt;I have been working on this project for some time.
During this time, I have migrated some addons to apps.&lt;/p&gt;
&lt;p&gt;If you want to test completed apps, you can open the repository below.&lt;/p&gt;
&lt;h4 id=&#34;completed-work&#34;&gt;Completed Work&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x-apps/jx-app-kubeless&#34;&gt;jx-app-kubeless&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;work-in-progress&#34;&gt;Work in Progress&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodece/jx-app-owasp-zap&#34;&gt;jx-app-owasp-zap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodece/jx-app-flagger&#34;&gt;jx-app-flagger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodece/jx-app-gloo&#34;&gt;jx-app-gloo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;🙌 I also welcome other developers of this project to guide me!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For more about the project, see &lt;a href=&#34;https://www.jenkins.io/projects/gsoc/2020/projects/jenkins-x-apps-consolidation/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Lighthouse Goes GA!</title>
      <link>https://jenkins-x.io/blog/2020/06/08/lighthouse-goes-ga/</link>
      <pubDate>Mon, 08 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/06/08/lighthouse-goes-ga/</guid>
      <description>
        
        
        &lt;p&gt;In May of this year, Jenkins X switched from using &lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow&#34;&gt;Prow&lt;/a&gt; as its default webhook handler to using &lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;Lighthouse&lt;/a&gt;. This is the result of almost a year of work, and provides some significant improvements for users of Jenkins X. You can find more information on the differences between Prow and Lighthouse &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/lighthouse/#comparisons-to-prow&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most notably, Jenkins X now properly supports GitHub Enterprise as well as github.com, with preview support for GitLab and BitBucket Server. Prow only supports github.com, so until now, Jenkins X users have had to jump through hoops or accept significant limitations to their workflows in order to use any other SCM (source control management) providers. Lighthouse is tested against every provider we list support for, including the preview support for GitLab and BitBucket Server. While some functionality may not behave exactly the same on all providers, the core functionality of &lt;a href=&#34;https://jenkins-x.io/docs/build-test-preview/chatops/&#34;&gt;ChatOps&lt;/a&gt; should work on all. Lighthouse also has a smaller footprint in terms of resources and pods used in your Kubernetes cluster than Prow.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re interested in Jenkins X and Lighthouse support for other SCM providers, please let us know and we&amp;rsquo;ll see what we can do!&lt;/p&gt;
&lt;h3 id=&#34;what-does-preview-support-mean&#34;&gt;What does &amp;ldquo;preview support&amp;rdquo; mean?&lt;/h3&gt;
&lt;p&gt;The primary difference between Lighthouse&amp;rsquo;s support for GitHub and GitHub Enterprise, and its support for GitLab and BitBucket Server, is testing and usage. The Jenkins X project itself uses Lighthouse heavily, so we&amp;rsquo;re very confident in its behavior and reliability with the GitHub API. Its GitLab and BitBucket Server support is tested with every change to the project, but until we&amp;rsquo;ve had reports of Lighthouse users on GitLab or BitBucket Server in real-world usage, we don&amp;rsquo;t want to give the impression that support for those providers is known to be as stable as on GitHub.&lt;/p&gt;
&lt;p&gt;So if you&amp;rsquo;re using Jenkins X and Lighthouse with GitLab or BitBucket Server, we&amp;rsquo;d love to hear how your experience has been, &lt;a href=&#34;https://jenkins-x.io/community/&#34;&gt;on our Slack channels or at our weekly office hours&lt;/a&gt;. If you run into in any problems with Lighthouse on any provider, whether it&amp;rsquo;s in preview or otherwise, please &lt;a href=&#34;https://github.com/jenkins-x/lighthouse/issues&#34;&gt;open an issue&lt;/a&gt; and we&amp;rsquo;ll look into it as soon as possible. Once we&amp;rsquo;ve gotten enough feedback to be confident that major changes will not be needed for GitLab or for BitBucket Server, we&amp;rsquo;ll move those providers out of preview.&lt;/p&gt;
&lt;h3 id=&#34;differences-between-providers&#34;&gt;Differences between providers&lt;/h3&gt;
&lt;h4 id=&#34;github-and-github-enterprise&#34;&gt;GitHub and GitHub Enterprise&lt;/h4&gt;
&lt;p&gt;There should be no functional differences between Lighthouse&amp;rsquo;s behavior on github.com vs a GitHub Enterprise instance. The exact same APIs are used in both cases.&lt;/p&gt;
&lt;h4 id=&#34;gitlab&#34;&gt;GitLab&lt;/h4&gt;
&lt;p&gt;Lighthouse with GitLab may be more likely to hit API rate limits, due to GitLab&amp;rsquo;s GraphQL functionality not matching the particular capabilities of GitHub, but the overall functionality is the same. There is one significant difference with GitLab, however. Some of Lighthouse&amp;rsquo;s ChatOps commands, such as &lt;code&gt;/approve&lt;/code&gt; and &lt;code&gt;/assign&lt;/code&gt;, overlap with &lt;a href=&#34;https://docs.gitlab.com/ee/user/project/quick_actions.html&#34;&gt;GitLab quick actions&lt;/a&gt;, and currently, GitLab &lt;a href=&#34;https://gitlab.com/gitlab-org/gitlab/-/issues/215934&#34;&gt;does not trigger webhook events for quick actions&lt;/a&gt;. If Lighthouse does not receive a webhook event, it doesn&amp;rsquo;t have any way of knowing that a ChatOps command has been invoked. Therefore, we have added the ability to invoke &lt;a href=&#34;https://jenkins-x.io/docs/build-test-preview/chatops/#chatops-commands&#34;&gt;all Lighthouse ChatOps commands&lt;/a&gt; either with the traditional &lt;code&gt;/approve&lt;/code&gt; etc command, or by adding a &lt;code&gt;lh-&lt;/code&gt; prefix, like &lt;code&gt;/lh-approve&lt;/code&gt;. When using Lighthouse with GitLab, you will want to use the &lt;code&gt;/lh-(whatever)&lt;/code&gt; commands to ensure that your command is actually processed.&lt;/p&gt;
&lt;p&gt;We believe that Lighthouse should work with gitlab.com and relatively current versions of GitLab Community Edition and GitLab Enterprise Edition, based on the API docs, but if you encounter any problems on GitLab CE or GitLab EE, please open an issue.&lt;/p&gt;
&lt;h4 id=&#34;bitbucket-server&#34;&gt;BitBucket Server&lt;/h4&gt;
&lt;p&gt;First, we should note that Lighthouse will not work properly with BitBucket Server versions earlier than 7.0. &lt;a href=&#34;https://confluence.atlassian.com/bitbucketserver/bitbucket-server-7-0-release-notes-990546638.html#BitbucketServer7.0releasenotes-Anewwebhookforsourcebranchupdatesinapullrequest&#34;&gt;A new webhook was added in 7.0&lt;/a&gt; to be sent when the source branch for a pull request has been updated, because of a new commit, rebase, or similar changes, and without that webhook, Lighthouse isn&amp;rsquo;t informed in those cases and doesn&amp;rsquo;t know to rebuild the pull request.&lt;/p&gt;
&lt;p&gt;In addition, &lt;a href=&#34;https://jira.atlassian.com/browse/BCLOUD-11976&#34;&gt;due to BitBucket Server not having the concept of labels for pull requests&lt;/a&gt;, Lighthouse emulates labels by creating a comment on pull requests containing a table of labels for the pull request in question. This comment needs to remain in the consistent format Lighthouse creates or it won&amp;rsquo;t be able to detect the labels correctly. Comment formatting for BitBucket Server is also more limited than for GitHub or GitLab, so comments may be a bit awkward in their appearance at the moment.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: An update on helm 3 and JXL</title>
      <link>https://jenkins-x.io/blog/2020/05/15/helm3/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/05/15/helm3/</guid>
      <description>
        
        
        &lt;h2 id=&#34;whats-next-for-jxl-and-helm-3&#34;&gt;What’s next for JXL and Helm 3?&lt;/h2&gt;
&lt;p&gt;A few months back, we unveiled JXL to the Jenkins X community and framed it as a new thing, Jenkins X Labs, that would build out experimental features and test potential new things. Some would stick and go upstream into Jenkins X, others would be killed off as interesting but unsuccessful experiments.&lt;/p&gt;
&lt;p&gt;This was a new thing for Jenkins X, trying to better separate the experimentation loop from the increasingly stable and relied-upon upstream. And, to a degree it worked great - the JXL workaround helm 3 was awesome, and got a lot of excitement.&lt;/p&gt;
&lt;p&gt;Where it didn’t work so great, though, was on what happened next. While this may be a bit forgivable since the whole thing was itself a new experiment for our community, it’s pretty clear we’ve dropped the ball a bit and that’s informing our next steps now.&lt;/p&gt;
&lt;h2 id=&#34;what-did-we-learn-from-jxl&#34;&gt;What did we learn from jxl?&lt;/h2&gt;
&lt;p&gt;A few weeks back, we made it known that the JXL experiment was over. Specifically, the current jxl binary was over - not the idea of labs or any experiments, but the specific helm 3 experiment packaged into the current version of jxl had gotten us the info we needed to make some decisions about how we wanted to steer Jenkins X going forward.&lt;/p&gt;
&lt;p&gt;There were two main things we learned as a result of the jxl work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First, it was mostly a success. The direction was exciting, and helmfile is a huge help.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Second, the scope of the change was enormous. Getting the change to be production-ready, to the increasing quality standards being established by the CloudBees Jenkins X Distribution, was even larger.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It’s important to note here that regressing in terms of quality and reliability is not an option - we’ve heard loud and clear from the community that Jenkins X needs to be more stable and more dependable, and even exciting changes can’t compose the progress we’re making on those fronts.&lt;/p&gt;
&lt;p&gt;So, with those takeaways in mind, we declared the helm 3 JXL experiment complete and got to work.&lt;/p&gt;
&lt;h2 id=&#34;so-whats-next-for-helm-3-and-jenkins-x&#34;&gt;So, what’s next for helm 3 and Jenkins X?&lt;/h2&gt;
&lt;p&gt;To be clear upfront: Jenkins X will get helm 3. We are working on that now internally at CloudBees. And, specifically, we are working on a way to introduce this large change iteratively, over time, with safe upgrade paths and no sudden breaking changes. For bleeding-edge people, maybe that’s slower than you might prefer - but after the volume of feedback around stability, we’re playing it safe on this one.&lt;/p&gt;
&lt;p&gt;Now, you might ask next where you can find that work. And the answer, to be honest, is that right now you can’t. With the work we do on Jenkins X at CloudBees, we aspire to be as consistently open and upstream as possible, but there are times when keeping our heads down to workshop things is the right path. The UI so far is one example of this, and for the time being helm 3 is another.&lt;/p&gt;
&lt;h2 id=&#34;can-you-get-involved-in-helm-3-at-all&#34;&gt;Can you get involved in helm 3 at all?&lt;/h2&gt;
&lt;p&gt;If you are interested in the work going on regarding Jenkins X and helm 3, we are looking for pilot users who want to test drive what’s in progress and give feedback once it&amp;rsquo;s ready. It’s not all of JXL, like I said it’s iterative and this is phase 1. Please get in touch if you’d like to discuss it more, either by email (&lt;a href=&#34;mailto:jx-feedback@cloudbees.com&#34;&gt;jx-feedback@cloudbees.com&lt;/a&gt;) or just in the community Slack (ping &lt;em&gt;vfarcic&lt;/em&gt; and he’ll get you on the list for feedback.)&lt;/p&gt;
&lt;h2 id=&#34;why-isnt-this-all-more-open&#34;&gt;Why isn’t this all more open?&lt;/h2&gt;
&lt;p&gt;One thing we learned as part of doing JXL is that Jenkins X is not yet built well for safe experimentation. We want to fix that long term, and if we were doing it over again we’d likely handle jxl differently because of the unfortunate silence you’re now hearing from us after such exciting work, but like all corporate sponsors of open source projects, we have to balance priorities and one of the major ones is making Jenkins X high quality enough for large companies to use at scale.&lt;/p&gt;
&lt;p&gt;Long term, as things continue to improve, we hope all experimentation can be done upstream without major issues - but we’re not there yet. And, continuing to build out on JXL risked a forking situation where the path back to upstream becomes harder and harder - we didn’t want that to happen. So, our solution for now, suboptimal as it is, is to build the next chapter out a little more privately, figure out what makes sense in upstream from day 1 and what we might want to first offer through the Distribution as an enterprise capability (similar to the UI) and then get the community back on track with a single direction.&lt;/p&gt;
&lt;p&gt;We’re not saying this is great - it’s a learning process for us too, and while we’re excited about the path to the future JXL has given us, we also have to make the best of it with the limitations that exist today and the large companies trying to count on Jenkins X more and more.&lt;/p&gt;
&lt;h2 id=&#34;feedback-and-questions&#34;&gt;Feedback and questions&lt;/h2&gt;
&lt;p&gt;We’d love to hear from you on this and discuss it more, so please ping us in the community Slack, join office hours and get involved. The Jenkins X community is critical to all of us and, even with some setbacks and missteps, we’re excited to keep learning and improving together.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: CloudBees contributions to Jenkins X - April 2020</title>
      <link>https://jenkins-x.io/blog/2020/04/29/cjxd-april-20/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/04/29/cjxd-april-20/</guid>
      <description>
        
        
        &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/logo/cloudbees.png&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;Despite the challenges of this particular time in the world it amazes me how members of the Jenkins X community continue to rise up and generously contribute to the project.  This month&amp;rsquo;s CJXD release is with no lack of upstream community contributions, thus I&amp;rsquo;m kicking off this blog with a very sincere THANK YOU to the contributors.&lt;/p&gt;
&lt;p&gt;A number of folks here at CloudBees continue to focus on Jenkins X stability and supportability.  In parallel, other folks are focused on new features and expanding support for additional platforms.  In an effort to help us continue these efforts, we completed the plan to remove code for Jenkins static masters in favor of going full-on with Tekton pipelines.  In addition, a number of unsupported commands scheduled for deprecation have now been removed from the code.&lt;/p&gt;
&lt;p&gt;The benefits of deprecating unsupported features and commands allows for more focus, clearer messaging, better documentation, better quality, faster development of new features, and expanding Kubernetes provider support.  You can learn more about our decision to remove traditional Jenkins masters &lt;a href=&#34;https://jenkins-x.io/blog/2020/03/11/tekton/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This month&amp;rsquo;s CJXD release continues to add value with stability improvements as well as some minor enhancements.  A total of &lt;a href=&#34;https://docs.cloudbees.com/docs/release-notes/latest/cloudbees-jenkins-x-distribution/v9&#34;&gt;38 relevant issues&lt;/a&gt; have been addressed since the previous release.  Over &lt;a href=&#34;https://github.com/jenkins-x/jx/pulls?q=is%3Apr+is%3Aclosed+label%3Aapproved+closed%3A2020-03-29..2020-04-29+&#34;&gt;40 total upstream pull requests&lt;/a&gt; were merged since the previous release and all of them have been absorbed in to this CJXD release.  Community members submitted 10 of these PR&amp;rsquo;s and we greatly appreciate these contributions!&lt;/p&gt;
&lt;p&gt;Looking ahead to the upcoming CJXD release in May, a good deal of energy over the past three months has been spent on several significant efforts which will begin to surface.  Without upsetting the product management team too much, I&amp;rsquo;ll just write about some of the things the engineering team is working on, BUT not necessarily what will be released or when&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Lighthouse: Andrew Bayer took over completing James Strachan&amp;rsquo;s initial
stab at Lighthouse (Lighthouse is our very own lighter-weight Prow
substitute). Andrew has been working on it nearly full-time and it
really shows. Lighthouse is running great in our busy production
cluster and, well, keep your eye out upstream since I expect great
things VERY soon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Terraform: Hardy Ferentschik has been working diligently on an effort
to eventually remove cloud orchestration concerns from Jenkins X. As a
result we have some awesome new Terraform scripts for GKE and EKS
where you can prepare your cluster and then leverage &lt;code&gt;jx boot&lt;/code&gt; to
deploy Jenkins X. I anticipate official support for this in an
upcoming CJXD release, hopefully very soon. You can read more about
this in the upstream
&lt;a href=&#34;https://jenkins-x.io/docs/getting-started/&#34;&gt;Jenkins X Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CLI: Adam Magan did a huge amount of tedious work removing code for a
multitude of deprecated commands. Thankfully that is largely behind us
and Adam can move on to other more gratifying tasks. You can read more
about which commands were deprecated in the
&lt;a href=&#34;https://docs.cloudbees.com/docs/release-notes/latest/cloudbees-jenkins-x-distribution/v9#_deprecations_and_removals&#34;&gt;CJXD 9 Release Notes&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JX Labs: Dave Conde disappeared a couple weeks ago to work with James
Strachan and James Rawlings on something and I expect him to resurface
in several weeks. If he doesn&amp;rsquo;t return, I&amp;rsquo;ll be sending out a search
party.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So there you have it.  Enjoy the release.  Please stay safe, take care of yourself, and take care of each other.&lt;/p&gt;
&lt;p&gt;Deane&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Season of Docs 2020 📄</title>
      <link>https://jenkins-x.io/blog/2020/04/28/season-of-docs-2020/</link>
      <pubDate>Tue, 28 Apr 2020 11:44:25 +0100</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/04/28/season-of-docs-2020/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://developers.google.com/season-of-docs&#34;&gt;Google Season of Docs&lt;/a&gt; fosters collaboration between open source projects and technical writers. This program brings the open source and technical writing communities together to improve documentation and increase awareness of open source. During the program, technical writers are given support in contributing to open source, information about the technical project to which they are contributing, and a stipend.&lt;/p&gt;
&lt;p&gt;Jenkins X welcomes the opportunity to collaborate with technical writers on improving the Jenkins X documentation. We are excited to apply to participate in Google Season of Docs!&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/community/events/SeasonofDocs_Logo_.png&#34;/&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;project-ideas&#34;&gt;Project Ideas&lt;/h3&gt;
&lt;p&gt;Jenkins X invites technical writers to engage with our ongoing efforts to restructure and update the Jenkins X documentation. There are a number of ongoing projects, and technical writers are welcome to engage with them or to make their own proposals in any area of Jenkins X documentation. We welcome the experience and perspecitve of new contributors and encourage proposals based on a technical writer&amp;rsquo;s interests and expertise.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Refactor the existing documentation to provide an improved user experience or a more accessible information architecture:&lt;/p&gt;
&lt;p&gt;We are currently in the process of restructuring the information architecture on the docs site. We recognise this is an iterative process and would welcome input from a technical writer on further improvements to create an accessible information architecture and improve the user experience.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improve our &lt;a href=&#34;https://jenkins-x.io/community/documentation/&#34;&gt;contributor’s guide&lt;/a&gt; to ensure the information for new contributors is clear and well organised, including basic information about getting started as a contributor to Jenkins X, as well as any rules around licence agreements, processes for pull requests and reviews, building the project, and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a tutorial for provisioning a Kubernetes cluster and installing Jenkins X with &lt;code&gt;jx boot&lt;/code&gt; on platforms that are not covered with Terraform. Currently, the &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/&#34;&gt;Get started page&lt;/a&gt; gives the incorrect impression that Jenkins X works only in GKE (Google Cloud Platform) and EKS (Amazon Web Services).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- * Write a how-to guide on using the new Terraform scripts to create Kubernetes clusters. Currently, on the docs site there is a [TODO for documentation on using Terraform to set up cloud resources](https://jenkins-x.io/docs/labs/boot/getting-started/cloud/terraform/). Using Terraform scripts to create clusters makes cluster creation more transparent and can increase default security. For more information on using Terraform scripts, please see a [recent office hours demo](https://www.youtube.com/watch?v=yujge0PHxd4) by [Hardy Ferentschik](https://github.com/hferentschik). --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Build out &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/first-project/&#34;&gt;Creating Projects&lt;/a&gt; section to include new or extended sections such as Understanding Buildpacks, New Project With Quickstart Or Import, Defining Environments, etc. The GSoD writer would work with the Jenkins X engineering team and community to build out those pages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create FAQs for select docs pages. The GSoD writer would read through our &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;Kubernetes slack channels&lt;/a&gt; and &lt;a href=&#34;https://github.com/jenkins-x/jx/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;closed issues&lt;/a&gt; to identify the most common questions we are asked and to take the answers given to build out the FAQs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-important-dates&#34;&gt;📆 Important Dates&lt;/h3&gt;
&lt;p&gt;The main part of Season of Docs runs for three months, from September to December 2020, but the application period for technical writers ends on July 9, 2020. &lt;a href=&#34;https://developers.google.com/season-of-docs/docs/timeline&#34;&gt;Detailed GSoD Timeline can be found here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;May 4, 2020: Deadline for Jenkins X to apply to Season of Docs&lt;/li&gt;
&lt;li&gt;May 11 - June 8, 2020: Technical writers discuss project ideas with mentoring organisations&lt;/li&gt;
&lt;li&gt;July 9, 2020: Deadline for technical writer applications&lt;/li&gt;
&lt;li&gt;September 14 - December 5, 2020: Technical writers work on their projects with guidance from mentors&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-come-meet-us-and-ask-us-questions&#34;&gt;👋 Come meet us and ask us questions&lt;/h3&gt;
&lt;p&gt;We welcome technical writers to join our slack channels and our office hours. We&amp;rsquo;d be happy to answer your questions and guide you with your pull requests!&lt;/p&gt;
&lt;p&gt;Talk to us on our slack channels, which are part of the Kubernetes slack. Join  Kubernetes slack &lt;a href=&#34;http://slack.k8s.io/&#34;&gt;here&lt;/a&gt;, and find us on our channels:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;#jenkins-x-dev for developers of Jenkins X&lt;/li&gt;
&lt;li&gt;#jenkins-x-user for users of Jenkins X&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also have online office hours, during which we talk about new developments in Jenkins X and you are welcome to ask us questions. We meet for office hours &lt;strong&gt;every other Tuesday&lt;/strong&gt; at 15:00 UTC (&lt;em&gt;See your timezone &lt;a href=&#34;https://time.is/1500_in_UTC&#34;&gt;here&lt;/a&gt;&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Next office hours are on &lt;strong&gt;5 May&lt;/strong&gt;. Join us here: &lt;a href=&#34;https://zoom.us/j/397862697&#34;&gt;https://zoom.us/j/397862697&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;additional-information&#34;&gt;Additional Information&lt;/h3&gt;
&lt;h4 id=&#34;technical-writers&#34;&gt;Technical Writers&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/community/documentation/&#34;&gt;Contributing to the Jenkins X documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/season-of-docs/docs/tech-writer-guide&#34;&gt;GSoD Technical Writer guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/season-of-docs/docs/timeline&#34;&gt;GSoD Timeline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mentors&#34;&gt;Mentors&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/season-of-docs/docs/mentor-guide&#34;&gt;GSoD Mentor Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/season-of-docs/docs/timeline&#34;&gt;GSoD Timeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/season-of-docs/docs/project-selection&#34;&gt;Selecting projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/season-of-docs/docs/tech-writer-collaboration&#34;&gt;Working with a technical writer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;We&amp;rsquo;d love your help to make Jenkins X even more awesome and welcome your participation!&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: CloudBees contributions to Jenkins X - March 2020</title>
      <link>https://jenkins-x.io/blog/2020/03/25/cjxd-march-20/</link>
      <pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/03/25/cjxd-march-20/</guid>
      <description>
        
        
        &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/logo/cloudbees.png&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;March has been a really busy month for us working on Jenkins X, several exciting projects are now well underway.&lt;/p&gt;
&lt;p&gt;Recently at office hours we discussed a &lt;a href=&#34;https://github.com/jenkins-x/enhancements/tree/master/proposals/3&#34;&gt;proposal to improve how we provision&lt;/a&gt; the cloud resources (storage buckets, service accounts &amp;amp; cryptographic keys) that Jenkins X requires.
The idea behind this enhancement is that some companies may require the infrastructure to be provisioned by a user (someone in operations perhaps) that requires a different set of permissions than the user that runs &lt;code&gt;jx boot&lt;/code&gt; to install Jenkins X.
Previously this happened when a user ran &lt;code&gt;jx boot&lt;/code&gt;. But from community feedback we learned that some users would like this process split.
To help with this we are in the process of developing Terraform modules that you can use to create the necessary resources.
Work on this has been moving really quickly and we have been focusing on support for GKE, EKS &amp;amp; AKS.
We are really excited to see the awesome contributions from &lt;a href=&#34;https://github.com/helayoty&#34;&gt;Heba Elayoty&lt;/a&gt; of &lt;a href=&#34;https://www.microsoft.com&#34;&gt;Microsoft&lt;/a&gt; on adding support for &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/aks/&#34;&gt;Azure Kubernetes Service&lt;/a&gt; in Jenkins X.
If you do not use Terraform and you have another way of provisioning infrastructure don&amp;rsquo;t worry, we&amp;rsquo;ll be providing lots of information in the docs on exactly what you will need to create before booting Jenkins X.
For anyone that would like more information or would like to contribute to the Terraform modules you will find the git repository for GKE &lt;a href=&#34;https://github.com/jenkins-x/terraform-google-jx&#34;&gt;here&lt;/a&gt; and EKS &lt;a href=&#34;https://github.com/jenkins-x/terraform-aws-eks-jx&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another area that some of the team are working in right now is the implementation of the depreciation policy, PRs are being lined up to remove commands that have been market for &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;deprecation&lt;/a&gt;. This will help cut down the code surface area a bit and make Jenkins X a bit easier to maintain.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/jenkins-x-labs&#34;&gt;labs team&lt;/a&gt; has also been extremely busy experimenting with &lt;a href=&#34;https://helm.sh/blog/helm-3-released/&#34;&gt;helm3&lt;/a&gt; and &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt; with a view to using it as a foundation for multi cluster support in Jenkins X.
We still have a bit to learn before we start to roll this into Jenkins X. One of the next areas we&amp;rsquo;ll be experimenting with is what the upgrade process from a helm2 environment to a helm3 environment will look like.
You can jump over to the new &lt;a href=&#34;https://jenkins-x.io/docs/labs/&#34;&gt;lab&amp;rsquo;s documentation&lt;/a&gt; for more information on experiments and you can find the lab&amp;rsquo;s issue tracker &lt;a href=&#34;https://github.com/jenkins-x-labs/issues/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We have also fixed around &lt;a href=&#34;https://github.com/jenkins-x/jx/issues?q=is%3Aissue+is%3Aclosed+updated%3A2020-03-01..2020-03-25+-label%3Alifecycle%2Frotten+&#34;&gt;60 issues&lt;/a&gt; this month.
We are constantly tracking our progress on closing out issues. The graph below shows the number of opened and closed issues on a weekly basis since September and the delta between them.
The trend over time clearly shows we are making good progress.
&lt;img src=&#34;https://jenkins-x.io/images/march-fixes-graph.png&#34;/&gt;&lt;/p&gt;
&lt;p&gt;We are delighted to announce the March release (Release 8) of the CloudBees Jenkins X Distribution is now available. As always, you can download the latest distribution &lt;a href=&#34;https://www.cloudbees.com/products/cloudbees-jenkins-x-distribution/download&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Google Summer of Code 2020 ☀️</title>
      <link>https://jenkins-x.io/blog/2020/03/23/gsoc2020/</link>
      <pubDate>Mon, 23 Mar 2020 11:26:18 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/03/23/gsoc2020/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X is incredibly happy to participate in &lt;a href=&#34;https://summerofcode.withgoogle.com/&#34;&gt;Google Summer of Code 2020&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Jenkins X has been open source from its inception and many of the founders and core contributors to Jenkins X have been deeply involved in open source for years. We love open source for many reasons, including how it enables rapid innovation and collaboration among remote, distributed teams and communities. For these reasons and more, we are very happy to participate in Google Summer of Code.&lt;/p&gt;
&lt;br&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/community/events/GSoC-logo.png&#34;/&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;what-is-google-summer-of-code&#34;&gt;What is Google Summer of Code&lt;/h2&gt;
&lt;p&gt;Google Summer of Code is a global program focused on bringing more student developers into open source software development.&lt;/p&gt;
&lt;p&gt;Working remotely, from anywhere in the world, successful student participants receive a stipend, enabling them to focus on their programming projects for three months. Volunteer mentors help students with project planning, provide guidance, answer questions, and introduce the student to the community.&lt;/p&gt;
&lt;section class=&#34;py-5&#34;&gt;
    &lt;div class=&#34;container&#34;&gt;
      &lt;div class=&#34;row&#34;&gt;
        &lt;div class=&#34;col-xs-12 col-lg-6&#34;&gt;
          &lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
              &lt;iframe class=&#34;embed-responsive-item&#34; width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/S6IP_6HG2QE&#34; frameborder=&#34;0&#34;
              allow=&#34;autoplay; encrypted-media&#34; allowfullscreen=&#34;&#34;&gt;&lt;/iframe&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&#34;col-sm-hidden col-lg-2&#34;&gt;&lt;/div&gt;
        &lt;div class=&#34;col-sm-12 col-lg-4&#34;&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
&lt;p&gt;When applying to GSoC, students create a project proposal. Students often use as the basis for their proposal suggested project ideas. Jenkins X has three suggested project ideas. To find out more about each one click on the links below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins.io/projects/gsoc/2020/project-ideas/jenkins-x-apps-consolidation/&#34;&gt;Consolidate the use of Apps / Addons&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins.io/projects/gsoc/2020/project-ideas/jenkins-x-boot-apps/&#34;&gt;Create Boot Apps&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins.io/projects/gsoc/2020/project-ideas/jenkins-x-openwrt-ppa/&#34;&gt;Personal Package Archive platform for OpenWrt&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Note: Jenkins X has been proposed as the CI/CD platform for this project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;p&gt;💻 To find out more about how to apply click &lt;a href=&#34;https://developers.google.com/open-source/gsoc/help/student-advice&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;📅 Please note the timeline for the programme &lt;a href=&#34;https://summerofcode.withgoogle.com/how-it-works/#timeline&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We look forward to reading your applications and working with you on the Jenkins X project!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X  ❤ Tekton</title>
      <link>https://jenkins-x.io/blog/2020/03/11/tekton/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/03/11/tekton/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X is committing fully to Tekton as its pipeline execution engine. We are convinced that this is the right choice for Jenkins X, as a cloud-native CI/CD platform on Kubernetes, and for our users.&lt;/p&gt;
&lt;p&gt;This means we are formally deprecating - and will be removing - traditional Jenkins static masters support inside Jenkins X. We are excited about the new way forward, which we’ll discuss further below, but it’s important to be clear about what this means for current users. If you are already using Jenkins X with Tekton-based pipelines, then nothing will change for you, and you do not need to change anything. If you’re running a traditional Jenkinsfile on Jenkins X, then you have three choices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Continue using static masters with a version of Jenkins X that supports Jenkins static masters
&lt;ul&gt;
&lt;li&gt;Note that for versions of Jenkins X that support Jenkins static masters we will not provide any security fixes either to the jx CLI or to the Jenkins image used after mid April.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Return to a more optimized Jenkins installation&lt;/li&gt;
&lt;li&gt;Or, if you plan on updating your version of Jenkins X to keep up with the latest features, then you will need to adapt your setup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post, we will discuss how we arrived at this decision, why there is currently a choice between two different pipeline execution engines, and why it is better for the project and for our users to standardize on one. We will go over in more detail what these changes mean for current users, and the options we have to help current users on Jenkins static masters with these changes.&lt;/p&gt;
&lt;h2 id=&#34;a-story-of-pipeline-engines&#34;&gt;A story of Pipeline Engines&lt;/h2&gt;
&lt;p&gt;When Jenkins X was founded two years ago, Jenkins was chosen as its pipeline execution engine. Why?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Familiarity: Jenkins is the most widely used orchestration system in history, and at CloudBees we know it quite well.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There was not a Kubernetes native pipeline engine, ie, there was no Tekton&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A year later, Tekton had been founded and Jenkins X rapidly adopted the new Kubernetes-native pipeline engine. It became one of two options for users to choose as their pipeline execution engine within Jenkins X. This was huge for us, because Jenkins was never built to be used in the way we were using it, and the way Jenkins is architected made it very difficult to build Jenkins X forward with our dream features and keep things compatible and running well - Tekton solved all these problems.&lt;/p&gt;
&lt;p&gt;As a result, though, the users of Jenkins X can now choose between two very different pipeline execution engines &amp;ndash; Jenkins static masters or our own Tekton-based pipelines.&lt;/p&gt;
&lt;p&gt;Ideally, a developer using Jenkins X does not need to think about the pipeline engine executing their CI/CD pipelines.  In practice, though, the Jenkins X user experience varies significantly depending on which pipeline engine the user choses. This is because of technical complexity and use case difference that makes standardization hard to achieve and even harder to maintain.&lt;/p&gt;
&lt;p&gt;As more functionality is added to the project which fits seamlessly with Tekton, Jenkins as a pipeline engine for Jenkins X increasingly feels unoptimized and inappropriate for the project. As amazing as Jenkins is, it wasn’t built to be an ephemeral cloud-native pipeline engine inside of a larger workflow tool, and maintaining Jenkins as a pipeline engine for Jenkins X has proven difficult and complex. The Jenkins X user experience with Jenkins static masters is already lesser than the user experience with Tekton, and it will only degrade further over time. For this reason, we have been recommending Tekton as the default pipeline engine in Jenkins X for more than 6 months now.&lt;/p&gt;
&lt;p&gt;The way we see it, traditional Jenkins running on Kubernetes makes sense for Jenkins-based apps that already exist and for teams that aren’t ready to change their tooling and their process. Jenkins is rock-solid and can run forever doing what it does today for the hundreds of thousands of teams that use it. But, that’s not what Jenkins X is for. Jenkins X is for brand new applications, being built from the ground up for the world of Kubernetes-based, cloud-native development - and we want to make things as great as possible for all the developers building those kinds of applications right now.&lt;/p&gt;
&lt;h2 id=&#34;kubernetes-native&#34;&gt;Kubernetes native&lt;/h2&gt;
&lt;p&gt;Although for users the pipeline execution engine should be an implementation detail, for the Jenkins X project Tekton is clearly a better, more natural, fit. Like Jenkins X, Tekton is Kubernetes native: it was designed from the ground up to leverage Kubernetes, not merely integrate with Kubernetes.&lt;/p&gt;
&lt;p&gt;The Jenkins X core team has chosen to standardize on Tekton as a pipeline execution engine for the following reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes native&lt;/li&gt;
&lt;li&gt;Declarative, not scripted
&lt;ul&gt;
&lt;li&gt;This makes pipelines easier to author, read, and maintain&lt;/li&gt;
&lt;li&gt;Highly opinionated syntax, making it easier to work in a best-practices way&lt;/li&gt;
&lt;li&gt;YAML! Not Groovy or Groovy-based syntax&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, Jenkins X has its own syntax on top of Tekton, to improve the user experience. Tekton’s syntax is very explicit, which is excellent for the level at which Tekton is operating. Jenkins X, as a developer-centric CI/CD platform, is able to take the information already available regarding a user’s configuration and provide that context. Additionally, Jenkins X provides an opinionated, best-practices based workflow. For these reasons, the amount of information a user needs to provide is reduced and the user experience is guided and simplified.&lt;/p&gt;
&lt;p&gt;For Jenkins X, as a CI/CD platform on Kubernetes, Tekton is the right choice for the pipeline execution engine. Focusing on one pipeline engine going forward will enable a leaner, cleaner codebase and a better end-user experience. Standardizing on Tekton as the pipeline execution engine for Jenkins X enables the core team to focus on improving the Jenkins X user experience without having to support compatibility with two different pipeline engines.&lt;/p&gt;
&lt;h2 id=&#34;whats-next&#34;&gt;What’s next&lt;/h2&gt;
&lt;p&gt;We’re deprecating traditional Jenkins masters in all new versions of Jenkins X. They will be removed from the codebase of future Jenkins X versions from April 20th.&lt;/p&gt;
&lt;p&gt;While this is an aggressive timeline, it’s important to know that if you’re currently running Jenkins X with traditional Jenkins today, it’s not going to disappear. You won’t be able to upgrade to new versions - but we will cut one final release right before the deadline to give you a stable version to use for as long as you need.&lt;/p&gt;
&lt;p&gt;Next, If you’re looking to migrate existing declarative Jenkins jobs to Jenkins X, we have a &lt;a href=&#34;https://github.com/jenkins-x/jx-convert-jenkinsfile&#34;&gt;partial Jenkinsfile translator&lt;/a&gt; that can help point you in the right direction. While it won’t fully translate all Jenkinsfiles, it will help point you in the right direction to get the ball rolling.&lt;/p&gt;
&lt;p&gt;And finally, if you’d like to keep your Jenkins jobs running but as individual steps inside a Jenkins X pipeline, &lt;a href=&#34;https://jenkins-x.io/docs/labs/jenkins/&#34;&gt;we have a proposal for remote execution&lt;/a&gt; as a new path forward. Since Jenkins itself can be run on Kubernetes, switching to a remote execution step via Jenkins X - or entirely to Jenkins if it makes more sense for you - should be an easy switch to make. We think this is a much better path forward, as it keeps Jenkins entirely out of Jenkins X while still letting you adopt Jenkins X right away and migrate your traditional Jenkins jobs to Tekton-based jobs over time. We expect a working proof of concept for the community soon.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;We know this is a big announcement on a fast timeline and a lot of ideas to take in. We’d love to talk to you about it! Please join the &lt;a href=&#34;https://jenkins-x.io/community/office_hours/&#34;&gt;office hours we have arranged on March 19th&lt;/a&gt; that will be fully dedicated to discussing this.&lt;/p&gt;
&lt;p&gt;You may reach out to me, &lt;a href=&#34;mailto:ejones@cloudbees.com&#34;&gt;Ethan Jones&lt;/a&gt;, if you’d like to discuss things one on one with some of our product and engineering team members.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Walkthrough: Setting up Jenkins X on a Kubernetes cluster</title>
      <link>https://jenkins-x.io/blog/2020/03/10/walkthrough/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/03/10/walkthrough/</guid>
      <description>
        
        
        &lt;p&gt;In this tutorial, we&amp;rsquo;ll walk you through setting up Jenkins X on a Kubernetes cluster hosted on GKE. We will use GitHub as our Git provider.&lt;/p&gt;
&lt;p&gt;The purpose of this tutorial is to give a detailed step-by-step walkthrough of setting up Jenkins X.&lt;/p&gt;
&lt;h3 id=&#34;setup-used-in-this-tutorial&#34;&gt;Setup used in this tutorial&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GitHub as our Git provider and a GitHub user account, eg &lt;code&gt;MarckK&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A Google Cloud Platform (GCP) account with the ability to provision kubernetes resources / create kubernetes clusters&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jenkins X &lt;code&gt;jx&lt;/code&gt; binary installed. See &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/install/&#34;&gt;here for instructions on installing the &lt;code&gt;jx&lt;/code&gt; binary&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Kubernetes command-line tool, which can be installed to your local installation using the &lt;code&gt;jx install&lt;/code&gt; command:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx install dependencies -d kubectl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We are going to create a GitHub organisation which will have two members, a GitHub user account, eg &lt;code&gt;MarckK&lt;/code&gt;, and a GitHub &amp;lsquo;Pipeline&amp;rsquo; bot account, eg &lt;code&gt;jx-bot&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We can create a new GitHub organisation by clicking the &lt;strong&gt;+&lt;/strong&gt; at the top right of GitHub&amp;rsquo;s top navigation bar or by clicking to the &lt;a href=&#34;https://github.com/organizations/plan&#34;&gt;create an organization page&lt;/a&gt;. I chose the free &amp;lsquo;Team for Open Source&amp;rsquo; plan for my new GitHub organisation; this means the organisation will &lt;em&gt;not&lt;/em&gt; have unlimited private repositories. Name your organisation anything you like, eg &lt;code&gt;jenkins-x-space&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Invite your GitHub user account, eg &lt;code&gt;MarckK&lt;/code&gt;, to the organisation. This GitHub user account will create and manage development repositories.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next we create a GitHub Pipeline bot account. This Pipeline bot will automate pull request notifications and create preview environments for quick validation and acceptance for code merging. Your Pipeline bot should be created as a member of your GitHub organisation, eg &lt;code&gt;jenkins-x-space&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Create an entirely new account that will be only for your bot. Name your bot anything you like, eg &lt;code&gt;jx-bot&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The bot account must have a token created in your organization that authenticates the bot and allows it to perform various tasks on the repositories within your organization.&lt;/p&gt;
&lt;p&gt;Generate a Git token for your Pipeline Bot with the correct permissions via this &lt;a href=&#34;https://github.com/settings/tokens/new?scopes=repo,read:user,read:org,user:email,write:repo_hook,delete_repo&#34;&gt;GitHub Link&lt;/a&gt; and &lt;strong&gt;copy the 40 character token&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;


    The 40 character token generated by GitHub is only shown once so you must copy this immediately before you close the browser tab or window, as the token cannot be retrieved once it is displayed. You will be asked for this token later, so please do keep a copy of it.

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;At this point, I signed out of my GitHub Pipeline bot account and back into my GitHub user account, eg &lt;code&gt;MarckK&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;step-1----create-a-kubernetes-cluster&#34;&gt;Step 1 -  Create a Kubernetes cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jx create cluster gke&lt;/code&gt; will create a cluster on Google Kubernetes Engine (GKE), which you can initialise with a name. From the command-line run:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx create cluster gke --skip-installation -n &amp;lt;cluster name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The program opens a web browser and you will be asked to choose the email address associated with your GCP account and to allow the Google Cloud SDK access to your account. After confirming, you can close the browswer page.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Back at the command-line, the &lt;code&gt;jx create cluster&lt;/code&gt; program prompts you to choose your Google Cloud Project from the available list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The program prompts you to choose the Zone nearest to where you would like to install your cluster. For example, if you want your cluster to serve users primarily in the east coast of the United states, you choose &lt;code&gt;us-east1-b&lt;/code&gt; from the available list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The program runs automatically through default questions and begins creating the cluster in your specified zone.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Towards the end, you will see output similar to:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NAME         LOCATION         MASTER_VERSION  MASTER_IP      MACHINE_TYPE   NODE_VERSION    NUM_NODES  STATUS
walkthrough  europe-north1-a  1.14.10-gke.17  35.228.74.166  n1-standard-2  1.14.10-gke.17  3          RUNNING
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Congratulations you now have a Kubernetes cluster!&lt;/p&gt;
&lt;h3 id=&#34;step-2---installing-jenkins-x-on-a-cluster&#34;&gt;Step 2 - Installing Jenkins X on a cluster&lt;/h3&gt;
&lt;!-- ### Edit all this with new jx boot —--git-public` flag (woohoo!)

```bash
jx boot --git-public
```

Does NOT work. Just returns: `Error: unknown flag: --git-public`
This has been implemented for `jx create` or `jx install` [apparently](https://jenkins-x.io/docs/getting-started/setup/boot/#git). Not jx boot. And unfortunately, that happens to be where I would like to have it enabled. --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First clone the &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-boot-config&#34;&gt;Jenkins X Boot configuration repo&lt;/a&gt; and &lt;code&gt;cd&lt;/code&gt; into your newly cloned repo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file of your newly cloned repo, eg. &lt;code&gt;jenkinx-x-boot-config/jx-requirements.yml&lt;/code&gt;. This specifies the requirements of your installation, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;what Kubernetes provider to use&lt;/li&gt;
&lt;li&gt;whether to store secrets in the local file system or vault&lt;/li&gt;
&lt;li&gt;if you are using Terraform to manage your cloud resources&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note, this is the main configuration file for &lt;code&gt;jx boot&lt;/code&gt; and where you make most of your configuration changes.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;jx-requirements.yml&lt;/code&gt; file is interesting to review, see the defaults in place, and make any changes you need.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For my setup, I knew there was one change I needed to make to the &lt;code&gt;jx-requirements.yml&lt;/code&gt;. By default, Jenkins X will create private environment repos. You can see this configured in &lt;code&gt;jx-requirements.yml&lt;/code&gt; as &lt;code&gt;environmentGitPublic: false&lt;/code&gt;. However, I set up a free open source GitHub organization to hold the environment repositories that will be created by Jenkins X, and this type of GitHub organization account does not have access to private repos. To configure Jenkins X to create public environment repositories, set &lt;code&gt;environmentGitPublic&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;jx-requirements.yml&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Save your changes and then on the command line run:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx boot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you are not in a clone of a boot git repository then &lt;code&gt;jx boot&lt;/code&gt; will clone this repository and &lt;code&gt;cd&lt;/code&gt; into the clone.&lt;/p&gt;
&lt;p&gt;You can read more about &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/&#34;&gt;Jenkins X Boot in the documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Your Git and the pre-installation set up for Jenkins X will be checked and validated. You will see printed out:&lt;/p&gt;
&lt;p&gt;`Currently connected cluster is &lt;code&gt;&amp;lt;cluster_name&amp;gt;&lt;/code&gt; in &lt;code&gt;&amp;lt;cluster_location&amp;gt;&lt;/code&gt; in project ```&amp;lt;your_chosen_project&amp;gt;``&lt;/p&gt;
&lt;p&gt;You will be asked to confirm that you would like to &lt;code&gt;jx boot&lt;/code&gt; your &lt;code&gt;&amp;lt;cluster_name&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then you will be asked a series of questions to ensure Jenkins X is installed properly on your cluster:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;You will be asked to input the &lt;code&gt;Git Owner name for environment repositories&lt;/code&gt;: Type in the organistion you created, eg &lt;code&gt;jenkins-x-space&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will be asked to provide &lt;code&gt;Comma-separated git provider usernames of approvers for development environment repository&lt;/code&gt;: Type in the name of the GitHub account that is a member of the organisation you created, eg &lt;code&gt;MarckK&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You may receive a Warning that &lt;code&gt;TLS is not enabled so your webhooks will be called using HTTP.&lt;/code&gt; You will be asked for confirmation to continue.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you type &amp;lsquo;No&amp;rsquo;, the &lt;code&gt;jx boot&lt;/code&gt; process will end with &lt;code&gt;error: cannot continue because TLS is not enabled.&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you type &amp;lsquo;Yes&amp;rsquo;, then namespace &lt;code&gt;jx&lt;/code&gt; will be created in your cluster and Jenkins X booted in that namespace.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You may be asked if you wish to upgrade &lt;code&gt;jx&lt;/code&gt;. It is recommended you say &amp;lsquo;Yes&amp;rsquo; and then re-run &lt;code&gt;jx boot&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There will be information logged on enabling storage on GKE. You do not need to enable storage for this walkthrough tutorial.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will see information on the pipeline steps of JX Boot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will be asked &lt;code&gt;Jenkins X Admin Username&lt;/code&gt;: Type in a username or press return to have the default username of &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will then be asked for &lt;code&gt;Jenkins X Admin Password&lt;/code&gt;: Type one in.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will then be asked for &lt;code&gt;Pipeline bot Git username&lt;/code&gt;: Type in the name of the Pipeline Bot you created, eg &lt;code&gt;jx-bot&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will then be asked for &lt;code&gt;Pipeline bot Git email address&lt;/code&gt;: Type in the email address you used when setting up your Pipeline Bot.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will then be asked for &lt;code&gt;Pipeline bot Git token&lt;/code&gt;: Type in the token generated and saved previously.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will be asked, &lt;code&gt;Do you want to configure an external Docker Registry?&lt;/code&gt;: &amp;lsquo;No&amp;rsquo; is sufficient for this tutorial&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;More pipeline steps will be run. You should see output that your pods are running and other verification information telling you the state of your Jenkins x set-up.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then you will see confirmation on the state of your installation process, such as:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Installation is currently looking: GOOD&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the organisation you created, eg &lt;code&gt;jenkins-x-space&lt;/code&gt;, there should now be 3 additional repositories for the dev, staging, and production environments, which map to the dev, staging, and production namespaces in your cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jenkins X should be installed on your Kubernetes cluster. 🎉&lt;/p&gt;
&lt;p&gt;To see the Jenkins X environments that have been created, the corresponding GitOps git repos, and the default promotion strategy between environments:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx get environments
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see something similar to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; NAME       LABEL       KIND        PROMOTE NAMESPACE     ORDER CLUSTER SOURCE                                                                    REF    PR
dev        Development Development Never   jx            &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;             https://github.com/jenkins-x-space/environment-walkthrough-dev.git        master
staging    Staging     Permanent   Auto    jx-staging    &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;           https://github.com/jenkins-x-space/environment-walkthrough-staging.git    master
production Production  Permanent   Manual  jx-production &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;           https://github.com/jenkins-x-space/environment-walkthrough-production.git master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note the following details in the PROMOTE column:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Development has &lt;strong&gt;Never&lt;/strong&gt; promote, because you&amp;rsquo;re working locally in this environment and not deploying anything.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Staging environment&amp;rsquo;s default is to &lt;strong&gt;Auto&lt;/strong&gt; promote, meaning any merge performed on the repo&amp;rsquo;s master branch will automatically be deployed as a new version to staging.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Production environment&amp;rsquo;s default is to have a &lt;strong&gt;Manual&lt;/strong&gt; promotion strategy, meaning that you will have to manually promote your staging application version into production by using a jx promotion command.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The SOURCE column shows each environment&amp;rsquo;s configuration git repo.&lt;/p&gt;
&lt;h3 id=&#34;step-3---create-an-application&#34;&gt;Step 3 - Create an application&lt;/h3&gt;
&lt;p&gt;Now that you have a working cluster with Jenkins X installed, you are going to create an
application that can be built &amp;amp; deployed with Jenkins X.&lt;/p&gt;
&lt;h3 id=&#34;using-a-quickstart&#34;&gt;Using a quickstart&lt;/h3&gt;
&lt;p&gt;JX has a &lt;code&gt;create quickstart&lt;/code&gt; command that will create a build from a standardised template.
To run this command, change your directory so that you are no longer within the &lt;code&gt;jenkins-x-boot-config&lt;/code&gt; directory, then type the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx create quickstart --git-public&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We are adding the &lt;code&gt;--git-public=true&lt;/code&gt; flag to ensure that our new quickstart application will create repositories that are public on GitHub, as our freemium GitHub organisation requires.&lt;/p&gt;
&lt;p&gt;For this example, select &lt;code&gt;golang-http&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You will be asked a series of questions such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Do you wish to use &amp;lt;your GitHub user name&amp;gt; as the Git user name?&lt;/code&gt;: Choose &lt;code&gt;y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Who should be the owner of the repository?&lt;/code&gt;: Choose the organisation you have created, eg &lt;code&gt;jenkins-x-space&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Enter the new repository name&lt;/code&gt;: Choose a name for your new application, such
as &lt;code&gt;jx-tutorial&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JX will then guide you through setting up the git repository for the application.&lt;/p&gt;
&lt;p&gt;If this is the first application you have created, it may take a few minutes to download all
of the required builder images in order to build/deploy the application.&lt;/p&gt;
&lt;p&gt;To view the status of the application, you can use the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx get activity -f jx-tutorial -w
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note: -f is for &amp;ndash;filter and -w is for &amp;ndash;watch&lt;/p&gt;
&lt;p&gt;When the pipeline is complete, to view the application in each environment along with urls:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx get applications
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;promote-the-application-to-production&#34;&gt;Promote the application to production&lt;/h3&gt;
&lt;p&gt;Using the &lt;code&gt;jx promote&lt;/code&gt; command, you can push this version from staging to
production.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cd jx-tutorial
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;If you have 2FA enabled on your GitHub account, then you may need to use an api token as your password when prompted.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx promote jx-tutorial --version 0.0.1 --env production
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can check the progress of the production deployment using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx get activity -f jx-tutorial -w
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx get applications
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;congratulations&#34;&gt;Congratulations&lt;/h2&gt;
&lt;p&gt;You’re all set!&lt;/p&gt;
&lt;p&gt;You now have a fully configured Jenkins X installation on Google Kubernetes Engine.&lt;/p&gt;
&lt;p&gt;To avoid running up unnecessary costs, you may wish to shut down your kubernetes cluster at this point.  To view all clusters running with the current account use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud container clusters list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To delete the cluster run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud container clusters delete &amp;lt;clustername&amp;gt; --zone &amp;lt;zone&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Blog: Google Secrets Manager Kubernetes controller</title>
      <link>https://jenkins-x.io/blog/2020/03/05/gsm-controller/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/03/05/gsm-controller/</guid>
      <description>
        
        
        &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/logo/secret-manager.png&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;In Jenkins X Labs we have been working with &lt;a href=&#34;https://cloud.google.com/secret-manager/docs&#34;&gt;Google Secrets Manager&lt;/a&gt; (which is currently in Beta so may still change). It is an extremely nice experience and if you also use Google Container Engine (GKE), Google’s managed Kubernetes service then we can make use of another cool feature, &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity&#34;&gt;Workload Identity&lt;/a&gt; to automatically access secrets in their hosted service using a Kubernetes service account.&lt;/p&gt;
&lt;p&gt;One of the initial challenges we had was we didn’t see an obvious way to automatically create Kubernetes secrets that include the data stored from Secrets Manager. So we created a little standalone controller that runs in a Kubernetes cluster and watches for Kubernetes secrets. When one is added or updated with a particular annotation the controller will access the secret using its ID in Secrets Manager and update the Kubernetes secret with the value.&lt;/p&gt;
&lt;h1 id=&#34;example&#34;&gt;Example&lt;/h1&gt;
&lt;p&gt;Full docs and code can be found here: &lt;a href=&#34;https://github.com/jenkins-x-labs/gsm-controller/blob/master/README.md&#34;&gt;https://github.com/jenkins-x-labs/gsm-controller/blob/master/README.md&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Create an empty secret&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl create secret generic my-secret
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Add the magic annotation that the controller uses to lookup the correct secret in Googles Secret Manager&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl annotate secret my-secret jenkins-x.io/gsm-secret-id=foo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Optionally if you want the Kubernetes secret to use a specific key for the data you can add another annotation&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl annotate secret my-secret jenkins-x.io/gsm-kubernetes-secret-key=credentials.json
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;
&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/wLHgkhzeNe8&#34; frameborder=&#34;0&#34; allow=&#34;autoplay; encrypted-media&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h1 id=&#34;feadback&#34;&gt;Feadback&lt;/h1&gt;
&lt;p&gt;This is still early days and we’d love folks to try it and provide feedback (&lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;slack&lt;/a&gt; or the new &lt;a href=&#34;https://github.com/jenkins-x-labs/issues/issues&#34;&gt;labs issues&lt;/a&gt;) on whether it is useful to others and how we can improve it together.&lt;/p&gt;
&lt;p&gt;On Jenkins X we make use of Hashicorp’s Vault which is great although it is another service users have to run, manage and upgrade. Wherever possible Jenkins X aims to use the Cloud well, so when users are installing Jenkins X onto a Cloud Provider we would like to leverage their other managed services, reducing the deployments we need to run in users clusters for Jenkins X.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Jenkins X Labs</title>
      <link>https://jenkins-x.io/blog/2020/02/28/jxl-feb-20/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/02/28/jxl-feb-20/</guid>
      <description>
        
        
        &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/logo/labs.png&#34; width=&#34;40%&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;Jenkins X has entered it&amp;rsquo;s third year and as always we are looking for big ways things can be improved.  Briefly reflecting on the last two years:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;first was about initial adoption and finding out what developers were both looking for and needed when moving to Kubernetes.  We started off using a Static Jenkins server for example to orchestrate builds and other open source projects that folks would be familiar with, to aid their journey to the cloud.  We quickly realised that the Jenkins X community wanted to leverage more of their cloud capabilities and so we began to swap in cloud native implementations like Tekton and Prow, as well as better integration with managed cloud services like storage, dns, IAM etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;second year was about improving that developer experience and making the architectural approaches we settled on a reliable experience.  This has been a lot of work and there&amp;rsquo;s still a lot more to do, infact we know this will always be an ongoing effort.  Some of the recent highlights of this effort can start to be seen with more details on this &lt;a href=&#34;https://jenkins-x.io/blog/2020/02/26/cjxd-feb-20/&#34;&gt;blog&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;now that we have started our third year we look at how we can effectively innovate in Jenkins X, grow collaborations with other open source projects and communities and of course build up the Jenkins X community itself.  All the time we need to do this with the second years efforts in mind and not lose sight that we need to evolve as a mature project that people and teams can rely on.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We&amp;rsquo;ve started by introducing the idea of an enhancement process.  The aim here is to raise ideas and larger problems that folks would like to collaborate on earlier than when a Pull Request is created.  Sometimes issues are a bit low level and for bigger efforts we&amp;rsquo;d like to raise the profile, potentially discuss in office hours, getting as much early feedback as possible and hope to attract folks looking to be involved.  This is aimed to be a lightweight process and be used to help get things right earlier.  It is not meant to stifle progress, rather enhance it.  Not all changes to Jenkins X should have an enhancement proposal, we still want to attract contributions but for larger efforts this will hopefully help.&lt;/p&gt;
&lt;p&gt;Enhancement proposals are currently raised as a pull request to this repository &lt;a href=&#34;https://github.com/jenkins-x/enhancements&#34;&gt;https://github.com/jenkins-x/enhancements&lt;/a&gt;.  Jenkins X creates a lot of GitHub notifications with all the releases and bot updates but this repo would be useful to &amp;lsquo;watch&amp;rsquo; and see new proposals + discussions as they happen.  Please if you have any views we&amp;rsquo;d absolutely love to hear them and every comment will be treated respectfully and in a safe healthy environment.  We&amp;rsquo;ve already had &lt;strong&gt;GREAT&lt;/strong&gt; input from &lt;a href=&#34;https://github.com/polothy&#34;&gt;polothy&lt;/a&gt;, &lt;a href=&#34;https://github.com/salaboy&#34;&gt;salaboy&lt;/a&gt; and a bunch of core maintainers as well as PMs and engineering managers.  We&amp;rsquo;d like to encourage involvement from any background that would like to help Jenkins X and be part of something that we can all be proud of.&lt;/p&gt;
&lt;p&gt;The second part of this blog wants to take your attention to an enhancement proposal which is currently up for review &lt;a href=&#34;https://github.com/jenkins-x/enhancements/pull/15&#34;&gt;https://github.com/jenkins-x/enhancements/pull/15&lt;/a&gt;.  This aims to tackle the challenge outlined above, of how do we enable rapid innovation, increase contributions and collaborations while keeping Jenkins X stable.  Please take a look and feed any comments on, it is high level for a reason as we are still learning the right balance.&lt;/p&gt;
&lt;p&gt;TL;DR of the above proposal suggests we build out an incubation hub of sorts where we can create new features which we don&amp;rsquo;t know how they might be received, gather feedback and other metrics to decide whether the feature is good to mature into the main Jenkins X org.  The idea is to use an approach where features are ready for &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt; and &lt;code&gt;GA&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We have already started piloting this effort in the &lt;a href=&#34;https://github.com/jenkins-x-labs&#34;&gt;Jenkins X Labs&lt;/a&gt; GitHub org where a small team has been proving out a feature to handle Jenkins X deploying to different clusters including different cloud providers.  The feature is known as multi cluster but we will be documenting, demoing and asking people to help be involved either in development or trials.&lt;/p&gt;
&lt;p&gt;We will be putting together a roadmap, starting off small but would love suggestions &lt;a href=&#34;https://github.com/jenkins-x-labs/issues&#34;&gt;https://github.com/jenkins-x-labs/issues&lt;/a&gt;
It is important to stress that work which happens in the Jenkins X Labs GitHub organisation may or may not mature into the Jenkins X org.  We will work hard to prove out any ideas and and gather as much feedback as we can and improve.  We would be looking to make it clear users opt into using &lt;code&gt;alpha&lt;/code&gt; or &lt;code&gt;beta&lt;/code&gt; features so we maintain a solid base.&lt;/p&gt;
&lt;p&gt;We are super excited by this proposal, the rate of innovation it will unlock and the level of OSS collaboration possible all the time having another focus on stability and reliability.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: CloudBees contributions to Jenkins X - February 2020</title>
      <link>https://jenkins-x.io/blog/2020/02/26/cjxd-feb-20/</link>
      <pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/02/26/cjxd-feb-20/</guid>
      <description>
        
        
        &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/logo/cloudbees.png&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;2020 is fully underway and Jenkins X is feeling the benefits from a lot of hard work from the tail end of last year.  There is now support on EKS for Jenkins X!  Here are the docs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/clouds/amazon/&#34;&gt;https://jenkins-x.io/docs/getting-started/setup/boot/clouds/amazon/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They are still being improved so we&amp;rsquo;d love feedback in the &lt;a href=&#34;https://jenkins-x.io/community/#slack&#34;&gt;Slack channel&lt;/a&gt; or issues (PRs would be even better ;)) on the &lt;a href=&#34;https://github.com/jenkins-x/jx-docs&#34;&gt;website repository&lt;/a&gt; to help improve.  By the way a Pull Request on the docs repo results in a preview environment of the website, so you can see your changes and ask for feedback in true Jenkins X form.&lt;/p&gt;
&lt;p&gt;EKS support includes full TLS and DNS, Vault and documented required IAM roles.&lt;/p&gt;
&lt;p&gt;This is largely a result of contributions from CloudBees as they work on building out CloudBees Jenkins X Distribution (CJXD).  This distro can come with support from CloudBees but is based on the upstream Jenkins X, there&amp;rsquo;s no separate fork so any code that is needed to support EKS and other Jenkins X features goes into the Jenkins X codebase, for the Jenkins X community to benefit from.&lt;/p&gt;
&lt;p&gt;As well as EKS support last month there were 30 issues and enhancements resolved so there&amp;rsquo;s lots of effort to keep continually improving Jenkins X.  At the bottom of this blog is list of the main issues fixed.  An important fix to call out is &lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6568&#34;&gt;6568&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Large ongoing work looks to replace Prow (which handles ChatOps and the communication with GitHub) with Lighthouse, which has wider git server support (including future support for Bitbucket and Gitlab) and a smaller footprint. We hope to have this switch completed in April.&lt;/p&gt;
&lt;p&gt;There will be a monthly blog that will describe the improvements that keep making Jenkins X better so please keep an eye out for these and as always let us know via slack or issues how things can be better.&lt;/p&gt;
&lt;p&gt;James R.&lt;/p&gt;
&lt;h2 id=&#34;list-of-issues-fixed-in-february&#34;&gt;List of issues fixed in February&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/5597&#34;&gt;App installation requires Jenkins X with Vault installed&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6589&#34;&gt;BitBucket Server with boot/gitops/vault gets error for \No git service found&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6515&#34;&gt;bug: jx ui not working with latest cli and boot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6668&#34;&gt;bug: overriding &lt;code&gt;env&lt;/code&gt; variables in buildpacks doesn&amp;rsquo;t work&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6679&#34;&gt;Change in googleapis/gnostic breaks \make generate-openapi&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6568&#34;&gt;controllerbuild can&amp;rsquo;t list config maps and so can&amp;rsquo;t get git credentials&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6577&#34;&gt;CreateTestJxHomeDir only creates tmp JX_HOME in case gitAuth.yaml exists&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6617&#34;&gt;Dev pipeline fails on fresh jx boot install using bitbucketserver&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/5669&#34;&gt;Diagnose and fix sporadic hangs on environment promotes in boot-vault and boot-local versions BDD tests&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6503&#34;&gt;Document and share development steps required to support Jenkins X on Kubernetes providers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/4388&#34;&gt;Document full list of IAM permissions needed when using EKS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6545&#34;&gt;Duplicated SourceRepository resources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6415&#34;&gt;Enhancement: Show ConfigMaps on jx diagnose output&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6579&#34;&gt;Git Authentication fails on GHE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6551&#34;&gt;&lt;code&gt;jx boot&lt;/code&gt; failing on GHE with latest CLI due to failing GET request&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6523&#34;&gt;&lt;code&gt;jx boot&lt;/code&gt; STEP: verify-jenkins-x-environment failing. Returning &lt;code&gt;401&lt;/code&gt; Unauthorized, Body&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6543&#34;&gt;jx boot upgrade replaces OWNERS with OWNERS from jenkins-x-boot-config&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6618&#34;&gt;jx create pullrequest with Gitlab somehow ends up with a -/&amp;quot; in URL&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6482&#34;&gt;jx get build log -&amp;gt; error: secrets \jenkins&amp;quot; not found&amp;quot;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6419&#34;&gt;jx preview fails for repo in bitbucket server&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6596&#34;&gt;Knowing how many resources exist for CRD&amp;rsquo;s is useful when maintaining cluster, a command to list these counts would be helpful&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6637&#34;&gt;Maven builders in meta pipeline should mount settings.xml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6685&#34;&gt;Not able to boot Jenkins X with local changes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6722&#34;&gt;Pass the repo owner into &lt;code&gt;jx step git credentials --credential-helper&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6610&#34;&gt;PipelineResource names can be reused, causing collisions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6646&#34;&gt;PipelineRuns rerun by Lighthouse due to Tekton race condition won&amp;rsquo;t be handled by build controller&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/5020&#34;&gt;rename &lt;code&gt;jx step  create install values&lt;/code&gt; to something more accurate &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6698&#34;&gt;REPLACE_ME placeholders in buildpacks using modern syntax aren&amp;rsquo;t replaced&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/6439&#34;&gt;Review command deprecation proposal and generate issues accordingly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/5772&#34;&gt;Unable to re-run &amp;lsquo;jx boot&amp;rsquo; from the initial boot config directory&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: 3 Jenkins X talks at FOSDEM 2020 </title>
      <link>https://jenkins-x.io/blog/2020/02/14/jxfosdemtalks2020/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/02/14/jxfosdemtalks2020/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://fosdem.org/2020/&#34;&gt;FOSDEM 2020&lt;/a&gt; was fantastic! We were thrilled to be there, answering questions about Jenkins X at the Jenkins X - CDF - Jenkins booth.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/community/events/fosdem_booth.jpg&#34; class=&#34;img-thumbnail&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;This was the first year there was a &lt;a href=&#34;https://fosdem.org/2020/schedule/track/continuous_integration_and_continuous_deployment/&#34;&gt;CI/CD devroom&lt;/a&gt; at FOSDEM. Among the excellent talks, three focused on Jenkins X in their demos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choosing The Right Deployment Strategy, by &lt;a href=&#34;https://technologyconversations.com/&#34;&gt;Viktor Farcic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Progressive Delivery: Continuous Delivery the Right Way, by &lt;a href=&#34;https://twitter.com/csanchez&#34;&gt;Carlos Sanchez&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A Practical CI/CD Framework for Machine Learning at Massive Scale, by &lt;a href=&#34;https://twitter.com/axsaucedo&#34;&gt;Alejandro Saucedo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;choosing-the-right-deployment-strategy&#34;&gt;Choosing The Right Deployment Strategy&lt;/h3&gt;
&lt;p&gt;by &lt;a href=&#34;https://technologyconversations.com/&#34;&gt;Viktor Farcic&lt;/a&gt;&lt;/p&gt;
&lt;section class=&#34;py-5&#34;&gt;
    &lt;div class=&#34;container&#34;&gt;
      &lt;div class=&#34;row&#34;&gt;
        &lt;div class=&#34;col-xs-12 col-lg-6&#34;&gt;
          &lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
              &lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://video.fosdem.org/2020/UB4.136/choosing_the_right_deployment_strategy.webm&#34; frameborder=&#34;0&#34;
              allow=&#34;autoplay; encrypted-media&#34; allowfullscreen=&#34;&#34;&gt;&lt;/iframe&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&#34;col-sm-hidden col-lg-2&#34;&gt;&lt;/div&gt;
        &lt;div class=&#34;col-sm-12 col-lg-4&#34;&gt;
          &lt;div class=&#34;w-100 w-50-ns tc&#34;&gt;
            &lt;p class=&#34;h3 m0 p0 pt3&#34;&gt;Pros and cons of different deployment strategies&lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Serverless
            &lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Blue/Green
            &lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Rolling update
            &lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Canary
            &lt;/p&gt;
            &lt;p class=&#34;h3 m0 p0 pt3&#34;&gt;Demo&lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              All strategies automated with Jenkins X
            &lt;/p&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
&lt;h3 id=&#34;progressive-delivery-continuous-delivery-the-right-way&#34;&gt;Progressive Delivery: Continuous Delivery the Right Way&lt;/h3&gt;
&lt;p&gt;by &lt;a href=&#34;https://twitter.com/csanchez&#34;&gt;Carlos Sanchez&lt;/a&gt;&lt;/p&gt;
  &lt;section class=&#34;py-5&#34;&gt;
    &lt;div class=&#34;container&#34;&gt;
      &lt;div class=&#34;row&#34;&gt;
        &lt;div class=&#34;col-xs-12 col-lg-6&#34;&gt;
          &lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
              &lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://video.fosdem.org/2020/UB4.136/progressive_delivery.webm&#34; frameborder=&#34;0&#34;
              allow=&#34;autoplay; encrypted-media&#34; allowfullscreen=&#34;&#34;&gt;&lt;/iframe&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&#34;col-sm-hidden col-lg-2&#34;&gt;&lt;/div&gt;
        &lt;div class=&#34;col-sm-12 col-lg-4&#34;&gt;
          &lt;div class=&#34;w-100 w-50-ns tc&#34;&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Progressive Delivery makes it easier to adopt Continuous Delivery
            &lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Roll out new versions gradually
            &lt;/p&gt;
            &lt;p class=&#34;h3 m0 p0 pt3&#34;&gt;Demo&lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Automated Progressive Delivery pipeline
            &lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Canary deployments and rollbacks in Kubernetes using Jenkins X
            &lt;/p&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;
&lt;h3 id=&#34;a-practical-cicd-framework-for-machine-learning-at-massive-scale&#34;&gt;A Practical CI/CD Framework for Machine Learning at Massive Scale&lt;/h3&gt;
&lt;p&gt;by &lt;a href=&#34;https://twitter.com/axsaucedo&#34;&gt;Alejandro Saucedo&lt;/a&gt;&lt;/p&gt;
&lt;section class=&#34;py-5&#34;&gt;
    &lt;div class=&#34;container&#34;&gt;x
      &lt;div class=&#34;row&#34;&gt;
        &lt;div class=&#34;col-xs-12 col-lg-6&#34;&gt;
          &lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
              &lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://video.fosdem.org/2020/UB4.136/a_practical_cicd_framework_for_machine_learning_at_massive_scale.webm&#34; frameborder=&#34;0&#34;
              allow=&#34;autoplay; encrypted-media&#34; allowfullscreen=&#34;&#34;&gt;&lt;/iframe&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&#34;col-sm-hidden col-lg-2&#34;&gt;&lt;/div&gt;
        &lt;div class=&#34;col-sm-12 col-lg-4&#34;&gt;
          &lt;div class=&#34;w-100 w-50-ns tc&#34;&gt;
            &lt;p class=&#34;h3 m0 p0 pt3&#34;&gt; Key insights on MLOps&lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Monitoring, deployment, orchestration and continuous delivery for machine learning
            &lt;/p&gt;
            &lt;p class=&#34;h3 m0 p0 pt3&#34;&gt;Demo&lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Jenkins X to deploy/promote models across multiple environments
            &lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              KIND (Kubernetes in Docker) to run integration tests in dev environment
            &lt;/p&gt;
            &lt;p class=&#34;f3&#34;&gt;
              Seldon to orchestrate &amp; monitor the models
            &lt;/p&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/section&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Asking and Finding help - Outreachy</title>
      <link>https://jenkins-x.io/blog/2020/01/22/outreachy2019/</link>
      <pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/01/22/outreachy2019/</guid>
      <description>
        
        
        &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/community/events/outreachy.png&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;Neha Gupta is adding support for Kustomize in Jenkins X, to enable Kubernetes native configuration management, while participating in Outreachy from December 2019 to March 2020.&lt;/p&gt;
&lt;h3 id=&#34;outreachy-open-source-contribution-for-applicants--askingfinding-help&#34;&gt;Outreachy open-source contribution for applicants — Asking/Finding help&lt;/h3&gt;
&lt;p&gt;This blog might be helpful for beginners who are fear-stricken or I would say hesitant to ASK, to get lost in the new world while trying to understand any open source project, fear of asking questions that may sound stupid later on or are very obvious!
First of all..
Relax!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Everyone starts from somewhere and has a learning curve!..&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are some pre-requisites that may help you get into open-source development better..&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn basics of git operations. (&lt;a href=&#34;https://learngitbranching.js.org&#34;&gt;https://learngitbranching.js.org&lt;/a&gt; , I find this easy and helpful).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try to find an open-source project (remember : you’re going to contribute to a part of it, so it’s okay if some/many things doesn’t make sense in the beginning, because it’s easier to write code than to understand someone else’s code).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For selecting a project you may also look for Google-Summer-of-Code, Outreachy, Google-Code-In, RSoC and other open-source programs and their organisations that helps people/students/aspiring developers to find your best interest communities and projects.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE : Beware! seeing too many organisations and projects will only confuse you, so start with only one or max 2 projects, try to deep-dive and focus on them.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After selecting the project :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Connect with the community through their communication channels for both developers and users (example : Slack, IRC-Cloud, Zulip, Riot etc )&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try to read the documentation and understand the overall structure and purpose of the project you’re starting to work on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you don’t understand something functionality wise — just ask! Ask on the communication channel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are facing any error — Google search it, or try to look into the existing issues, if you’re not able to move forward and you’re stuck on the same error for more than 45 mins, just ask! Trust me! There’s no harm. In-fact, people of open-source communities appreciate it, feels motivated when there are users asking them about something that they’re passionately building. It also sometimes, helps the community to re-define and re-align the product and some features.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy learning! :)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Happy Second Birthday Jenkins X!</title>
      <link>https://jenkins-x.io/blog/2020/01/14/happy-second-birthday/</link>
      <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/01/14/happy-second-birthday/</guid>
      <description>
        
        
        &lt;p&gt;The Jenkins X project started the beginning of 2019 by celebrating its first birthday on the 14th January, a big event for any open source project, and we have just celebrated our 2nd - hooray!&lt;/p&gt;
&lt;!-- &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/second-birthday/cupcake.png&#34; width=&#34;40%&#34; float=&#34;left&#34;&gt;
&lt;/figure&gt; --&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/second-birthday/7TH_BIRTHDAY.png&#34; width=&#34;55%&#34; float=&#34;center&#34;&gt;
&lt;/figure&gt;
&lt;p&gt;image by Ashley McNamara, &lt;a href=&#34;https://github.com/ashleymcnamara/gophers/blob/master/7TH_BIRTHDAY.png&#34;&gt;creative commons license&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;two-years-of-jenkins-x&#34;&gt;Two Years of Jenkins X!&lt;/h2&gt;
&lt;p&gt;Jenkins X has evolved from a vision of how CI/CD could be reimagined in a cloud native world, to a fast-moving, innovative, rapidly maturing open source project.&lt;/p&gt;
&lt;p&gt;Jenkins X was created to help developers ship code fast on Kubernetes. From the start, Jenkins X has focused on improving the developer experience. Using one command line tool, developers can create a Kubernetes cluster, deploy a pipeline, create an app, create a GitHub repository, push the app to the GitHub repository, open a Pull Request, build a container, run that container in Kubernetes, merge to production. To do this, Jenkins X automates the installation and configuration of a whole bunch of best in breed open source tools, and automates the generation of all the pipelines. Jenkins X also automates the promotion of an application through testing, staging, and production environments, enabling lots of feedback on proposed changes. For example, Jenkins X preview environments allow for fast and early feedback as developers can review actual functionality in an automatically provisioned environment. We’ve found that preview environments, created automatically inside the pipelines created by Jenkins X, are very popular with developers, as they can view changes before they are merged to master.&lt;/p&gt;
&lt;p&gt;Jenkins X is opinionated, yet easily extensible. Built to enable DevOps best practices, Jenkins X is designed to the deployment of large numbers of distributed microservices in a repeatable and manageable fashion, across multiple teams. Jenkins X facilitates proven best practices like trunk based development and GitOps. To get you up and running quickly, Jenkins X comes with lots of example quickstarts.&lt;/p&gt;
&lt;h1 id=&#34;highlights-of-2019&#34;&gt;Highlights of 2019&lt;/h1&gt;
&lt;h2 id=&#34;february-2019-the-rise-of-tekton&#34;&gt;February 2019: The rise of Tekton!&lt;/h2&gt;
&lt;p&gt;In the second half of 2018, Jenkins X embarked on a journey to provide a Serverless Jenkins and run a pipeline engine only when required. That pipeline engine was based on the knative build-pipeline project which evolved into Tekton with much help and love from both the Jenkins and Jenkins X communities. &lt;a href=&#34;https://jenkins-x.io/blog/2019/02/19/jenkins-x-next-gen-pipeline-engine/&#34;&gt;The Jenkins X project completed its initial integration with Tekton in February 2019&lt;/a&gt;. Tekton is a powerful and flexible kubernetes-native open source framework for creating CI/CD pipelines, managing artifacts and progressive deployments.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/second-birthday/plane.png&#34; width=&#34;40%&#34; float=&#34;left&#34;&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;march-2019-jenkins-x-joined-the-continuous-delivery-foundation&#34;&gt;March 2019: Jenkins X joined The Continuous Delivery Foundation!&lt;/h2&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/logo/cdf-logo.png&#34; width=&#34;40%&#34; float=&#34;left&#34;&gt;
&lt;/figure&gt;
&lt;p&gt;Jenkins X joined the Continuous Delivery Foundation (CDF) as a founding project alongside Jenkins, Spinnaker, and Tekton. Joining a vendor-neutral foundation, focused on Continuous Delivery, made a lot of sense to the Jenkins X community. There had already been a high level of collaboration with the Jenkins and Tekton communities, and there have been some very interesting and fruitful (in terms of ideas) discussions about how to work better with the Spinnaker communities also.&lt;/p&gt;
&lt;h2 id=&#34;june-2019-project-lighthouse&#34;&gt;June 2019: Project Lighthouse&lt;/h2&gt;
&lt;p&gt;When Jenkins X embarked on its serverless jenkins journey, it chose to use &lt;a href=&#34;https://github.com/kubernetes/test-infra/tree/master/prow&#34;&gt;Prow&lt;/a&gt;, an event handler for GitHub events and ChatOps. Prow is used by the Kubernetes project for building all of its repos and includes a powerful webhook event handler. Prow is well proven, but heavily tied to GitHub, and not easily extendable to other SCM providers.  At the end of June 2019, work commenced on a lightweight, extensible alternative to Prow, called &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/lighthouse/&#34;&gt;Lighthouse&lt;/a&gt;. Lighthouse supports the same plugins as Prow (so you can still ask via ChatOps for cats and dogs) and the same config - making migration between Prow and Lighthouse extremely easy.&lt;/p&gt;
&lt;h2 id=&#34;june-2019-jenkins-x-boot&#34;&gt;June 2019: Jenkins X Boot!&lt;/h2&gt;
&lt;p&gt;We were very busy in June - a frantic burst of activity before summer vacations!  One common problem Jenkins X users were facing was the installation of Jenkins X on different Kubernetes clusters.  Installing services, ensuring DNS and secrets are correct, and done in the right order is completely different from vendor to vendor, and sometimes cluster to cluster. We realised that to simplify the install, we really needed a pipeline, and whilst this may sound a little like the plot to a film, running a  Jenkins X pipeline to install jx really is the best option. The &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/boot/&#34;&gt;jx boot command&lt;/a&gt; interprets the boot pipeline using your local jx binary. The jx boot command can also be used for updating your cluster.&lt;/p&gt;
&lt;!-- &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/second-birthday/street.png&#34; width=&#34;40%&#34; float=&#34;left&#34;&gt;
&lt;/figure&gt; --&gt;
&lt;h2 id=&#34;july-2019-a-new-logo&#34;&gt;July 2019: A New Logo!&lt;/h2&gt;
&lt;p&gt;As part of the move to the CDF the Jenkins X project took the opportunity to redesign its  logo. An automaton represents the ability of Jenkins X to provide automated CI/CD on Kubernetes and more!&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/second-birthday/jx-logo-stacked-color.png&#34; width=&#34;80%&#34; float=&#34;left&#34;&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;second-half-2019-big-focus-on-stability-and-reliability&#34;&gt;Second half 2019: Big focus on Stability and Reliability&lt;/h2&gt;
&lt;p&gt;The Jenkins X project has been fast paced with lots of different components and moving parts. This fast pace unfortunately led to some instability and a growth of serious issues that risked undermining all the great work there had been on Jenkins X. There has been a concerted effort by the community to increase stability and reduce outstanding issues - the graph below shows the trend over the last year, with a notable downward trend in the number of issues being created in the last 6 months.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/second-birthday/graph.png&#34; width=&#34;80%&#34; float=&#34;left&#34;&gt;
&lt;/figure&gt;
&lt;p&gt;CloudBees also aided this effort by introducing the &lt;a href=&#34;https://www.cloudbees.com/products/cloudbees-jenkins-x-distribution/overview&#34;&gt;CloudBees Jenkins X Distribution&lt;/a&gt; with increased testing around stabilized configurations and deployments and regular releases every month.&lt;/p&gt;
&lt;h2 id=&#34;october-2019-jenkins-x-steering-committee-inaugural-meeting&#34;&gt;October 2019: Jenkins X Steering Committee inaugural meeting&lt;/h2&gt;
&lt;p&gt;The Jenkins X Bootstrap &lt;a href=&#34;https://github.com/jenkins-x/steering&#34;&gt;Steering Committee&lt;/a&gt; is tasked with organising the transition to an elected steering committee, as well as determining what responsibilities the steering committee will have in guiding the Jenkins X project.&lt;/p&gt;
&lt;h2 id=&#34;december-2019-first-jenkins-x-outreachy-mentee&#34;&gt;December 2019: First Jenkins X Outreachy mentee!&lt;/h2&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/community/events/outreachy.png&#34; width=&#34;80%&#34; float=&#34;left&#34;&gt;
&lt;/figure&gt;
&lt;p&gt;Neha Gupta is adding support for Kustomize in Jenkins X, to enable Kubernetes native configuration management, while participating in Outreachy from December 2019 to March 2020. We welcome Neha’s work on Jenkins X and look forward to building on our culture of continuous mentoring!&lt;/p&gt;
&lt;h2 id=&#34;jenkins-x-usage-in-products&#34;&gt;Jenkins X usage in Products&lt;/h2&gt;
&lt;p&gt;The easiest way to try out Jenkins X is undoubtedly through &lt;a href=&#34;https://www.cloudbees.com/products/cloudbees-ci-cd/overview&#34;&gt;CloudBees CI/CD powered by Jenkins X&lt;/a&gt; which provides Jenkins X through the convenience and ease of use of SaaS. No cluster setup, no Jenkins X install, that is all done for you! Currently, &lt;a href=&#34;https://www.cloudbees.com/products/cloudbees-ci-cd/overview&#34;&gt;CloudBees CI/CD powered by Jenkins X&lt;/a&gt; is available for preview. Sign up &lt;a href=&#34;https://www.cloudbees.com/products/cloudbees-ci-cd/overview&#34;&gt;here to try out the new Jenkins X Saas&lt;/a&gt;!&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/second-birthday/boxes.png&#34; width=&#34;40%&#34; float=&#34;left&#34;&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;whats-next&#34;&gt;What’s next?&lt;/h2&gt;
&lt;p&gt;The Jenkins X project is going to be encouraging the community to get involved with more innovation. There are a lot of great ideas to extend the continuous story with integrated progressive delivery (A/B testing, Canary and Blue/Green deployments) and Continuous Verification, alongside more platforms support. We are expecting lots of awesome new features in the &lt;a href=&#34;https://docs.cloudbees.com/docs/cloudbees-jenkins-x-distribution/latest/user-interface/&#34;&gt;CloudBees UI for Jenkins X&lt;/a&gt; too.&lt;/p&gt;
&lt;p&gt;Expect lots more exciting new announcements from Jenkins X in 2020!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: Outreachy - Motivation to apply! </title>
      <link>https://jenkins-x.io/blog/2020/01/10/outreachy2019/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/01/10/outreachy2019/</guid>
      <description>
        
        
        &lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/community/events/outreachy.png&#34;/&gt;
&lt;/figure&gt;
&lt;p&gt;Neha Gupta is adding support for Kustomize in Jenkins X, to enable Kubernetes native configuration management, while participating in Outreachy from December 2019 to March 2020.&lt;/p&gt;
&lt;h3 id=&#34;motivation-to-apply-to-outreachy-&#34;&gt;Motivation to apply to Outreachy :&lt;/h3&gt;
&lt;p&gt;In my graduation class of fifty people we were three girls struggling to set up our space and comfort with the weird reactions we got from fellow students for trying to understand technology.
When my professor asked us to make an autonomous drone. I couldn’t make one, I was shattered, until a friend from computer science batch helped me make one. He showed me some of the cool apps he made, that sparked an interest, and I started building apps, realising that computer science is beyond just coding, it’s more about solving real life problems.&lt;/p&gt;
&lt;p&gt;I’ve transitioned from mobile to web apps, server-end development, robotics, cloud architecting, and also cofounding a startup. I’ve been focusing on using AI to make smarter apps, and help students think beyond, and see the bigger picture. I’m hoping to start an accelerator, regulating the perception about technology, focusing especially on hidden potential behind fear-stricken girls.&lt;/p&gt;
&lt;p&gt;When I heard about Outreachy program and I liked how women and other minority communities are being supported and motivated. It felt something similar to what I’m trying to do with the young girls around me (breaking the stereotypical phenomenon of “girls can’t code”). I felt participating in Outreachy will not only boost my but other girls motivation too! and it’ll also definitely help me grow technologically, socially and mentally.&lt;/p&gt;
&lt;h3 id=&#34;why-excited-about-outreachy&#34;&gt;Why excited about Outreachy?&lt;/h3&gt;
&lt;p&gt;To me it feels really cool to work with a team remotely. The interactions, networking and feel is completely different, especially when it’s open-source (Like ..I get anxious before asking questions on public channels, if the question is too logical and stupid). Also, I’m a fan of open-source contributions, so… (here was the chance).&lt;/p&gt;
&lt;p&gt;Another reason was to interact with the minority community (people who are facing similar issues in STEM like me) and share some instances with them, be on the same page, enlighten and get enlightened (all that networking sounds fun..). I am also excited about the trip.
Why Jenkins-X?&lt;/p&gt;
&lt;p&gt;The Cloud Storage backed Helm repository idea seemed interesting, so I started exploring it. The project was also quite different from other listed (maybe because it was meant for me :D ), I only contributed to it and focused on it.&lt;/p&gt;
&lt;p&gt;Also the community was very welcoming and communications with my mentor were good. He helped me making contributions to the project, he guided me to some good first issues, helped me correct my PR’s. Jenkins-X looked as an interesting open-source project so I’m glad I tried to be a part of it and got selected.&lt;/p&gt;
&lt;h3 id=&#34;what-would-i-tell-someone-who-is-worried-about-applying-to-outreachy&#34;&gt;What would I tell someone who is worried about applying to Outreachy?&lt;/h3&gt;
&lt;p&gt;If you are someone who has just started open source contributions and are fear stricken on how is it gonna work? These all things seems so confusing and you’re overwhelmed.&lt;/p&gt;
&lt;p&gt;Don’t worry! ..&lt;/p&gt;
&lt;p&gt;I was too! Every one is.. and this is just step — 1. Anyone who’s going to pick up a new project which is production ready and thousands/millions of people are using it, is going to be confused! This is normal and natural (the initial learning curve), but once you overcome it. Things become so normal and understanding, people are here to help you out.&lt;/p&gt;
&lt;p&gt;If you think you can’t make it because of the competition, how does matter? If not this time, next time (I myself got selected after 3 years of trying), you anyway has to start one day, so let it be today. But the learnings you take away from the process, are insanely valuable and every-time it’s gonna become easier..
Feel free to reach me if you are facing any issues regarding starting with open-source contributions or if you have question saying — shall I apply to Outreachy this time?&lt;/p&gt;
&lt;p&gt;Good Luck! :)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Blog: FOSDEM 2020</title>
      <link>https://jenkins-x.io/blog/2020/01/09/jxfosdem2020/</link>
      <pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/blog/2020/01/09/jxfosdem2020/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://fosdem.org/2020/&#34;&gt;FOSDEM&lt;/a&gt; is a free event for software developers to meet, share ideas, and collaborate.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/community/events/2020-fosdem.png&#34; class=&#34;img-thumbnail&#34;/&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;fosdem&#34;&gt;FOSDEM&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://fosdem.org/2020/about/&#34;&gt;FOSDEM&lt;/a&gt; (Free and Open source Software Developers’ European Meeting) is a non-commercial, volunteer-organized European event centered on free and open source software development. It is aimed at developers and anyone interested in the free and open source software movement. FOSDEM will take place on 1 and 2 of February in Brussels, Belgium. See the &lt;a href=&#34;https://fosdem.org/2020/&#34;&gt;event site for more details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The vast majority of talks and events at FOSDEM are held in &amp;lsquo;developer rooms&amp;rsquo; or &amp;lsquo;devrooms&amp;rsquo;, which are organised and managed by open source projects to foster discussion and collaboration. In the Jenkins X community, we are excited to participate in the Continuous Integration and Continuous Deployment (CI/CD) devroom at FOSDEM!&lt;/p&gt;
&lt;h2 id=&#34;about-the-cicd-devroom&#34;&gt;About the CI/CD Devroom&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;https://fosdem.org/2020/schedule/track/continuous_integration_and_continuous_deployment/&#34;&gt;CI/CD devroom&lt;/a&gt; will take place on &lt;strong&gt;2nd of February 2020 in Brussels, Belgium&lt;/strong&gt;. The CI/CD devroom will focus on OSS projects that help &amp;ldquo;improve the quality of our software by automating tests, deliveries or deployments&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://fosdem.org/2020/schedule/track/continuous_integration_and_continuous_deployment/&#34;&gt;schedule for the CI/CD devroom&lt;/a&gt; is up and is packed with 12 interesting talks. Many of the talks specifically address issues around CI/CD on Kubernetes and a number of the talks are on Jenkins X.&lt;/p&gt;
&lt;p&gt;Thank you to the volunteer organisers of the CI/CD devroom, including &lt;a href=&#34;https://twitter.com/0lblak&#34;&gt;Olivier Vernin&lt;/a&gt; &lt;a href=&#34;https://mobile.twitter.com/loswillios&#34;&gt;Jan Willies&lt;/a&gt; and &lt;a href=&#34;https://mobile.twitter.com/thoulen&#34;&gt;Fabrizio Manfredi&lt;/a&gt;, who have picked awesome talks during what must have been a difficult selection process.&lt;/p&gt;
&lt;h2 id=&#34;fringe-and-jenkins-x-workshop&#34;&gt;Fringe and Jenkins X workshop&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://fosdem.org/2020/fringe/&#34;&gt;The FOSDEM Fringe&lt;/a&gt; consists of independent events involving free and open source software taking place in the days around the FOSDEM weekend. They are organised independently of FOSDEM by open source communities.&lt;/p&gt;
&lt;p&gt;On &lt;strong&gt;Thursday, January 30&lt;/strong&gt;, &lt;a href=&#34;https://twitter.com/vfarcic&#34;&gt;Viktor Farcic&lt;/a&gt; will be presenting a full day workshop on Jenkins X, as described in this abbreviated abstract:&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    &lt;p&gt;Jenkins X is a combination of best of breed tools and software for Kubernetes. It provides an interactive command-line interface to instantiate applications, repositories, environments, and pipelines and orchestrate continuous integration and continuous delivery.&lt;/p&gt;
&lt;p&gt;It is the CI/CD solution for development of modern cloud applications on Kubernetes.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll explore how to create a fully operational continuous delivery pipeline using containers, Kubernetes, Jenkins X, and quite a few other tools.&lt;/p&gt;


&lt;/div&gt;

&lt;p&gt;The workshop will take place from 8:30am to 5:00pm at the Marivaux Hotel Congress and Seminar Centre, Boulevard Adolphe Maxlaan 98, 1000 Brussels. There will be breakfast and snacks provided, for which there is a 25 Euro charge. Please sign up on the &lt;a href=&#34;https://www.eventbrite.com/e/workshop-cloud-native-kubernetes-first-serverless-continuous-delivery-with-jenkins-x-kubernetes-and-tickets-87082627483&#34;&gt;eventbrite event page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Jenkins community will also be leading a &lt;a href=&#34;https://www.eventbrite.com/e/jenkins-pipeline-fundamentals-training-tickets-87080214265&#34;&gt;workshop on Jenkin Pipelines&lt;/a&gt; run by &lt;a href=&#34;https://twitter.com/MarkEWaite&#34;&gt;Mark Waite&lt;/a&gt;. The workshop will be from 8:00am to 12:00pm and breakfast will be provided for a 22 Euro charge.&lt;/p&gt;
&lt;h2 id=&#34;important-dates&#34;&gt;Important Dates&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;30 January, 2020: Jenkins and Jenkins X workshops, FOSDEM Fringe&lt;/li&gt;
&lt;li&gt;2 February, 2020: CI/CD Devroom, FOSDEM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We look forward to seeing you at FOSDEM!&lt;/p&gt;
&lt;p&gt;For those who can&amp;rsquo;t make it, the talks in the CI/CD devroom will be recorded and made available under a Creative Commons license on the FOSDEM website.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
