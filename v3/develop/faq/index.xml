<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ FAQ</title>
    <link>https://jenkins-x.io/v3/develop/faq/</link>
    <description>Recent content in FAQ on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/v3/develop/faq/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>V3: Pipelines</title>
      <link>https://jenkins-x.io/v3/develop/faq/pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/pipeline/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-diagnose-a-step-in-a-pipeline&#34;&gt;How do I diagnose a step in a pipeline?&lt;/h2&gt;
&lt;p&gt;If you are wondering what image, command, environment variables are being used in a step in the pipeline the simplest thing is to &lt;a href=&#34;https://jenkins-x.io/v3/develop/ui/octant/&#34;&gt;open the octant console&lt;/a&gt; via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx ui
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then if you navigate to the pipeline you are interested in and select the envelope icon next to a step name that will take you to the Step details page. e.g. if you click on the icon pointed to by the big red arrow:&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/developing/octant-step-click.png&#34; /&gt;
&lt;figcaption&gt;
&lt;h5&gt;Click on the step icon to see details of a step which then takes you to the step details page&lt;/h5&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src=&#34;https://jenkins-x.io/images/developing/octant-step.png&#34; /&gt;
&lt;figcaption&gt;
&lt;h5&gt;Step details page lets you see the command, image, environment variables and volumes&lt;/h5&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;If that doesn&amp;rsquo;t help another option is to &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/#editing-pipelines&#34;&gt;edit the pipeline step&lt;/a&gt; via the &lt;code&gt;.lighthouse/jenkins-x/release.yaml&lt;/code&gt; or  &lt;code&gt;.lighthouse/jenkins-x/pullrequest.yaml&lt;/code&gt; file to add the command: &lt;code&gt;sleep infinity&lt;/code&gt; in the &lt;code&gt;script:&lt;/code&gt; value before the command that is not working.&lt;/p&gt;
&lt;p&gt;You can then &lt;code&gt;kubectl exec&lt;/code&gt; into the pod at that step and look around and try running commands inside the pod/container.&lt;/p&gt;
&lt;p&gt;e.g. using the pod name from the above page and the container name you can do something like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl exec -it -c name-of-step-container name-of-pod sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-access-a-secret-from-my-pipeline&#34;&gt;How do I access a Secret from my pipeline?&lt;/h2&gt;
&lt;p&gt;Once you have a kubernetes Secret (see &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/secrets/#create-a-new-secret&#34;&gt;how to create them&lt;/a&gt;) you can access then in a pipeline either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;as an &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-environment-variables&#34;&gt;environment variable in a step&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;via &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-files-from-a-pod&#34;&gt;a volume mount&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-do-i-configure-pipelines-to-use-gpus&#34;&gt;How do I configure pipelines to use GPUs?&lt;/h2&gt;
&lt;p&gt;You can install the &lt;a href=&#34;https://github.com/NVIDIA/k8s-device-plugin&#34;&gt;nvidia k8s device plugin&lt;/a&gt; as a daemonset to expose which nodes have GPUs and their status.&lt;/p&gt;
&lt;p&gt;You can then view the nodes via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl get nodes &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-o=custom-columns=NAME:.metadata.name,GPU:.status.allocatable.nvidia\.com/gpu&amp;#34;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can then use the &lt;code&gt;resources&lt;/code&gt; on your tekton steps as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;- &lt;span style=&#34;color:#66d9ef&#34;&gt;image&lt;/span&gt;: gcr.io/kaniko-project/executor:v1&lt;span style=&#34;color:#ae81ff&#34;&gt;.3.0&lt;/span&gt;-debug
  &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: build-my-image
  &lt;span style=&#34;color:#66d9ef&#34;&gt;resources&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;limits&lt;/span&gt;:
      &lt;span style=&#34;color:#75715e&#34;&gt;# This job requires an instance with 1 GPU, 4 CPUs and 16GB memory - g4dn.2xlarge&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;nvidia.com/gpu&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;script&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;|
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    #!/busybox/sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>V3: Configuration</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>V3: Using</title>
      <link>https://jenkins-x.io/v3/develop/faq/using/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/using/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-list-the-apps-that-have-been-deployed&#34;&gt;How do I list the apps that have been deployed?&lt;/h2&gt;
&lt;p&gt;You can see the helm charts that are installed along with their version, namespaces and any configuration values by looking at the &lt;code&gt;releases&lt;/code&gt; section of your &lt;code&gt;helmfile.yaml&lt;/code&gt; file in your cluster git repository.&lt;/p&gt;
&lt;p&gt;You can browse all the kubernetes resources in each namespace using the canonical layout in the &lt;code&gt;config-root&lt;/code&gt; folder. e.g. all charts are versioned in git as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;config-root/
  namespaces/
   jx/
     lighthouse/
       lighthouse-webhooks-deploy.yaml    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can see the above kubernetes resource, a &lt;code&gt;Deployment&lt;/code&gt; with name &lt;code&gt;lighthouse-webhooks&lt;/code&gt; in the namespace &lt;code&gt;jx&lt;/code&gt; which comes from the &lt;code&gt;lighthouse&lt;/code&gt; chart.&lt;/p&gt;
&lt;p&gt;There could be some additional charts installed via Terraform for the &lt;a href=&#34;https://jenkins-x.io/v3/guides/operator/&#34;&gt;git operator&lt;/a&gt; and &lt;a href=&#34;https://jenkins-x.io/v3/guides/health/&#34;&gt;health subsystem&lt;/a&gt; which can be viewed via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;helm list --all-namespaces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-use-testcontainers&#34;&gt;How do I use testcontainers?&lt;/h2&gt;
&lt;p&gt;If you want to use a container, such as a database, inside your pipeline so that you can run tests against your database inside your pipeline then use a &lt;a href=&#34;https://tekton.dev/vault/pipelines-v0.16.3/tasks/#specifying-sidecars&#34;&gt;sidecar container in Tekton&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here is &lt;a href=&#34;https://tekton.dev/vault/pipelines-v0.16.3/tasks/#using-a-sidecar-in-a-task&#34;&gt;another example of a sidecar in a pipeline&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to use a separate container inside a preview environment then add &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-charts&#34;&gt;charts or resources&lt;/a&gt; to the &lt;code&gt;preview/helmfile.yaml&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Troublehshooting</title>
      <link>https://jenkins-x.io/v3/develop/faq/issues/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/issues/</guid>
      <description>
        
        
        &lt;h2 id=&#34;why-does-jenkins-x-fail-to-download-plugins&#34;&gt;Why does Jenkins X fail to download plugins?&lt;/h2&gt;
&lt;p&gt;When I run a &lt;code&gt;jx&lt;/code&gt; command I get an error like&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;code&gt; Get https://github.com/jenkins-x/jx-..../releases/download/v..../jx-.....tar.gz: dial tcp: i/o timeout&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This sounds like a network problem; the code in &lt;code&gt;jx&lt;/code&gt; is trying to download from &lt;code&gt;github.com&lt;/code&gt; and your laptop is having trouble resolving the &lt;code&gt;github.com&lt;/code&gt; domain.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;do you have a firewall / VPN / HTTP proxy blocking things?&lt;/li&gt;
&lt;li&gt;is your &lt;code&gt;/etc/resolv.conf&lt;/code&gt; causing issues? e.g. if you have multiple entries for your company VPN?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;why-did-my-quickstart--import-not-work&#34;&gt;Why did my quickstart / import not work?&lt;/h2&gt;
&lt;p&gt;If you are not able to create quickstarts or import projects its most probably webhooks not being setup correctly.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;jx project import&lt;/code&gt; or &lt;code&gt;jx project quickstart&lt;/code&gt; runs it creates a Pull Request on your dev cluster repository. This should &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#importing--creating-quickstarts&#34;&gt;trigger a webhook&lt;/a&gt; on your git provider which should then trigger a Pipeline (via &lt;a href=&#34;https://jenkins-x.io/v3/about/overview/#lighthouse&#34;&gt;lighthouse webhooks&lt;/a&gt;). The pipeline should then  &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#importing--creating-quickstarts&#34;&gt;create a second commit on the pull request&lt;/a&gt; to configure your repository which then should get labelled and auto-merge.&lt;/p&gt;
&lt;p&gt;If this does not happen its usually your webhooks are not working. You can check on the health of your system and webhooks via the &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/health/&#34;&gt;Health guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href=&#34;https://jenkins-x.io/v3/admin/troubleshooting/webhooks/&#34;&gt;webhooks troubleshooting guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you manually merge the Pull Request by hand then you&amp;rsquo;ll miss out the &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#importing--creating-quickstarts&#34;&gt;create a second commit on the pull request&lt;/a&gt; which means your project won&amp;rsquo;t properly import. To work around that you can do a dummy commit on your dev cluster repository which will trigger a regeneration.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;jx project import&lt;/code&gt; or &lt;code&gt;jx project quickstart&lt;/code&gt; times out before the pipeline triggers the &lt;a href=&#34;https://jenkins-x.io/v3/about/how-it-works/#importing--creating-quickstarts&#34;&gt;second commit on the pull request&lt;/a&gt; and it auto merges and triggers a boot job to setup webhooks for the new repository - you will have pipeline catalog files locally on your laptop which are not pushed to git. e.g. the &lt;code&gt;.lighthouse/*&lt;/code&gt; files and maybe other files like &lt;code&gt;charts/*&lt;/code&gt; and &lt;code&gt;Dockerfile&lt;/code&gt;. You can always try add those files to git locally and push once you have got your webhooks working.&lt;/p&gt;
&lt;p&gt;Also make sure that the boot Job that is triggered by the pull request merging has the necessary scopes on the git personal access token to be able to registry the webhooks on the new repository. You will see if the webhook registration has been successful in the boot log:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;jx admin log 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
