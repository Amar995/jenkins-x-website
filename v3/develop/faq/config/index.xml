<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ Configuration</title>
    <link>https://jenkins-x.io/v3/develop/faq/config/</link>
    <description>Recent content in Configuration on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/v3/develop/faq/config/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>V3: General</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/general/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/general/</guid>
      <description>
        
        
        &lt;h2 id=&#34;what-is-the-directory-layout&#34;&gt;What is the directory layout?&lt;/h2&gt;
&lt;p&gt;To understand the directory layout see &lt;a href=&#34;https://github.com/jenkins-x/jx-gitops/blob/master/docs/git_layout.md&#34;&gt;this document&lt;/a&gt; and the &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/files/&#34;&gt;file reference&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-add-an-environment&#34;&gt;How do I add an Environment&lt;/h2&gt;
&lt;p&gt;With v3 everything is done via GitOps - so if in doubt the answer is to modify git.&lt;/p&gt;
&lt;p&gt;You can create new environments by adding to the &lt;code&gt;environments:&lt;/code&gt; section of &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-kubernetes/blob/master/jx-requirements.yml#L18&#34;&gt;jx-requirements.yml&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-change-promotion-for-my-app&#34;&gt;How do I change promotion for my app?&lt;/h2&gt;
&lt;p&gt;Usually when you &lt;a href=&#34;https://jenkins-x.io/v3/develop/create-project/&#34;&gt;import a repository or create a quickstart&lt;/a&gt; they inherit the default environments for &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/promotion/&#34;&gt;promotion&lt;/a&gt;. It is common to share the same environments across all of your microservices.&lt;/p&gt;
&lt;p&gt;If you want to change that on a per repository/microservice basis you can &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/config/#custom-environments-per-repository&#34;&gt;configure custom environments for a repository&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-specify-docker_registry_org&#34;&gt;How do I specify DOCKER_REGISTRY_ORG?&lt;/h2&gt;
&lt;p&gt;If you need to you can override in a specific repository (via a &lt;code&gt;.jx/settings.yaml&lt;/code&gt; in your repository) but usually its common to all repos and is inherited from your &lt;code&gt;jx-requirements.yml&lt;/code&gt; in your development environment repository&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&#34;https://jenkins-x.io/v3/develop/reference/files/&#34;&gt;file reference&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;if-i-add-a-file-to-config-root-it-gets-deleted-why&#34;&gt;If I add a file to &lt;code&gt;config-root&lt;/code&gt; it gets deleted, why?&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;config-root&lt;/code&gt; directory is regenerated on every boot job - basically every time you promote an application or merge a change into the main branch of your git dev cluster git repository.  For background see the &lt;a href=&#34;https://github.com/jenkins-x/jx-gitops/blob/master/docs/git_layout.md&#34;&gt;dev git repository layout docs&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;To add a new chart add to the &lt;code&gt;helmfiles/mynamespace/helmfile.yaml&lt;/code&gt; file follow the &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-charts&#34;&gt;add chart guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To add a new kubernetes resource &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-resources&#34;&gt;follow the add resources guide&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Charts and resources</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/charts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/charts/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-add-a-chart&#34;&gt;How do I add a chart?&lt;/h2&gt;
&lt;p&gt;To add a new chart add to the &lt;code&gt;helmfiles/mynamespace/helmfile.yaml&lt;/code&gt; file follow the &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-charts&#34;&gt;add chart guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-customise-an-app-in-an-environment&#34;&gt;How do I customise an App in an Environment?&lt;/h2&gt;
&lt;p&gt;With the new helm 3 based boot every environment uses boot - so there is a single way to configure anything whether its in the &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; environment and whether or not you are using &lt;a href=&#34;https://jenkins-x.io/v3/guides/multi-cluster/&#34;&gt;multiple clusters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;how to customise a chart&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-add-a-kubernetes-resource&#34;&gt;How do I add a kubernetes resource?&lt;/h2&gt;
&lt;p&gt;To add a new kubernetes resource &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-resources&#34;&gt;follow the add resources guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The default &lt;code&gt;helmfile.yaml&lt;/code&gt; files take references to helm charts.&lt;/p&gt;
&lt;p&gt;If you want to deploy one or more kubernetes resources &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-resources&#34;&gt;wrap them in a local chart in your dev cluster git repository&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-deploy-an-app-with-no-chart&#34;&gt;How do I deploy an app with no chart?&lt;/h2&gt;
&lt;p&gt;Some microservices on kubernetes do not yet come packaged as a helm chart.&lt;/p&gt;
&lt;p&gt;e.g. if the only instructions on the website of the microservice is something like&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# install this appication via:&lt;/span&gt;
kubectl apply -f https://acme.com/foo.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want you can just install it like the above &lt;code&gt;kubectl apply&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Though you then lose the benefits of GitOps in that all changes to your cluster are auditted and versioned in git and it&amp;rsquo;s easy to rollback changes.&lt;/p&gt;
&lt;p&gt;So another approach is to follow the &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#adding-resources&#34;&gt;create a local chart&lt;/a&gt; instructions:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkdir charts/myname/templates
curl -L https://acme.com/foo.yaml &amp;gt; charts/myname/templates/resources.yaml
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apiVersion: v1
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;description: A Helm chart for myname
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;name: myname
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;version: 0.0.1&amp;#34;&lt;/span&gt; &amp;gt; charts/myname/Chart.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then add the following &lt;code&gt;chart:&lt;/code&gt; line to your &lt;code&gt;helmfiles/$namespace/helmfile.yaml&lt;/code&gt; in the &lt;code&gt;releases:&lt;/code&gt; section for the namespace you want to deploy it in&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./charts/myname&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If this is a brand new namespace which didn&amp;rsquo;t have a &lt;code&gt;helmfiles/$namespace/helmfile.yaml&lt;/code&gt; then make sure you also add an entry in the root &lt;code&gt;helmfile.yaml&lt;/code&gt; file of:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;helmfiles&lt;/span&gt;:
- &lt;span style=&#34;color:#f92672&#34;&gt;path&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;helmfiles/$namespace/helmfile.yaml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that &lt;code&gt;$namespace&lt;/code&gt; in the above files should be expanded to the actual namespace you are deploying it to; e.g. &lt;code&gt;jx&lt;/code&gt; or &lt;code&gt;jx-staging&lt;/code&gt; or whatever.&lt;/p&gt;
&lt;p&gt;The above may seem like a bit of work compared to &lt;code&gt;kubectl apply&lt;/code&gt; but it does mean at any time you can upgrade the app by re-running the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -L https://acme.com/foo.yaml &amp;gt; charts/myname/templates/resources.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also easily uninstall the application or modify the YAML in git at any time.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Registries</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/registries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/registries/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-use-a-custom-container-registry&#34;&gt;How do I use a custom container registry?&lt;/h2&gt;
&lt;p&gt;To allow a pipeline to be able to push to a container registry you can add this secret&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;kubectl create secret generic container-registry-auth  &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --from-literal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;myserver.com &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --from-literal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;username&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;myuser &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --from-literal&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mypwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will then take effect the next time a commit merges on your cluster git repository e.g. next time you &lt;a href=&#34;https://jenkins-x.io/v3/guides/upgrade/#cluster&#34;&gt;upgrade your cluster&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The various container registry secrets get merged into a &lt;code&gt;Secret&lt;/code&gt; called &lt;code&gt;tekton-container-registry-auth&lt;/code&gt; in the &lt;code&gt;jx&lt;/code&gt; namespace which is associated with the default pipeline &lt;code&gt;ServiceAccount&lt;/code&gt; &lt;code&gt;tekton-bot&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want all pipelines to use this container registry then modify the &lt;code&gt;cluster.registry&lt;/code&gt; field in your &lt;code&gt;jx-requirements.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;cluster&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;registry&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myserver.com &lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Otherwise you can enable this new container registry on a specific application/repository by adding this &lt;code&gt;.jx/variables.sh&lt;/code&gt; file into the git repository if it doesn&amp;rsquo;t exist&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;export DOCKER_REGISTRY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myserver.com&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-switch-to-github-pages-for-charts&#34;&gt;How do I switch to github pages for charts?&lt;/h2&gt;
&lt;p&gt;Using a local chart museum or bucket repo chart for installing charts can be troublesome if you just have 1 cluster and you are using it for dev, staging and production.&lt;/p&gt;
&lt;p&gt;e.g. if you delete your cluster and try reboot everything, there&amp;rsquo;s initially no chart museum or bucket repo so that the staging / production helmfiles won&amp;rsquo;t be able to find the charts and your boot job will fail.&lt;/p&gt;
&lt;p&gt;Using &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/multi-cluster/&#34;&gt;multiple clusters&lt;/a&gt; at least lets you destroy and recreate each cluster independently.&lt;/p&gt;
&lt;p&gt;A workaround while you bring back your cluster is to comment out the staging and production &lt;code&gt;helmfile.yaml&lt;/code&gt; files in the &lt;code&gt;helmfile.yaml&lt;/code&gt; file in the root directory.&lt;/p&gt;
&lt;p&gt;We recommend &lt;a href=&#34;https://jenkins-x.io/v3/devops/cloud-native/#prefer-cloud-over-kubernetes&#34;&gt;using cloud services and storage where possible&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Longer term we expect folks to move towards using OCI and your container registry to host your helm charts so that its always highly available in all clusters/locations. Though there is still integration work required with &lt;a href=&#34;https://helm.sh/&#34;&gt;helm&lt;/a&gt; and &lt;a href=&#34;https://github.com/roboll/helmfile&#34;&gt;helmfile&lt;/a&gt; to make that completely seamless right now (particularly with secrets and cloud IAM roles).&lt;/p&gt;
&lt;p&gt;So one option is to use github pages as your chart repository - so that your charts are always accessible for the staging/production namespaces/clusters even if you recreate your cluster from scractch.&lt;/p&gt;
&lt;p&gt;To switch to use github pages for your container registry, modify your &lt;a href=&#34;https://github.com/jenkins-x/jx-api/blob/master/docs/config.md#requirements&#34;&gt;jx-requirements.yml&lt;/a&gt; to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;core.jenkins-x.io/v4beta1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Requirements&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;cluster&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;chartRepository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://github.com/myorg/mycharts.git&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;chartKind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;pages  &lt;/span&gt;
    &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-switch-to-bucketrepo&#34;&gt;How do I switch to bucketrepo?&lt;/h2&gt;
&lt;p&gt;To switch from &lt;code&gt;nexus&lt;/code&gt; to &lt;code&gt;bucketrepo&lt;/code&gt; in V3 there are a few changes you need to make.&lt;/p&gt;
&lt;p&gt;Incidetally the &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-kubernetes/blob/master/&#34;&gt;jx3-kubernetes&lt;/a&gt; repository is already setup for&lt;code&gt;bucketrepo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Please make the following changes&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;remove your old &lt;code&gt;nexus&lt;/code&gt; chart from &lt;code&gt;helmfiles/jx/helmfile.yaml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;add this to your &lt;code&gt;jx-requirements.yml&lt;/code&gt; file so its like &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-kubernetes/blob/master/jx-requirements.yml#L8&#34;&gt;this one&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;core.jenkins-x.io/v4beta1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Requirements&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;cluster&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;chartRepository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://bucketrepo.jx.svc.cluster.local/bucketrepo/charts&lt;/span&gt;
...
  &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bucketrepo&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;add the &lt;code&gt;bucketrepo&lt;/code&gt; chart to your &lt;code&gt;helmfiles/jx/helmfile.yaml&lt;/code&gt; file &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-kubernetes/blob/master/helmfiles/jx/helmfile.yaml#L42&#34;&gt;like this&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;...
&lt;span style=&#34;color:#f92672&#34;&gt;releases&lt;/span&gt;:
- &lt;span style=&#34;color:#f92672&#34;&gt;chart&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x/bucketrepo&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bucketrepo&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then git commit and you should have your cluster switched to bucketrepo&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Secrets</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/secrets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/secrets/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-add-a-new-secret&#34;&gt;How do I add a new Secret?&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&#34;https://jenkins-x.io/v3/admin/setup/secrets/#create-a-new-secret&#34;&gt;how to add a new Secret&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-change-the-secret-poll-period-in-kubernetes-external-secrets&#34;&gt;How do I change the secret poll period in kubernetes external secrets?&lt;/h2&gt;
&lt;p&gt;Your cloud provider could charge per read of a secret and so a frequent poll of your secrets could cost $$$. You may want to tone down the poll period.&lt;/p&gt;
&lt;p&gt;You can do this via the &lt;code&gt;POLLER_INTERVAL_MILLISECONDS&lt;/code&gt; setting in the &lt;a href=&#34;https://github.com/external-secrets/kubernetes-external-secrets/tree/master/charts/kubernetes-external-secrets#configuration&#34;&gt;kubernetes external secrets configuration&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more details &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;see how to configure charts&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-do-i-switch-to-gsm-from-vault&#34;&gt;How do I switch to GSM from Vault?&lt;/h2&gt;
&lt;p&gt;We recommend you use &lt;a href=&#34;https://jenkins-x.io/v3/devops/cloud-native/#prefer-cloud-over-kubernetes&#34;&gt;cloud secret managers over vault&lt;/a&gt; as its easier to manage; let your cloud provider do the undifferentiated heavy lifting for you.&lt;/p&gt;
&lt;p&gt;If you spin up a cluster on vault and want to switch over to, say, GSM here&amp;rsquo;s how:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;set the &lt;code&gt;gsm&lt;/code&gt; variable to true in terraform as &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-terraform-gke/blob/master/README.md#getting-started&#34;&gt;described in the getting started guide&lt;/a&gt; using your terraform/infrastructure git repository:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gsm = true&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; values.auto.tfvars 

git add *
git commit -a -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fix: enable gsm&amp;#34;&lt;/span&gt;

terraform plan
terraform apply
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;in your dev cluster git repository (which has a &lt;code&gt;helmfile.yaml&lt;/code&gt; inside) modify the &lt;code&gt;jx-requirement.yml&lt;/code&gt; switch the &lt;code&gt;secretStorage&lt;/code&gt; line to:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;secretStorage&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gsm&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;download &lt;a href=&#34;https://github.com/GoogleContainerTools/kpt/releases&#34;&gt;kpt&lt;/a&gt; and add it to your $PATH&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;run the following to replace your vault secret mapping files with gsm versions:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rm -rf .jx/secret/mapping

kpt pkg get https://github.com/jenkins-x/jx3-gitops-template.git/.jx/secret/gsm/mapping .jx/secret/mapping
ls -al .jx/secret/mapping

&lt;span style=&#34;color:#75715e&#34;&gt;# echo we should see secret-mappings.yaml&lt;/span&gt;
git add .jx/secret
git commit -a -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fix: migrate to gsm secret mapping&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# now lets push and watch the git operator&lt;/span&gt;
git push
jx admin log -w
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>V3: Vault</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/vault/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/vault/</guid>
      <description>
        
        
        &lt;h2 id=&#34;after-an-upgrade-the-boot-job-is-waiting-for-vault-in-jx-vault&#34;&gt;After an upgrade the boot job is waiting for vault in jx-vault&lt;/h2&gt;
&lt;p&gt;In the alpha we used to install vault via the &lt;code&gt;helmfile/secret-infra/helmfile.yaml&lt;/code&gt; file and install vault into the &lt;code&gt;secret-infra&lt;/code&gt; namespace.&lt;/p&gt;
&lt;p&gt;A production installation of vault requires cloud resources such as a key ring, crypto key and bucket.&lt;/p&gt;
&lt;p&gt;So to make it easier to manage vault properly with cloud resources and to simplify the operation of Jenkins X (so that the secret store can be used on an empty cluster before we boot anything in the boot process) we have moved the installation of vault into terraform. (e.g for &lt;a href=&#34;https://github.com/jenkins-x/terraform-google-jx/blob/master/modules/jx-boot/vault.tf&#34;&gt;GKE&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;So ideally you would re-apply your terraform using the latest terraform modules so that you get the new vault setup in the &lt;code&gt;jx-vault&lt;/code&gt; namespace.&lt;/p&gt;
&lt;p&gt;A workaround if you wish to keep using your vault in your &lt;code&gt;secret-infra&lt;/code&gt; namespace is to modify the first few lines starting with &lt;code&gt;VAULT&lt;/code&gt; of the file: &lt;code&gt;versionStream/Makefile.mk&lt;/code&gt; as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;VAULT_ADDR &lt;span style=&#34;color:#f92672&#34;&gt;?=&lt;/span&gt; https://vault.secret-infra:8200
VAULT_NAMESPACE &lt;span style=&#34;color:#f92672&#34;&gt;?=&lt;/span&gt; secret-infra
VAULT_ROLE &lt;span style=&#34;color:#f92672&#34;&gt;?=&lt;/span&gt; secret-infra
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>V3: Ingress</title>
      <link>https://jenkins-x.io/v3/develop/faq/config/ingress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/faq/config/ingress/</guid>
      <description>
        
        
        &lt;h2 id=&#34;how-do-i-configure-the-ingress-domain-in-dev-staging-or-production&#34;&gt;How do I configure the ingress domain in Dev, Staging or Production?&lt;/h2&gt;
&lt;p&gt;With the new helm 3 based boot every environment uses boot - so there is a single way to configure anything whether its in the &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; environment and whether or not you are using &lt;a href=&#34;https://jenkins-x.io/v3/guides/multi-cluster/&#34;&gt;multiple clusters&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can override the domain name for use in all apps within an environment by modifying the &lt;code&gt;jx-requirements.yml&lt;/code&gt; in the git repository for the &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; environment.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mydomain.com &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Also by default there is a namespace specific separator added. So if your service is &lt;code&gt;cheese&lt;/code&gt; the full domain name would be something like &lt;code&gt;cheese.jx-staging.mydomain.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you wish to avoid the namespace specific separator if each environment already has its own unique &lt;code&gt;domain&lt;/code&gt; value then you can specify:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mydomain.com  &lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;namespaceSubDomain&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you wish to change any of these values for a single app only then you can use the &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;app customisation mechanism&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;e.g. for an app called &lt;code&gt;mychart&lt;/code&gt; you can create a file called &lt;code&gt;apps/mychart/values.yaml&lt;/code&gt; in the git repository for your environment and add the following YAML:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jxRequirements&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;domain&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mydomain.com  &lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;namespaceSubDomain&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;how-do-i-configure-the-ingress-tls-certificate-in-dev-staging-or-production&#34;&gt;How do I configure the ingress TLS certificate in Dev, Staging or Production?&lt;/h2&gt;
&lt;p&gt;You can specify the TLS certificate to use for the &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt; environment by modifying the &lt;code&gt;jx-requirements.yml&lt;/code&gt; file in the environments git repository:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;: 
  &lt;span style=&#34;color:#f92672&#34;&gt;tls&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;secretName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;my-tls-secret-name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will then be applied to all the Jenkins X ingress resources for things like &lt;code&gt;lighthouse&lt;/code&gt; or &lt;code&gt;nexus&lt;/code&gt; - plus any apps you deploy to &lt;code&gt;dev&lt;/code&gt;, &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want to override the TLS secret name for a specific app in a specific environment then rather like the &lt;a href=&#34;#how-do-i-configure-the-ingress-domain-in-dev-staging-or-production&#34;&gt;above question&lt;/a&gt; you can use the &lt;a href=&#34;https://jenkins-x.io/v3/develop/apps/#customising-charts&#34;&gt;app customisation mechanism&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;e.g. for an app called &lt;code&gt;mychart&lt;/code&gt; you can create a file called &lt;code&gt;apps/mychart/values.yaml&lt;/code&gt; in the git repository for your environment and add the following YAML:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jxRequirements&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;tls&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;:
      &lt;span style=&#34;color:#f92672&#34;&gt;secretName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;my-tls-secret-name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
