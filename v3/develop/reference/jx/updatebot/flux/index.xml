<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ jx updatebot flux</title>
    <link>https://jenkins-x.io/v3/develop/reference/jx/updatebot/flux/</link>
    <description>Recent content in jx updatebot flux on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/v3/develop/reference/jx/updatebot/flux/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>V3: jx updatebot flux promote</title>
      <link>https://jenkins-x.io/v3/develop/reference/jx/updatebot/flux/promote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/reference/jx/updatebot/flux/promote/</guid>
      <description>
        
        
        &lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;jx updatebot flux promote
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;
&lt;p&gt;Promotes a new HelmRelease version in a FluxCD git repository&lt;/p&gt;
&lt;p&gt;This command will use the given chart name and version along with an optional sourceRefName of the helm or git repository or bucket to find the HelmRelease resource in the target git repository and create a Pull Request if the version is different. This lets you push promotion pull requests into FluxCD repositories as part of your CI release pipeline.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t supply a version the $VERSION or VERSION file will be used. If you don&amp;rsquo;t supply a chart the current folder name is used.&lt;/p&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lets promote a specific version of a chart with a source ref (repository) name to a git repo&lt;/span&gt;
jx updatebot flux promote --version v1.2.3 --chart mychart --source-ref-name myrepo --target-git-url https://github.com/myorg/my-flux-repo.git

&lt;span style=&#34;color:#75715e&#34;&gt;# lets use the $VERSION env var or a VERSION file in the current dir and detect the chart name from the current folder&lt;/span&gt;
jx updatebot flux promote --target-git-url https://github.com/myorg/my-flux-repo.git

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;      --auto-merge                  should we automatically merge if the PR pipeline is green
  -c, --chart string                the name of the chart to promote. If not specified defaults to the current directory name
      --commit-message string       the commit message
      --commit-title string         the commit title
  -d, --dir string                  the directory look for the VERSION file (default &amp;quot;.&amp;quot;)
      --git-kind string             the kind of git server to connect to
      --git-server string           the git server URL to create the scm client
      --git-token string            the git token used to operate on the git repository. If not specified it&#39;s loaded from the git credentials file
      --git-username string         the git username used to operate on the git repository. If not specified it&#39;s loaded from the git credentials file
  -h, --help                        help for promote
      --labels strings              a list of labels to apply to the PR (default [promote])
      --pull-request-body string    the PR body
      --pull-request-title string   the PR title (default &amp;quot;chore: upgrade the cluster git repository from the version stream&amp;quot;)
      --source-ref-name string      the source ref name of the HelmRepository, GitRepository or Bucket containing the helm chart
      --target-git-url string       the target git URL to create a Pull Request on
      --version string              the version number to promote. If not specified uses $VERSION or the version file
      --version-file string         the file to load the version from if not specified directly or via a $VERSION environment variable. Defaults to VERSION in the current dir
      --version-prefix string       the prefix added to the version number that will be used in the Flux CD Application YAML if --version option is not specified and the version is defaulted from $VERSION or the VERSION file (default &amp;quot;v&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;source&#34;&gt;Source&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-plugins/jx-updatebot&#34;&gt;jenkins-x-plugins/jx-updatebot&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: jx updatebot flux sync</title>
      <link>https://jenkins-x.io/v3/develop/reference/jx/updatebot/flux/sync/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/reference/jx/updatebot/flux/sync/</guid>
      <description>
        
        
        &lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;jx updatebot flux sync
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;
&lt;p&gt;Synchronizes some or all HelmRelease versions in an FluxCD git repository to reduce version drift&lt;/p&gt;
&lt;p&gt;Creates a Pull Request on the target GitOps repository.&lt;/p&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# create a Pull Request if any of the versions in the current directory are newer than the target repo&lt;/span&gt;
jx updatebot flux sync --target-git-url https://github.com/myorg/my-production-repo

&lt;span style=&#34;color:#75715e&#34;&gt;# create a Pull Request if any of the versions are out of sync&lt;/span&gt;
jx updatebot flux sync --source-git-url https://github.com/myorg/my-staging-repo --target-git-url https://github.com/myorg/my-production-repo

&lt;span style=&#34;color:#75715e&#34;&gt;# create a Pull Request if any of the versions are out of sync including only the given repo URL strings&lt;/span&gt;
jx updatebot flux sync --source-git-url https://github.com/myorg/my-staging-repo --target-git-url https://github.com/myorg/my-production-repo --repourl-includes wine  --repourl-includes beer

&lt;span style=&#34;color:#75715e&#34;&gt;# create a Pull Request if any of the versions are out of sync excluding the given repo URL strings&lt;/span&gt;
jx updatebot flux sync --source-git-url https://github.com/myorg/my-staging-repo --target-git-url https://github.com/myorg/my-production-repo --repourl-excludes water

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;      --auto-merge                        should we automatically merge if the PR pipeline is green (default true)
  -b, --batch-mode                        Runs in batch mode without prompting for user input
      --chart-exclude strings             text strings in the chart name to be excluded when synchronising
      --chart-include strings             text strings in the chart name to be included when synchronising
      --commit-message string             the commit message
      --commit-title string               the commit title
      --git-credentials                   ensures the git credentials are setup so we can push to git
      --git-kind string                   the kind of git server to connect to
      --git-server string                 the git server URL to create the scm client
      --git-token string                  the git token used to operate on the git repository. If not specified it&#39;s loaded from the git credentials file
      --git-user-email string             the user email to git commit
      --git-user-name string              the user name to git commit
      --git-username string               the git username used to operate on the git repository. If not specified it&#39;s loaded from the git credentials file
  -h, --help                              help for sync
      --labels strings                    a list of labels to apply to the PR
      --log-level string                  Sets the logging level. If not specified defaults to $JX_LOG_LEVEL
      --pull-request-body string          the PR body
      --pull-request-title string         the PR title
      --source-dir string                 the directory to use for the git clone for the source
      --source-git-url string             git URL to clone for the source
      --source-ref-name-exclude strings   text strings in the the sourceRef name of the chart repository or bucket to be excluded when synchronising
      --source-ref-name-include strings   text strings in the the sourceRef name of the chart repository or bucket to be included when synchronising
      --target-dir string                 the directory to use for the git clone for the target
      --target-git-url string             git URL to clone for the target
      --verbose                           Enables verbose output. The environment variable JX_LOG_LEVEL has precedence over this flag and allows setting the logging level to any value of: panic, fatal, error, warn, info, debug, trace
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;source&#34;&gt;Source&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-plugins/jx-updatebot&#34;&gt;jenkins-x-plugins/jx-updatebot&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
