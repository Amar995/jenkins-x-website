<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ jx updatebot argo</title>
    <link>https://jenkins-x.io/v3/develop/reference/jx/updatebot/argo/</link>
    <description>Recent content in jx updatebot argo on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/v3/develop/reference/jx/updatebot/argo/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>V3: jx updatebot argo promote</title>
      <link>https://jenkins-x.io/v3/develop/reference/jx/updatebot/argo/promote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/reference/jx/updatebot/argo/promote/</guid>
      <description>
        
        
        &lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx updatebot argo promote
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;
&lt;p&gt;Promotes a new Application or ApplicationSet version in an ArgoCD git repository&lt;/p&gt;
&lt;p&gt;This command will use the source git repository URL and version to find the ArgoCD Application or ApplicationSet resource in the target git URL and create a Pull Request if the version is different. This lets you push promotion pull requests into ArgoCD repositories as part of your CI release pipeline.&lt;/p&gt;
&lt;p&gt;You can get the examples in the directory pkg/cmd/argo/promote/test _data/simple&lt;/p&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lets use the $VERSION env var or a VERSION file in the current dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx updatebot argo promote --target-git-url https://github.com/myorg/my-argo-repo.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lets promote a specific version in the current git clone to a remote repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx updatebot argo promote --version v1.2.3 --target-git-url https://github.com/myorg/my-argo-repo.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lets promote a specific version of the given spec.source.repoURL (--source-git-url)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx updatebot argo promote --version v1.2.3 --source-git-url https://github.com/myorg/my-chart-repo.git --target-git-url https://github.com/myorg/my-argo-repo.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;      --auto-merge                  should we automatically merge if the PR pipeline is green
      --commit-message string       the commit message
      --commit-title string         the commit title
  -d, --dir string                  the directory look for the VERSION file (default &amp;#34;.&amp;#34;)
      --git-kind string             the kind of git server to connect to
      --git-server string           the git server URL to create the scm client
      --git-token string            the git token used to operate on the git repository. If not specified it&amp;#39;s loaded from the git credentials file
      --git-username string         the git username used to operate on the git repository. If not specified it&amp;#39;s loaded from the git credentials file
  -h, --help                        help for promote
      --labels strings              a list of labels to apply to the PR (default [promote])
      --pull-request-body string    the PR body
      --pull-request-title string   the PR title (default &amp;#34;chore: upgrade the cluster git repository from the version stream&amp;#34;)
      --source-git-url string       the source repo git URL to upgrade the version
      --target-git-url string       the target git URL to create a Pull Request on
      --version string              the version number to promote. If not specified uses $VERSION or the version file
      --version-file string         the file to load the version from if not specified directly or via a $VERSION environment variable. Defaults to VERSION in the current dir
      --version-prefix string       the prefix added to the version number that will be used in the Argo CD Application or ApplicationSet YAML if --version option is not specified and the version is defaulted from $VERSION or the VERSION file (default &amp;#34;v&amp;#34;)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;source&#34;&gt;Source&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-plugins/jx-updatebot&#34;&gt;jenkins-x-plugins/jx-updatebot&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: jx updatebot argo sync</title>
      <link>https://jenkins-x.io/v3/develop/reference/jx/updatebot/argo/sync/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/reference/jx/updatebot/argo/sync/</guid>
      <description>
        
        
        &lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;jx updatebot argo sync
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;
&lt;p&gt;Synchronizes some or all applications in an ArgoCD git repository to reduce version drift&lt;/p&gt;
&lt;p&gt;Creates a Pull Request on the target GitOps repository.&lt;/p&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# create a Pull Request if any of the versions in the current directory are newer than the target repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx updatebot argo sync --target-git-url https://github.com/myorg/my-production-repo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# create a Pull Request if any of the versions are out of sync&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx updatebot argo sync --source-git-url https://github.com/myorg/my-staging-repo --target-git-url https://github.com/myorg/my-production-repo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# create a Pull Request if any of the versions are out of sync including only the given repo URL strings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx updatebot argo sync --source-git-url https://github.com/myorg/my-staging-repo --target-git-url https://github.com/myorg/my-production-repo --repourl-includes wine  --repourl-includes beer
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# create a Pull Request if any of the versions are out of sync excluding the given repo URL strings&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx updatebot argo sync --source-git-url https://github.com/myorg/my-staging-repo --target-git-url https://github.com/myorg/my-production-repo --repourl-excludes water
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;      --auto-merge                  should we automatically merge if the PR pipeline is green (default true)
  -b, --batch-mode                  Runs in batch mode without prompting for user input
      --commit-message string       the commit message
      --commit-title string         the commit title
      --git-credentials             ensures the git credentials are setup so we can push to git
      --git-kind string             the kind of git server to connect to
      --git-server string           the git server URL to create the scm client
      --git-token string            the git token used to operate on the git repository. If not specified it&amp;#39;s loaded from the git credentials file
      --git-user-email string       the user email to git commit
      --git-user-name string        the user name to git commit
      --git-username string         the git username used to operate on the git repository. If not specified it&amp;#39;s loaded from the git credentials file
  -h, --help                        help for sync
      --labels strings              a list of labels to apply to the PR
      --log-level string            Sets the logging level. If not specified defaults to $JX_LOG_LEVEL
      --path-exclude strings        text strings in the path of the helm chart to be excluded when synchronising
      --path-include strings        text strings in the path of the helm chart to be included when synchronising
      --pull-request-body string    the PR body
      --pull-request-title string   the PR title
      --repourl-exclude strings     text strings in the repository URL to be excluded when synchronising
      --repourl-include strings     text strings in the repository URL to be included when synchronising
      --source-dir string           the directory to use for the git clone for the source
      --source-git-url string       git URL to clone for the source
      --target-dir string           the directory to use for the git clone for the target
      --target-git-url string       git URL to clone for the target
      --verbose                     Enables verbose output. The environment variable JX_LOG_LEVEL has precedence over this flag and allows setting the logging level to any value of: panic, fatal, error, warn, info, debug, trace
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;source&#34;&gt;Source&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x-plugins/jx-updatebot&#34;&gt;jenkins-x-plugins/jx-updatebot&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
