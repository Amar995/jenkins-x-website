<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ Environments</title>
    <link>https://jenkins-x.io/v3/develop/environments/</link>
    <description>Recent content in Environments on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/v3/develop/environments/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>V3: Git</title>
      <link>https://jenkins-x.io/v3/develop/environments/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/environments/git/</guid>
      <description>
        
        
        &lt;p&gt;Each kubernetes cluster has a git repository so that all the kubernetes resources in all namespaces can be managed by GitOps. Each cluster may also have a separate infrastructure git repository (e.g. for Terraform) to define the cloud resources (buckets, IAM roles, kubernetes cluster, node pools, VPNs, firewalls etc).&lt;/p&gt;
&lt;p&gt;So if you use a &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/multi-cluster/&#34;&gt;Multi Cluster Setup&lt;/a&gt; you have git repository per cluster to define the kubernetes resources in all the namespaces in that cluster.&lt;/p&gt;
&lt;p&gt;e.g. having &lt;code&gt;Dev&lt;/code&gt;, &lt;code&gt;Staging&lt;/code&gt; and &lt;code&gt;Production&lt;/code&gt; with separate clusters you&amp;rsquo;ll have 3 git repositories containing &lt;code&gt;helmfile.yaml&lt;/code&gt; files. If you use a single cluster you&amp;rsquo;ll have 1 git repository.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>V3: Configuration</title>
      <link>https://jenkins-x.io/v3/develop/environments/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/environments/config/</guid>
      <description>
        
        
        &lt;p&gt;In your development cluster the &lt;a href=&#34;https://github.com/jenkins-x/jx-api/blob/master/docs/config.md#requirements&#34;&gt;jx-requirements.yml&lt;/a&gt; file is used to define which are the default environments are used for promotion on your repositories.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/jx3-gitops-repositories/jx3-kubernetes/blob/master/jx-requirements.yml#L18&#34;&gt;default configuration&lt;/a&gt; for environments looks something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;core.jenkins-x.io/v4beta1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Requirements&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;environments&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dev&lt;/span&gt;
  - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;staging&lt;/span&gt;
  - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;production&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which defaults to meaning that &lt;code&gt;Staging&lt;/code&gt; and &lt;code&gt;Production&lt;/code&gt; are namespaces (&lt;code&gt;jx-staging&lt;/code&gt; and &lt;code&gt;jx-production&lt;/code&gt;) in the local cluster. &lt;code&gt;Staging&lt;/code&gt; will use &lt;code&gt;Auto&lt;/code&gt; promotion and &lt;code&gt;Production&lt;/code&gt; will use &lt;code&gt;Manual&lt;/code&gt; (more on that later).&lt;/p&gt;
&lt;h2 id=&#34;multi-cluster&#34;&gt;Multi cluster&lt;/h2&gt;
&lt;p&gt;When you setup a &lt;a href=&#34;https://jenkins-x.io/v3/admin/guides/multi-cluster/&#34;&gt;Remote Cluster&lt;/a&gt; for &lt;code&gt;Staging&lt;/code&gt; or &lt;code&gt;Production&lt;/code&gt;  you can remove the above entries for those environments.&lt;/p&gt;
&lt;p&gt;Then when you import the remote cluster repository into the development environment (to setup the CI/CD on pull requests and enable promotion) the generated Pull Request will modify your &lt;code&gt;jx-requirements.yml&lt;/code&gt; to add remote entries for the remote cluster.&lt;/p&gt;
&lt;p&gt;e.g. after importing the remote &lt;code&gt;production&lt;/code&gt; environment via &lt;a href=&#34;https://github.com/jenkins-x/jx-project/blob/master/docs/cmd/project_import.md&#34;&gt;jx project import&lt;/a&gt; and the pull request merging it should look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;core.jenkins-x.io/v4beta1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Requirements&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#ae81ff&#34;&gt;...&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;environments&lt;/span&gt;:
    - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;dev&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;my-dev-environment&lt;/span&gt;
    - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;staging&lt;/span&gt;
    - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;production&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;owner&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myowner&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;my-prod-repo&lt;/span&gt;
      &lt;span style=&#34;color:#f92672&#34;&gt;remoteCluster&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;custom-environments-per-repository&#34;&gt;Custom environments per repository&lt;/h2&gt;
&lt;p&gt;If you wish to use different sets of environments for different microservices you can override the environments that are used for promotion by adding a &lt;code&gt;.jx/settings.yaml&lt;/code&gt; with &lt;a href=&#34;https://github.com/jenkins-x/jx-api/blob/master/docs/config.md#settings&#34;&gt;this format&lt;/a&gt; which overrides settings found the development environments &lt;a href=&#34;https://github.com/jenkins-x/jx-api/blob/master/docs/config.md#requirements&#34;&gt;jx-requirements.yml&lt;/a&gt; file.&lt;/p&gt;
&lt;p&gt;e.g. add something like this to your &lt;code&gt;.jx/settings.yaml&lt;/code&gt; in a repository to override which environment repositories are promoted to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;apiVersion&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;core.jenkins-x.io/v4beta1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;kind&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Settings&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#75715e&#34;&gt;# lets replace the promote environments&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;ignoreDevEnvironments&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;promoteEnvironments&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;my-staging&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;owner&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myowner&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;some-repo-name&lt;/span&gt;
  - &lt;span style=&#34;color:#f92672&#34;&gt;key&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;my-prod&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;owner&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;myowner&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;some-other-repo-name    &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>V3: Promotion</title>
      <link>https://jenkins-x.io/v3/develop/environments/promotion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/v3/develop/environments/promotion/</guid>
      <description>
        
        
        &lt;p&gt;When changes are merged to the main branch in the Jenkins X pipeline catalog a new versioned release is created (with a new image and helm chart). This new version is then promoted by creating Pull Requests on GitOps repositories.&lt;/p&gt;
&lt;h2 id=&#34;how-it-works&#34;&gt;How it works&lt;/h2&gt;
&lt;p&gt;The release pipelines use the &lt;a href=&#34;https://github.com/jenkins-x/jx-promote/blob/master/docs/cmd/jx-promote.md#jx-promote&#34;&gt;jx promote &amp;ndash;all&lt;/a&gt; command which creates Pull Requests on all Environments conigured in your &lt;code&gt;jx-requirements.yml&lt;/code&gt; file (see the &lt;a href=&#34;https://jenkins-x.io/v3/develop/environments/config/&#34;&gt;Configuration&lt;/a&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;every environment which is defined in &lt;code&gt;jx-requirements.yml&lt;/code&gt; as &lt;code&gt;promotionStrategy&lt;/code&gt; &lt;strong&gt;Auto&lt;/strong&gt; or &lt;strong&gt;Manual&lt;/strong&gt; is included in a Pull Request to promote the new version to that environment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Auto&lt;/strong&gt; means the Pull Request will automatically merge if its successful (the Pull Request pipeline succeeds)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Manual&lt;/strong&gt; means the Pull Request is a draft and won&amp;rsquo;t automatically merge. i.e. the Pull Request needs to be manually approved.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;all local Environments in your &lt;code&gt;jx-requirements.yml&lt;/code&gt; of the promotion kind &lt;strong&gt;Auto&lt;/strong&gt; are promoted using a single Pull Request so that all the promotions automatically merge if the pull request pipeline validates successfully.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;you can define multiple local or remote Environments for different system / integration testing environments.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;changing-promotion&#34;&gt;Changing Promotion&lt;/h2&gt;
&lt;p&gt;If you want to disable promotion Pull Requests on an environment just remove the entry in &lt;code&gt;jx-requirements.yml&lt;/code&gt; or configure the &lt;code&gt;promotionStrategy&lt;/code&gt; to be &lt;strong&gt;Never&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you want your application to promote to different environments to the defaults for your cluster you can always &lt;a href=&#34;https://jenkins-x.io/v3/develop/pipelines/#editing-pipelines&#34;&gt;modify your pipeline&lt;/a&gt; and change the promote step to use different &lt;a href=&#34;https://github.com/jenkins-x/jx-promote/blob/master/docs/cmd/jx-promote.md#jx-promote&#34;&gt;jx promote&lt;/a&gt; arguments; e.g. pass in the explicit environments or repositories you want to promote to in the pipeline step.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
