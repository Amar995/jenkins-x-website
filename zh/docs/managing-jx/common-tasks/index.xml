<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes – Core Tasks</title>
    <link>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/</link>
    <description>Recent content in Core Tasks on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	  <atom:link href="https://jenkins-x.io/zh/docs/managing-jx/common-tasks/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 创建自定义 Builder</title>
      <link>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/create-custom-builder/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/create-custom-builder/</guid>
      <description>
        
        
        &lt;p&gt;在 Jenkins X 中，可以创建字段自定义的 Builder （也就是 &lt;a href=&#34;https://github.com/jenkinsci/kubernetes-plugin&#34;&gt;POD templates&lt;/a&gt;）或覆盖已有的。你只需要基于 &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders-base/blob/master/Dockerfile.common&#34;&gt;builder-base&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;从零创建一个自定义-builder&#34;&gt;从零创建一个自定义 Builder&lt;/h2&gt;
&lt;h3 id=&#34;builder-镜像&#34;&gt;Builder 镜像&lt;/h3&gt;
&lt;p&gt;首先，您需要为 Builder 创建一个 docker 镜像。从 &lt;code&gt;Dockerfile&lt;/code&gt; 开始的一个实例可能类似于：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; jenkinsxio/builder-base:latest&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Install your tools and libraries&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; yum install -y gcc openssl-devel&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CMD&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcc&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，您可以构建并发布这个镜像到您的 registry：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export BUILDER_IMAGE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;YOUR_REGISTRY&amp;gt;/&amp;lt;YOUR_BUILDER_IMAGE&amp;gt;:&amp;lt;VERSION&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker build -t &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BUILDER_IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker push &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BUILDER_IMAGE&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;别担心，当新的镜像需要构建时，您无需每次手动执行这些步骤。Jenkins X 可以为您管理这些。您只需要把 &lt;code&gt;Dockerfile&lt;/code&gt; 推送到类似于&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders/tree/master/builder-go&#34;&gt;这个&lt;/a&gt;代码仓库中。然后，根据您的组织名称来调整 &lt;code&gt;Jenkinsfile&lt;/code&gt; ，并使用下面的命令导入 Jenkins X 平台：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx import --url &amp;lt;REPOSITORY_URL&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后，您每次推送一个变更，Jenkins X 将会自动地构建和发布镜像。&lt;/p&gt;
&lt;h3 id=&#34;安装-builder&#34;&gt;安装 Builder&lt;/h3&gt;
&lt;p&gt;当您安装或者升级 Jenkins X 时就可以安装您的 Builder 了。&lt;/p&gt;
&lt;p&gt;在您的 &lt;code&gt;~/.jx/&lt;/code&gt; 目录下创建文件  &lt;code&gt;myvalues.yaml&lt;/code&gt; 并写入下面内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jenkins&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;Agent&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PodTemplates&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;MyBuilder&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;mybuilder&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Label&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-mybuilder&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#f92672&#34;&gt;type&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Secret&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;secretName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-docker-cfg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;mountPath&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/home/jenkins/.docker&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;EnvVars&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;JENKINS_URL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;http://jenkins:8080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;GIT_COMMITTER_EMAIL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x@googlegroups.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;GIT_AUTHOR_EMAIL&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x@googlegroups.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;GIT_AUTHOR_NAME&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x-bot&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;GIT_COMMITTER_NAME&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins-x-bot&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;XDG_CONFIG_HOME&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/home/jenkins&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;DOCKER_CONFIG&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/home/jenkins/.docker/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;ServiceAccount&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkins&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Containers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;Jnlp&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;jenkinsci/jnlp-slave:3.14-1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;RequestCpu&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;100m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;RequestMemory&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;128Mi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Args&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${computer.jnlpmac} ${computer.name}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;Dlang&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;YOUR_BUILDER_IMAGE&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Privileged&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;RequestCpu&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;400m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;RequestMemory&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;512Mi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;LimitCpu&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;LimitMemory&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1024Mi&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Command&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/sh -c&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Args&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cat&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Tty&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据需要替换 Builder 名称和镜像。&lt;/p&gt;
&lt;p&gt;您可以继续安装 Jenkins X ，然后 Builder 将会自动添加到平台。&lt;/p&gt;
&lt;h3 id=&#34;使用-builder&#34;&gt;使用 Builder&lt;/h3&gt;
&lt;p&gt;现在，您的 Builder 已经在 Jenkins 中安装了，您可以在 &lt;code&gt;Jenkinsfile&lt;/code&gt; 中轻松地引用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Groovy&#34; data-lang=&#34;Groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipeline &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    agent &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        label &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins-mybuilder&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      stage&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Build&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        when &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          branch &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;master&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        steps &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          container&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mybuilder&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              &lt;span style=&#34;color:#75715e&#34;&gt;// your steps
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    post &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        always &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            cleanWs&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;覆盖已有的-builder&#34;&gt;覆盖已有的 Builder&lt;/h2&gt;
&lt;p&gt;Jenkins X 自带了很多&lt;a href=&#34;https://raw.githubusercontent.com/jenkins-x/jenkins-x-platform/master/values.yaml&#34;&gt;预安装的 Builder&lt;/a&gt;，在安装或升级过程中可以根据需要覆盖。&lt;/p&gt;
&lt;p&gt;您只需要基于&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders-base/blob/master/Dockerfile.common&#34;&gt;基础 Builder&lt;/a&gt; 镜像或者&lt;a href=&#34;https://hub.docker.com/u/jenkinsxio/&#34;&gt;Builder 镜像&lt;/a&gt; 自定义。在上面查看细节。&lt;/p&gt;
&lt;p&gt;然后，您可以在目录 &lt;code&gt;~/.jx/&lt;/code&gt; 中创建文件 &lt;code&gt;myvalues.yaml&lt;/code&gt; ，并写入一下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jenkins&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;Agent&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;PodTemplates&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;Maven&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Containers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;Maven&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;YOUR_REGISTRY&amp;gt;/&amp;lt;YOUR_MAVEN_BUILDER_IMAGE&amp;gt;:&amp;lt;VERSION&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;Nodejs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Containers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;Nodejs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;YOUR_REGISTRY&amp;gt;/&amp;lt;YOUR_NODEJS_BUILDER_IMAGE&amp;gt;:&amp;lt;VERSION&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;Go&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;Containers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;Go&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;YOUR_REGISTRY&amp;gt;/&amp;lt;YOUR_GO_BUILDER_IMAGE&amp;gt;:&amp;lt;VERSION&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;您可以继续安装 Jenkins X，这些 Builder 将会自动地添加到平台。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 配置</title>
      <link>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/config/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/config/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X 应该为你的云服务商提供默认可用的配置。例如：如果你使用 AWS 或 EKS，Jenkins X 自动地使用 ECR。&lt;/p&gt;
&lt;p&gt;然而，你可以修改 Jenkins X 使用的 helm charts 的配置。&lt;/p&gt;
&lt;p&gt;要做到这一点，你需要在运行命令 &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster/&#34;&gt;jx create cluster&lt;/a&gt; 或 &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx install&lt;/a&gt; 的目录下创建一个文件 &lt;code&gt;myvalues.yaml&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;然后，这个 YAML 文件可以覆盖 Jenkins X 中的任何 charts 中的 &lt;code&gt;values.yaml&lt;/code&gt; 文件。&lt;/p&gt;
&lt;h2 id=&#34;nexus&#34;&gt;Nexus&lt;/h2&gt;
&lt;p&gt;例如：如果你希望在安装过程中禁用 Nexus，而使用不同主机上的一个独立的 Nexus，那么，你可以使用 &lt;code&gt;myvalues.yaml&lt;/code&gt; 中的服务链接来替代：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;nexus&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;nexusServiceLink&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;externalName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nexus.jx.svc.cluster.local&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要禁用并使用 chart museum 的服务链接的话添加：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;chartmuseum&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;chartmuseumServiceLink&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;externalName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins-x-chartmuseum.jx.svc.cluster.local&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;jenkins-镜像&#34;&gt;Jenkins 镜像&lt;/h2&gt;
&lt;p&gt;Jenkins X 中我们提供了一个默认的 Jenkins docker 镜像 &lt;a href=&#34;https://hub.docker.com/r/jenkinsxio/jenkinsx/&#34;&gt;jenkinsxio/jenkinsx&lt;/a&gt;，把我们所需要的所有插件包含在里面。&lt;/p&gt;
&lt;p&gt;如果你想添加自己的插件，你可以使用我们的基础镜像创建一个你自己的 Dockerfile 和镜像，如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Dockerfile for adding plugins to Jenkins X&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; jenkinsxio/jenkinsx:latest&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;COPY&lt;/span&gt; plugins.txt /usr/share/jenkins/ref/openshift-plugins.txt&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; /usr/local/bin/install-plugins.sh &amp;lt; /usr/share/jenkins/ref/openshift-plugins.txt&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后以下面的形式将你所有自定义插件放到 &lt;code&gt;plugins.txt&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;myplugin:1.2.3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;anotherplugin:4.5.6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一旦你通过 CI/CD 构建和发布了你的镜像，你就可以在安装 Jenkins X 时使用它：&lt;/p&gt;
&lt;p&gt;为了用你自定义的镜像配置 Jenkins X ，你可以在 &lt;code&gt;myvalues.yaml&lt;/code&gt; 文件中指定你的 Jenkins 镜像：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jenkins&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;Master&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Image&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;acme/my-jenkinsx&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ImageTag&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.2.3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里有一个开源项目的例子 &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-openshift-image&#34;&gt;jenkins-x/jenkins-x-openshift-image&lt;/a&gt;，你可以以它为模板创建一个新的 Jenkins 镜像用来在 OpenShift 上使用 Jenkins X 时增加 OpenShift 特定的插件和配置。&lt;/p&gt;
&lt;h2 id=&#34;docker-registry&#34;&gt;Docker Registry&lt;/h2&gt;
&lt;p&gt;We try and use the best defaults for each platform for the Docker Registry; e.g. using ECR on AWS.&lt;/p&gt;
&lt;p&gt;然而，你也可以在执行命令 &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_cluster/&#34;&gt;jx create cluster&lt;/a&gt; 或 &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx install&lt;/a&gt; 时，通过选项 &lt;code&gt;--docker-registry&lt;/code&gt; 来指定。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create cluster gke --docker-registry eu.gcr.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是，如果你使用了不同的 Docker Registry 的话，你可能需要&lt;a href=&#34;https://jenkins-x.io/docs/reference/components/docker-registry/#update-the-config-json-secret&#34;&gt;修改 secret 才能连接到 docker&lt;/a&gt;。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 安装过程中发生了什么</title>
      <link>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/install-on-cluster-what-happens/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/install-on-cluster-what-happens/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X 命令行在安装 Jenkins X 平台时会做如下事情：&lt;/p&gt;
&lt;h2 id=&#34;安装二进制客户端来管理你的集群&#34;&gt;安装二进制客户端来管理你的集群&lt;/h2&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    如果您运行在 Mac OS X 上，Jenkins X 会使用 &lt;code&gt;Homebrew&lt;/code&gt; 来安装不同的命令行。不存在就会安装。

&lt;/div&gt;

&lt;h3 id=&#34;安装-kubectl&#34;&gt;安装 kubectl&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/kubectl/kubectl/&#34;&gt;kubectl&lt;/a&gt; 是 Kubernetes 的命令行。它允许您和您的 Kubernetes 集群通过 API server 交互。&lt;/p&gt;
&lt;h3 id=&#34;安装-helm&#34;&gt;安装 Helm&lt;/h3&gt;
&lt;p&gt;Jenkins X 将会安装 &lt;a href=&#34;https://github.com/kubernetes/helm&#34;&gt;helm&lt;/a&gt; 客户端 - (可能是  helm &lt;em&gt;2.x&lt;/em&gt; 或 helm &lt;em&gt;3&lt;/em&gt;)，如果它不在您的环境变量里的话。Helm 是用于打包 Kubernetes 中的应用或资源（也叫做 charts），并迅速地成为标准。&lt;/p&gt;
&lt;h3 id=&#34;安装云提供商的命令行&#34;&gt;安装云提供商的命令行&lt;/h3&gt;
&lt;p&gt;如果您在使用公有云，会有相关的命令行来与之交互。当通过 &lt;a href=&#34;https://jenkins-x.io/docs/getting-started/setup/create-cluster/&#34;&gt;jx create cluster&lt;/a&gt; 命令来安装时，您的云提供商相关的二进制如果不在环境变量里的话，也会被安装。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AKS 集群（Azure）的 &lt;code&gt;az&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;GKE 集群 (Google Cloud) 的 &lt;code&gt;gcloud&lt;/code&gt; for GKE cluster (Google Cloud)&lt;/li&gt;
&lt;li&gt;AWS 集群 (Amazon Web Services) 的 &lt;code&gt;kops&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/eks/&#34;&gt;AWS EKS&lt;/a&gt; 集群的 &lt;code&gt;eksctl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;OKS 集群 (Oracle Cloud) 的 &lt;code&gt;oci&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果您想要在本地通过 minikube 或 minishift 运行 Jenkins X 的话，下面的二进制会被添加：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本地 minishift (OpenShift) 集群 的 &lt;code&gt;oc&lt;/code&gt; (OpenShift CLI) 和 &lt;code&gt;minishift&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;本地 minikube 集群的 &lt;code&gt;minikube&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，Jenkins X 将会根据需要安装 VM 驱动，通常 Mac OS X 上是 &lt;code&gt;xhyve&lt;/code&gt; 或 Windows 上是 &lt;code&gt;hyperv&lt;/code&gt; 。其他驱动则需要手动安装。&lt;/p&gt;
&lt;h2 id=&#34;创建-kubernetes-集群&#34;&gt;创建 Kubernetes 集群&lt;/h2&gt;
&lt;p&gt;之后，集群会通过云提供商的命令来创建（例如：Azure 的 &lt;code&gt;az aks create&lt;/code&gt; 命令）。&lt;/p&gt;
&lt;h2 id=&#34;设置-jenkins-x-平台&#34;&gt;设置 Jenkins X 平台&lt;/h2&gt;
&lt;h3 id=&#34;创建-jenkins-x-命名空间&#34;&gt;创建 Jenkins X 命名空间&lt;/h3&gt;
&lt;p&gt;然后，会为 Jenkins X 平台创建一个命名空间，用于存放 Jenkins X 基础组件。默认为：&lt;em&gt;jx&lt;/em&gt;。&lt;/p&gt;
&lt;h3 id=&#34;安装-tiller可选只有-helm-2-需要&#34;&gt;安装 Tiller（可选，只有 Helm 2 需要）&lt;/h3&gt;
&lt;p&gt;Tiller，也就是 Helm 的服务器端，会部署到命名空间 &lt;em&gt;kube-system&lt;/em&gt; 中。&lt;a href=&#34;https://www.helm.sh/&#34;&gt;Helm&lt;/a&gt; 是 Kubernetes 的包管理器，也用于部署 Jenkins X 的其他组件。&lt;/p&gt;
&lt;h3 id=&#34;设置-ingress-控制器&#34;&gt;设置 Ingress 控制器&lt;/h3&gt;
&lt;p&gt;在 Kubernetes 集群中，Service 和 Pod 的 IP 只能在集群网络中访问。为了能够访问集群，必须要创建一个 Ingress。Ingress 是路由到集群内的 Service 的规则集。Ingress 规则是由 Kubernetes API 配置在 Ingress 资源中，而 Ingress Controller 是必要的。所有的这些 Jenkins X 都会替您做——为下面的 Service 设置一个 Ingress Controller 和相关联的后端 Ingress 规则（一旦部署完后）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;chartmuseum&lt;/li&gt;
&lt;li&gt;docker-registry&lt;/li&gt;
&lt;li&gt;jenkins&lt;/li&gt;
&lt;li&gt;monocular&lt;/li&gt;
&lt;li&gt;nexus&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;


    默认，Jenkins X 将会通过域名 &lt;em&gt;nip.io&lt;/em&gt; 暴露 Ingress，并生成自签名的证书。当按照完后，您可以通过命令 &lt;code&gt;jx upgrade ingress --cluster&lt;/code&gt; 轻松地修改为您自己的域名和签名。

&lt;/div&gt;

&lt;h3 id=&#34;配置-git-仓库&#34;&gt;配置 git 仓库&lt;/h3&gt;
&lt;p&gt;Jenkins X 需要一个 Git 仓库提供商，以便能够插件环境仓库。如果您没有提供参数 &lt;em&gt;git-provider-url&lt;/em&gt; 的划，默认使用 GitHub。您需要提供用户名和 Token 来和 Git 交互，尤其是 Jenkins。&lt;/p&gt;
&lt;h2 id=&#34;创建管理员凭据&#34;&gt;创建管理员凭据&lt;/h2&gt;
&lt;p&gt;Jenkins X 为 Monocular/Nexus/Jenkins 生成管理员密码并保存到 Secret 中。当在 helm 安装的时候就会取出来使用（因此，密码可以用在流水线中）。&lt;/p&gt;
&lt;h3 id=&#34;检出云环境仓库&#34;&gt;检出云环境仓库&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/cloud-environments&#34;&gt;云环境仓库&lt;/a&gt;保存所有特定的配置以及加密的 Secret，这些将会应用在您的 Kubernetes 集群中的 Jenkins 平台。这些 Secret 将会由 Helm 包管理器来加解密。&lt;/p&gt;
&lt;h2 id=&#34;安装-jenkins-x-平台&#34;&gt;安装 Jenkins X 平台&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform&#34;&gt;Jenkins X 平台&lt;/a&gt;保存安装了的组件的 Helm Chart，用于提供 Jenins X 真正的 CD 解决方案。这包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkinsci/jenkins&#34;&gt;Jenkins&lt;/a&gt; 一个 CI/CD 流水线方案&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sonatype.com/nexus-repository-oss&#34;&gt;Nexus&lt;/a&gt; 一个制品仓库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-helm/chartmuseum&#34;&gt;ChartMuseum&lt;/a&gt; 一个 Helm Chart 仓库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes-helm/monocular&#34;&gt;Monocular&lt;/a&gt; 提供了一个 Web UI 用于搜索和发现通过 Jenkins X 部署到您的集群中的 Chart。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 在 Kubernetes 上安装</title>
      <link>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/install-on-cluster/</link>
      <pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/install-on-cluster/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X 可以在 Kubernetes 1.8 以及更高版本上安装。需要的依赖有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RBAC 是可用的&lt;/li&gt;
&lt;li&gt;启用 docker 私有仓库。这样的话，流水线可以在 Kubernetes 集群中使用 docker 仓库（通常不是公共的因此不支持 https）。后续，你可以修改你的流水线来使用其他仓库。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;通过-kops-启用私有仓库&#34;&gt;通过 kops 启用私有仓库&lt;/h3&gt;
&lt;p&gt;注意，如果你是在 AWS 环境中，你可能会想使用 &lt;a href=&#34;https://jenkins-x.io/zh/docs/getting-started/setup/create-cluster/&#34;&gt;jx create aws&lt;/a&gt; 命令来帮你自动化完成所有步骤！&lt;/p&gt;
&lt;p&gt;如果你是通过 &lt;a href=&#34;https://github.com/kubernetes/kops&#34;&gt;kops&lt;/a&gt; 创建的 kubernetes 集群，那么你可以这么做：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kops edit cluster
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，确保在 YAML 文件的章节 &lt;code&gt;spec&lt;/code&gt; 中有 &lt;code&gt;docker&lt;/code&gt; 配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;spec&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;docker&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;insecureRegistry&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100.64.0.0&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;/10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;logDriver&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的 IP 范围 &lt;code&gt;100.64.0.0/10&lt;/code&gt; 是 AWS 上的，但你需要修改为其他 Kubernetes 集群的；它依赖于 Kubernetes 服务的 IP 范围。&lt;/p&gt;
&lt;p&gt;保存后，你可以参考下面的命令进行验证：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kops get cluster -oyaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后查找 &lt;code&gt;insecureRegistry&lt;/code&gt; 章节。&lt;/p&gt;
&lt;p&gt;现在，确保这些修改在你的集群类型上是激活的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kops update cluster --yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kops rolling-update cluster --yes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你现在可以继续了！&lt;/p&gt;
&lt;h3 id=&#34;安装-jenkins-x&#34;&gt;安装 Jenkins X&lt;/h3&gt;
&lt;p&gt;为了在已有的 kubernetes 集群上安装 Jenkins X 你可以使用命令 &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx install&lt;/a&gt; ：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jx install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你知道提供商的话，可以通过命令行来指定。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jx install --provider=aws
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 通过 GitOps 管理</title>
      <link>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/manage-via-gitops/</link>
      <pubDate>Tue, 01 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/manage-via-gitops/</guid>
      <description>
        
        
        &lt;p&gt;我们推荐你使用 GitOps 管理你的 Jenkins X 设施，升级它、配置它、以及添加或移除扩展&lt;a href=&#34;https://jenkins-x.io/docs/contributing/addons/&#34;&gt;应用&lt;/a&gt;，这样容易审计谁在你的设施上做了什么变更并且容易恢复坏的变更。&lt;/p&gt;
&lt;p&gt;当前这仅在 AWS 和 Google 云可用，因为它要求我们的 vault 操作员（需要云存储和 KMS ）存储凭据，而所有其他配置都存储在开发环境 git 仓库中。&lt;/p&gt;
&lt;h2 id=&#34;使用-gitops-管理-jenkins-x&#34;&gt;使用 GitOps 管理 Jenkins X&lt;/h2&gt;
&lt;p&gt;如果你正在创建一个集群或者在已经存在的集群安装，这里有一种快速简便的方法来使用 GitOps 来管理 Jenkins X 本身。它是 &lt;code&gt;—ng&lt;/code&gt; ，为下一代 Jenkins X 而来。在我们今年晚些时候发布 Jenkins X 2.x 时，我们会将此功能标记设为默认选项。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;—ng&lt;/code&gt; 标记是这些标记的一个别名：&lt;code&gt;—gitops —vault —no-tiller —tekton&lt;/code&gt; 。所以它还附带了对 &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X 流水线&lt;/a&gt; - 基于 Tekton 的新式云原生流水线引擎的支持。&lt;/p&gt;
&lt;p&gt;如果你仍然想要使用Jenkins服务器作为 Jenkins X 中自动化 CI/CD 流水线的执行引擎，那么你可以使用 &lt;code&gt;—gitops —vault&lt;/code&gt; 代替。仍要注意是的即使使用了 &lt;code&gt;—ng&lt;/code&gt; 以及使用了由 Tekton 驱动的 &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X 流水线&lt;/a&gt;,你仍然需要创建你自己的&lt;a href=&#34;https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/custom-jenkins/&#34;&gt;自定义 Jenkins 服务器&lt;/a&gt;来运行传统的 Jenkins 任务和流水线。&lt;/p&gt;
&lt;p&gt;一旦你使用 GitOps 安装了 Jenkins X 来管理开发环境，那么表明安装了 Jenkins X 和它的附加应用程序，你将为 Dev，Staging，Production 环境获得一个额外的 git 仓库。它也意味着如果你用一个更新命令如 &lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;jx upgrade platform&lt;/a&gt; 或通过 &lt;a href=&#34;http://localhost:1313/commands/jx_add_app/&#34;&gt;jx add app&lt;/a&gt; 添加、更新、删除应用，那么那些命令将在开发环境的 git 存储库生成 Pull Request ，就像当你发布新版本的微服务时， promotion 是如何工作的。&lt;/p&gt;
&lt;h2 id=&#34;如果出现问题&#34;&gt;如果出现问题&lt;/h2&gt;
&lt;p&gt;一般来说，当使用 Tekton 时，Jenkins X 可以很容易地自我升级。但是，如果升级让 Jenkins X 无法实施 CI/CD ，那么使用 GitOps 回退更改将不起作用；）&lt;/p&gt;
&lt;p&gt;如果你在升级 Jenkins X 过程中遇到任何问题，这里有一种手动方法可以应用开发环境的 git 存储库的内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone $MY_DEV_GIT_CLONE_URL jenkins-x-dev-env
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd jenkins-x-dev-env/env
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx step env apply
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Docker Registry</title>
      <link>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/docker-registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/docker-registry/</guid>
      <description>
        
        
        &lt;p&gt;为了能够创建和发布 docker 镜像，我们需要使用 Docker Registry。&lt;/p&gt;
&lt;p&gt;默认，Jenkins X 会在系统命名空间中带一个 Docker Registry，以及 Jenkins 和 Nexus。当 Docker Registry 运行在你的 Kubernetes 集群中，它会在集群内部使用，它很难通过带有自签名证书的 HTTPS 暴露 —— 因此，在你的 Kubernetes 集群服务中，我们默认使用 insecure 的 Docker Registry。&lt;/p&gt;
&lt;h2 id=&#34;使用不同的-docker-registry&#34;&gt;使用不同的 Docker Registry&lt;/h2&gt;
&lt;p&gt;如果你使用公有云的话，可能希望利用你的云服务商的 Docker Registry；或者复用你已有的 Docker Registry。&lt;/p&gt;
&lt;p&gt;为了指定 Docker Registry 的主机、端口，你可以使用 Jenkins 控制台：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx console
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，定位到 &lt;code&gt;管理 Jenkins -&amp;gt; 系统配置&lt;/code&gt;，并修改环境变量 &lt;code&gt;DOCKER_REGISTRY&lt;/code&gt; 指向你选择的 Docker Registry。&lt;/p&gt;
&lt;p&gt;另一种方法是，把下面的内容添加到你的自定义 Jenkins X 平台 helm charts 的&lt;code&gt;values.yaml&lt;/code&gt; 文件中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jenkins&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;Servers&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;Global&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;EnvVars&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;DOCKER_REGISTRY&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcr.io&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;更新-configjson&#34;&gt;更新 config.json&lt;/h2&gt;
&lt;p&gt;下一步，你需要为 docker 更新 &lt;code&gt;config.json&lt;/code&gt; 中的认证。&lt;/p&gt;
&lt;p&gt;如果为你的 Docker Registry 创建一个 &lt;code&gt;config.json&lt;/code&gt; 文件，例如：Google 云的 GCR，它可能看起来像：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;credHelpers&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;gcr.io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcloud&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;us.gcr.io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcloud&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;eu.gcr.io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcloud&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;asia.gcr.io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcloud&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;staging-k8s.gcr.io&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gcloud&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于 AWS 则像：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;credsStore&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ecr-login&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后需要更新凭据 &lt;code&gt;jenkins-docker-cfg&lt;/code&gt; ，你可以执行以下操作:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl delete secret jenkins-docker-cfg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl create secret generic jenkins-docker-cfg --from-file&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;./config.json
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;使用-docker-hub&#34;&gt;使用 Docker Hub&lt;/h2&gt;
&lt;p&gt;如果你想要发布你的镜像到 Docker Hub 当中 ，则需要修改你的 &lt;code&gt;config.json&lt;/code&gt; 像下面那样:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;auths&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;https://index.docker.io/v1/&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;auth&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyDockerHubToken&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;email&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myemail@acme.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;为你的-registry-挂载凭证&#34;&gt;为你的 registry 挂载凭证&lt;/h3&gt;
&lt;p&gt;你的 docker registry 需要将凭证挂载到 &lt;a href=&#34;https://jenkins-x.io/zh/docs/resources/guides/managing-jx/common-tasks/pod-templates/&#34;&gt;Pod 模板&lt;/a&gt;当中。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Git 服务器</title>
      <link>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/git/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X 默认使用 &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;，用于开源项目的免费公共 git 托管方案。&lt;/p&gt;
&lt;p&gt;然而，在企业中工作时，你可能希望使用不同的 git 服务器。&lt;/p&gt;
&lt;p&gt;你可以通过 &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_git/&#34;&gt;jx get git&lt;/a&gt; 列出配置好的 git 服务器。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;添加一个新的-git-服务商&#34;&gt;添加一个新的 git 服务商&lt;/h2&gt;
&lt;p&gt;如果你在某个地方已经有了一个 git 服务，你可以通过 &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_git_server/&#34;&gt;jx create git server&lt;/a&gt; 把它添加到 Jenkins X中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git server gitKind someURL
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里 &lt;code&gt;gitKind&lt;/code&gt; 是某个 git 服务商，像 &lt;code&gt;github, gitea, gitlab, bitbucket&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;企业-github&#34;&gt;企业 GitHub&lt;/h2&gt;
&lt;p&gt;要添加一个企业 GitHub 服务，尝试：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git server github https://github.foo.com -n GHE
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里 &lt;code&gt;-n&lt;/code&gt; 是 git 服务的名称。&lt;/p&gt;
&lt;h2 id=&#34;bitbucket&#34;&gt;BitBucket&lt;/h2&gt;
&lt;p&gt;要添加 BitBucket ，尝试：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git server bitbucket -n BitBucket https://bitbucket.org
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;添加用户-tokens&#34;&gt;添加用户 tokens&lt;/h3&gt;
&lt;p&gt;为了添加一个 git 服务，你需要通过 &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_git_token/&#34;&gt;jx create git token&lt;/a&gt; 添加一个用户名和 API token：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx create git token -n myProviderName myUserName
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，就会提示你输入 API token&lt;/p&gt;
&lt;h3 id=&#34;kubernetes-托管的-git-服务&#34;&gt;Kubernetes 托管的 git 服务&lt;/h3&gt;
&lt;p&gt;你可以安装 git 服务到运行 Jenkins X 的 Kubernetes 集群中。&lt;/p&gt;
&lt;p&gt;例如：有一个 &lt;a href=&#34;https://gitea.io/en-us/&#34;&gt;gitea&lt;/a&gt; 的插件，可以让你把 gitea 作为 Jenkins X 安装的一部分。&lt;/p&gt;
&lt;p&gt;要在 Jenkins X 中使用 &lt;a href=&#34;https://gitea.io/en-us/&#34;&gt;gitea&lt;/a&gt;，你需要在安装 Jenkins X 之前启用 &lt;code&gt;gitea&lt;/code&gt; 插件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx edit addon gitea -e true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以通过 &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_addons/&#34;&gt;jx get addons&lt;/a&gt; 查看启用的插件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx get addons
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，当你 &lt;a href=&#34;https://jenkins-x.io/zh/docs/getting-started/&#34;&gt;安装 Jenkins X&lt;/a&gt; 时，也会安装 &lt;code&gt;gitea&lt;/code&gt; 插件。&lt;/p&gt;
&lt;p&gt;无论什么时候，Jenkins X 需要为一个环境或者新项目创建一个 git 库时，gitea 服务都会出现在选择列表中。&lt;/p&gt;
&lt;h4 id=&#34;gitea-已知的限制&#34;&gt;gitea 已知的限制&lt;/h4&gt;
&lt;p&gt;在写本文时，&lt;a href=&#34;https://issues.jenkins-ci.org/browse/JENKINS-50459&#34;&gt;gitea plugin for Jenkins&lt;/a&gt;不能够正确地更新 Pull Request 和 git 提交构建状态，这会打断 GitOps 升级流水线。可以手工审核来升级；但是，流水线会报告失败。&lt;/p&gt;
&lt;p&gt;另一个问题是，由 &lt;code&gt;jx&lt;/code&gt; 在 &lt;code&gt;gitea&lt;/code&gt; 创建的新项目，无法使得 &lt;a href=&#34;https://github.com/go-gitea/go-sdk/issues/100&#34;&gt;在 Pull Requests 中合并按钮可用&lt;/a&gt;。要使得可用的话，当一个项目在 GitHub 中创建后，你到仓库的 &lt;code&gt;Settings&lt;/code&gt; 页面，在 &lt;code&gt;gitea&lt;/code&gt; 的 web 控制台中，启用合并按钮。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Pod 模板</title>
      <link>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/pod-templates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/pod-templates/</guid>
      <description>
        
        
        &lt;p&gt;我们使用申明式（declarative）Jenkins 流水线实现 CI/CD ，每个应用或者环境的 git 库源码中有 &lt;code&gt;Jenkinsfile&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们使用 Jenkins 的 &lt;a href=&#34;https://github.com/jenkinsci/kubernetes-plugin&#34;&gt;kubernetes 插件&lt;/a&gt;，使得在 Kubernetes 中为每次构建启动一个新的 pod —— 感谢 Kubernetes 给了我们一个用于运行流水线的伸缩的代理池。&lt;/p&gt;
&lt;p&gt;Kubernetes 插件使用 &lt;em&gt;pod templates&lt;/em&gt; 定义用于运行 CI/CD 流水线的 pod，包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个或多个构建容器，用于运行命令（例如：你的构建工具，像 &lt;code&gt;mvn&lt;/code&gt; 或 &lt;code&gt;npm&lt;/code&gt; ，还有流水线的其它部分的工具，像 &lt;code&gt;git, jx, helm, kubectl&lt;/code&gt; 等等&lt;/li&gt;
&lt;li&gt;永久存储卷&lt;/li&gt;
&lt;li&gt;环境变量&lt;/li&gt;
&lt;li&gt;可以写到 git 仓库、docker 注册表、maven/npm/helm 仓库等等的 secret&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考-pod-templates&#34;&gt;参考 Pod Templates&lt;/h2&gt;
&lt;p&gt;Jenkins X 带有一套给支持的语言和运行时的默认 pod 模板，在你的 &lt;a href=&#34;https://jenkins-x.io/zh/architecture/build-packs&#34;&gt;build packs&lt;/a&gt;中，命名类似于：&lt;code&gt;jenkins-$PACKNAME&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;例如 &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/master/packs/maven/&#34;&gt;maven build pack&lt;/a&gt; 使用的 pod 模板时是 &lt;code&gt;jenkins-maven&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后，我们就可以 &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/blob/master/packs/maven/Jenkinsfile#L1-L4&#34;&gt;在 Jenkinsfile 中引用 pod 模板名称&lt;/a&gt;，在申明式流水线中使用这样的语法 &lt;code&gt;agent { label &amp;quot;jenkins-$PACKNAME }&lt;/code&gt; ，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// my declarative Jenkinsfile
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipeline &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    agent &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      label &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins-maven&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    environment &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      stage&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CI Build and push snapshot&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        steps &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          container&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;maven&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sh &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mvn deploy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;提交新的-pod-模板&#34;&gt;提交新的 Pod 模板&lt;/h2&gt;
&lt;p&gt;如果你正在使用一个新的 &lt;a href=&#34;https://jenkins-x.io/zh/architecture/build-packs&#34;&gt;build pack&lt;/a&gt;，那么，我们欢迎你 &lt;a href=&#34;https://jenkins-x.io/zh/docs/contributing/&#34;&gt;提交&lt;/a&gt; 一个新的 pod 模板，而且我们可以把它包含在 Jenkins X 的发行版中！&lt;/p&gt;
&lt;p&gt;现在遵循如何这个的指示 —— 如果有任何不清楚的话请&lt;a href=&#34;https://jenkins-x.io/zh/community/&#34;&gt;加入社区并提问&lt;/a&gt;，我们很高兴帮助你！&lt;/p&gt;
&lt;p&gt;为了提交一个新的 build pack：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;派生 &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/&#34;&gt;jenkins-x-platform&lt;/a&gt; 库&lt;/li&gt;
&lt;li&gt;增加你的 build pack 到 &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/values.yaml#L194-L431&#34;&gt;jenkins-x-platform 库中的 values.yaml 文件里&lt;/a&gt; 在 YAML 文件的 &lt;code&gt;jenkins.Agent.PodTemplates&lt;/code&gt; 这个区域&lt;/li&gt;
&lt;li&gt;你啃根想要从复制、粘贴开始大多数相似已经存在 pod 模板（例如：拷贝 &lt;code&gt;Maven&lt;/code&gt;，如果你使用基于 Java 的构建pod），并且，只是配置名称、标签和 &lt;code&gt;Image&lt;/code&gt; 等等。&lt;/li&gt;
&lt;li&gt;现在到 &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/&#34;&gt;jenkins-x-platform&lt;/a&gt; 库为你的 pod 模板提交一个 Pull Request&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;构建容器&#34;&gt;构建容器&lt;/h3&gt;
&lt;p&gt;当使用 pod 模板和 Jenkins 流水线时，每个工具你可以用很多不同的容器。例如： &lt;code&gt;maven&lt;/code&gt; 容器和 &lt;code&gt;git&lt;/code&gt; 等。&lt;/p&gt;
&lt;p&gt;我们发现，在一个构建容器里有所有通用的工具会比较简单。这也意味着你可以使用 &lt;code&gt;kubectl exec&lt;/code&gt; 或 &lt;a href=&#34;https://jenkins-x.io/commands/jx_rsh/&#34;&gt;jx rsh&lt;/a&gt; 打开一个构建 pod 的 shell，当你调试、诊断有问题的流水线时里面有所有需要的工具。&lt;/p&gt;
&lt;p&gt;因此，我们有一个 &lt;a href=&#34;https://github.com/jenkins-x/builder-base&#34;&gt;builder-base&lt;/a&gt; 的 docker 镜像，&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders-base/blob/master/Dockerfile.common#L4-L15&#34;&gt;包含所有不同的工具&lt;/a&gt; ，我们倾向于在 CI/CD 流水线中使用像 &lt;code&gt;jx, skaffold, helm, git, updatebot&lt;/code&gt; 的工具。&lt;/p&gt;
&lt;p&gt;如果想要在你新的 pod 模板中使用单一的构建惊喜那个，那么，你可以使用 builder base 作为基础增加你自定义的工具。&lt;/p&gt;
&lt;p&gt;例如：&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders/tree/master/builder-maven&#34;&gt;builder-maven&lt;/a&gt; 使用一个 &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders/blob/master/builder-maven/Dockerfile#L1&#34;&gt;Dockerfile&lt;/a&gt; 引用基础构建。&lt;/p&gt;
&lt;p&gt;因此，最简单的就是拷贝一个简单的 builder —— 像 &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-builders/tree/master/builder-maven&#34;&gt;builder-maven&lt;/a&gt;，然后编辑 &lt;code&gt;Dockerfile&lt;/code&gt; 增加你需要的构建工具。&lt;/p&gt;
&lt;p&gt;我们欢迎 Pull Requests 和&lt;a href=&#34;https://jenkins-x.io/zh/docs/contributing/&#34;&gt;贡献&lt;/a&gt;，因此，请把你新的构建容器和 Pod 模板提交，我们很乐意&lt;a href=&#34;https://jenkins-x.io/zh/docs/contributing/&#34;&gt;帮助&lt;/a&gt;！&lt;/p&gt;
&lt;h2 id=&#34;增加你自己的-pod-模板&#34;&gt;增加你自己的 Pod 模板&lt;/h2&gt;
&lt;p&gt;为了保持简单，我们倾向于在 Jenkins 配置中定义 pod 模板，然后在 &lt;code&gt;Jenkinsfile&lt;/code&gt; 中通过名称来引用。&lt;/p&gt;
&lt;p&gt;尽管一个 pod 模板倾向于有很多开发环境定义在里面，像 secrets；如果需要的话，你可以尝试在 &lt;code&gt;Jenkinsfile&lt;/code&gt; 中用内联的形式定义 pod 模板，使变得简单。但我们更喜欢把大多数 pod 模板保留在你的开发环境源码中，而不是在每个应用中拷贝、粘贴。&lt;/p&gt;
&lt;p&gt;现在，添加新的 Pod 模板最简单的方式就是通过 Jenkins 控制台。例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jx console
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就会打开 Jenkins 控制台。然后，导航到&lt;code&gt;管理 Jenkins&lt;/code&gt;（在左侧菜单），然后&lt;code&gt;系统配置&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;你将会面临大量的页面配置选项，Pod 模板通常在底部；你应该看到了当前所有的 pod 模板，像 maven、NodeJS 等等。&lt;/p&gt;
&lt;p&gt;你可以在那个页面编辑、增加、移除 pod 模板并点击保存。&lt;/p&gt;
&lt;p&gt;注意，长期来说，尽管我们希望&lt;a href=&#34;https://github.com/jenkins-x/jx/issues/604&#34;&gt;通过 GitOps 维护你的开发环境，就像是我们做的 Staging 和 Production&lt;/a&gt; —— 也就意味着当你&lt;a href=&#34;https://jenkins-x.io/commands/deprecation/&#34;&gt;升级你的开发环境&lt;/a&gt;通过 Jenkins 界面做的修改可能会丢失。&lt;/p&gt;
&lt;p&gt;因此，我们希望把 Pod 模板添加到你的开发环境 git 库的 &lt;code&gt;values.yaml&lt;/code&gt; 文件中，就像我们在 &lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/values.yaml#L194-L431&#34;&gt;jenkins-x-platform chart&lt;/a&gt; 做的一样。&lt;/p&gt;
&lt;p&gt;如果你正在使用开源工具创建 pod 模板，那么&lt;a href=&#34;#submitting-new-pod-templates&#34;&gt;在 Pull Request 中提交你的 pod 模板&lt;/a&gt;会比较简单，我们可以把它添加到 Jenkins X 未来的发行版中？&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 构建打包</title>
      <link>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/build-packs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/zh/docs/managing-jx/common-tasks/build-packs/</guid>
      <description>
        
        
        &lt;p&gt;我们使用 &lt;a href=&#34;https://draft.sh/&#34;&gt;draft&lt;/a&gt; 风格为不同的语言_构建打包_ ，我们通过&lt;a href=&#34;https://jenkins-x.io/zh/docs/resources/guides/using-jx/common-tasks/import/&#34;&gt;导入&lt;/a&gt;或者&lt;a href=&#34;https://jenkins-x.io/zh/docs/resources/guides/using-jx/common-tasks/create-spring/&#34;&gt;创建&lt;/a&gt;&lt;a href=&#34;https://jenkins-x.io/zh/docs/getting-started/first-project/create-quickstart/&#34;&gt;他们&lt;/a&gt;，运行时和构建工具添加必要的配置文件，因此我们可以在 Kubernetes 中构建和部署他们。&lt;/p&gt;
&lt;p&gt;如果由于工程没有被创建或导入而不存在的话，构建包会默认使用下面的文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Dockerfile&lt;/code&gt; 把代码构建为不可变的 docker 镜像，准备在 Kubernetes 中运行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jenkinsfile&lt;/code&gt; 为应用使用申明式 Jenkins 流水线定义 CI/CD 步骤&lt;/li&gt;
&lt;li&gt;helm chart 在文件夹 &lt;code&gt;charts&lt;/code&gt; 中生成可以在 Kubernetes 中运行的 Kubernetes 资源&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;charts/preview&lt;/code&gt; 文件夹中的 &lt;em&gt;preview chart&lt;/em&gt; 定义了基于 Pull Request 部署一个&lt;a href=&#34;https://jenkins-x.io/zh/about/concepts/features/#preview-environments&#34;&gt;预览环境&lt;/a&gt;的所有依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认的构建包在 &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&lt;/a&gt;，每个语言或者构建工具在一个文件夹中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;jx&lt;/code&gt; 命令行克隆构建包到你的文件夹 &lt;code&gt;.~/.jx/draft/packs/&lt;/code&gt; ，并在你每次尝试创建或者到一个工程时通过 &lt;code&gt;git pull&lt;/code&gt; 来更新他们。&lt;/p&gt;
&lt;h2 id=&#34;创建新的构建&#34;&gt;创建新的构建&lt;/h2&gt;
&lt;p&gt;我们欢迎&lt;a href=&#34;https://jenkins-x.io/zh/community/&#34;&gt;贡献&lt;/a&gt;，因此，请考虑增加新的构建包和 &lt;a href=&#34;https://jenkins-x.io/zh/docs/resources/guides/managing-jx/common-tasks/pod-templates/&#34;&gt;pod 模板&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这里有如何创建一个新的构建包的指导 —— 如果有任何不清楚的请&lt;a href=&#34;https://jenkins-x.io/zh/community/&#34;&gt;加入社区并提问&lt;/a&gt;，我们很乐意帮助！&lt;/p&gt;
&lt;p&gt;最好的开始就是 &lt;em&gt;快速开始&lt;/em&gt; 应用。你可以当作一个测试的样例工程。因此，创建或查找一个合适的例子工程，然后&lt;a href=&#34;https://jenkins-x.io/zh/developing/import&#34;&gt;导入&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;然后，如果不存在的话，手动添加 &lt;code&gt;Dockerfile&lt;/code&gt; 和 &lt;code&gt;Jenkinsfile&lt;/code&gt; 。你可以从&lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes/tree/master/packs&#34;&gt;当前构建包文件夹&lt;/a&gt;开始 —— 使用相似的语言或框架。&lt;/p&gt;
&lt;p&gt;如果你的构建包使用了 &lt;a href=&#34;https://jenkins-x.io/zh/architecture/pod-templates&#34;&gt;pod 模板&lt;/a&gt; 中不存在的构建工具，你需要&lt;a href=&#34;https://jenkins-x.io/zh/docs/resources/guides/managing-jx/common-tasks/pod-templates/#submitting-new-pod-templates&#34;&gt;提交一个新的 pod 模板&lt;/a&gt;，还可能需要一个新的构建容器景象。&lt;/p&gt;
&lt;p&gt;一旦你有了 pod 模板可以使用，例如你的 &lt;code&gt;Jenkinsfile&lt;/code&gt; 中引用到的 &lt;code&gt;jenkins-foo&lt;/code&gt; ：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// my declarative Jenkinsfile
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pipeline &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    agent &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      label &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jenkins-foo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    environment &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      stage&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CI Build and push snapshot&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        steps &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          container&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;foo&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sh &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo deploy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一旦你的 &lt;code&gt;Jenkinsfile&lt;/code&gt; 可以在你的示例工程为你的语言实现 CI/CD 的话，我们因该把 &lt;code&gt;Dockerfile&lt;/code&gt;, &lt;code&gt;Jenkinsfile&lt;/code&gt; 和 charts 文件夹拷贝到你的派生 &lt;a href=&#34;https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes&#34;&gt;jenkins-x/draft-packs 仓库&lt;/a&gt; 中。&lt;/p&gt;
&lt;p&gt;你可以通过把他们添加到构建包的本地库 &lt;code&gt; ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs&lt;/code&gt; 中来尝试。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export PACK&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;foo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/$PACK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp Dockerfile Jenkinsfile  ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/$PACK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# the charts will be in some folder charts/somefoo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp -r charts/somefoo ~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/$PACK/charts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当你的构建包在 &lt;code&gt;~/.jx/draft/packs/github.com/jenkins-x/draft-packs/packs/&lt;/code&gt; 文件夹中，就可以通过命令 &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; 来导入工程，使用编程语言来检测并查找最合适的构建包。如果你的构建包自定义检测逻辑的话，请让我们指导，我们可以帮助改进 &lt;a href=&#34;https://jenkins-x.io/commands/jx_import/&#34;&gt;jx import&lt;/a&gt; 使得在你的构建包上做的更好。例如：我们有一些自定义逻辑更好地处理 &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/master/pkg/jx/cmd/import.go#L383-L397&#34;&gt;maven 和 Gradle&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;如果你需要任何帮助 &lt;a href=&#34;https://jenkins-x.io/zh/community/&#34;&gt;请加入社区&lt;/a&gt; 。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
