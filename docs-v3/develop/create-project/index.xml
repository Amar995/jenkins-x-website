<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ Creating projects</title>
    <link>https://jenkins-x.io/docs-v3/develop/create-project/</link>
    <description>Recent content in Creating projects on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://jenkins-x.io/docs-v3/develop/create-project/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs-V3: Jenkinsfile support</title>
      <link>https://jenkins-x.io/docs-v3/develop/create-project/jenkinsfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs-v3/develop/create-project/jenkinsfile/</guid>
      <description>
        
        
        &lt;p&gt;When importing a project &lt;code&gt;jx project import&lt;/code&gt; looks for a &lt;code&gt;Jenkinfile&lt;/code&gt; in the source code.&lt;/p&gt;
&lt;p&gt;If there is no &lt;code&gt;Jenkinsfile&lt;/code&gt; then the wizard assumes you wish to proceed with a &lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipeline&lt;/a&gt; based on Tekton and imports it in the usual Jenkins X way. You also get to confirm the kind of build pack and language you wish to use for the automated CI/CD - so its easy to import any workload whether its a library, a binary, a container image, a helm chart or a fully blown microservice for automated kubernetes based CI/CD.&lt;/p&gt;
&lt;p&gt;If a &lt;code&gt;Jenkinsfile&lt;/code&gt; is present  then the wizard assumes you may wish to use a &lt;a href=&#34;https://jenkins-x.io/docs/v3/guides/jenkins/&#34;&gt;remote Jenkins server&lt;/a&gt; or &lt;a href=&#34;https://github.com/jenkinsci/jenkinsfile-runner&#34;&gt;Jenkinsfile Runner&lt;/a&gt; to run the pipelines, so it presents you with a list of the available Jenkins options to choose from.&lt;/p&gt;
&lt;p&gt;When using a Jenkins Server you get two options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use vanilla Jenkins pipelines via &lt;code&gt;Multi Branch Project&lt;/code&gt; to perform the webhook handling and run the pipelines&lt;/li&gt;
&lt;li&gt;use  &lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;lighthouse&lt;/a&gt; for webhook handling and ChatOps on Pull Requests. Then when a pipeline is triggered we use the &lt;a href=&#34;https://github.com/jenkins-x-labs/trigger-pipeline&#34;&gt;trigger-pipeline&lt;/a&gt; as a step to run the pipeline remotely inside a specific Jenkins server (without using the &lt;code&gt;Multi Branch Project&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;supported-integrations&#34;&gt;Supported Integrations&lt;/h3&gt;
&lt;p&gt;When importing a project these approaches are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins-x.io/about/concepts/jenkins-x-pipelines/&#34;&gt;Jenkins X Pipeline&lt;/a&gt; using Tekton&lt;/li&gt;
&lt;li&gt;Jenkins pipelines via &lt;code&gt;Multi Branch Project&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkins-x/lighthouse&#34;&gt;lighthouse&lt;/a&gt; for ChatOps triggering a remote Jenkins pipeline via &lt;a href=&#34;https://github.com/jenkins-x-labs/trigger-pipeline&#34;&gt;trigger-pipeline&lt;/a&gt; (without using &lt;code&gt;Multi Branch Project&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jenkinsci/jenkinsfile-runner&#34;&gt;Jenkinsfile Runner&lt;/a&gt; based pipelines in Tekton. You can override the container image used for the pipeline on import via the &lt;code&gt;--jenkinsfilerunner myimage:1.2.3&lt;/code&gt; command line argument&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
