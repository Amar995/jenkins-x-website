<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins X - Cloud Native CI/CD Built On Kubernetes â€“ Core Tasks</title>
    <link>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/</link>
    <description>Recent content in Core Tasks on Jenkins X - Cloud Native CI/CD Built On Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Access Control</title>
      <link>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/access-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/access-control/</guid>
      <description>
        
        
        &lt;p&gt;Jenkins X uses Role-Based Access Control (RBAC) policies to control access to its various resources.  The enforcement of the policies is provided by &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;Kubernetes&#39; RBAC support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#teams&#34;&gt;Teams&lt;/a&gt; can have a number of &lt;a href=&#34;https://jenkins-x.io/about/concepts/features/#environments&#34;&gt;Environments&lt;/a&gt; (e.g., Dev, Staging, Production) along with dynamic &lt;a href=&#34;https://jenkins-x.io/docs/reference/preview/&#34;&gt;Preview Environments&lt;/a&gt;; keeping  the &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;&lt;code&gt;Role&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;&lt;code&gt;RoleBinding&lt;/code&gt;&lt;/a&gt; resources from &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;Kubernetes RBAC&lt;/a&gt; in sync with all the various namespaces and members of your team can be challenging.&lt;/p&gt;
&lt;p&gt;To make this management easier, Jenkins X creates a new &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/&#34;&gt;Custom Resource&lt;/a&gt; called &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/#environmentrolebinding&#34;&gt;&lt;code&gt;EnvironmentRoleBinding&lt;/code&gt;&lt;/a&gt; which allows you to associate a &lt;code&gt;Role&lt;/code&gt; labeled with &lt;code&gt;jenkins.io/kind=EnvironmentRole&lt;/code&gt; with as many &lt;code&gt;Users&lt;/code&gt; or &lt;code&gt;ServiceAccounts&lt;/code&gt; as you like. As Environments are created or the &lt;code&gt;Role&lt;/code&gt; or &lt;code&gt;EnvironmentRoleBinding&lt;/code&gt; in the Dev environment is modified, the &lt;a href=&#34;https://jenkins-x.io/commands/jx_controller_role/#jx-controller-role&#34;&gt;&lt;code&gt;role controller&lt;/code&gt;&lt;/a&gt; ensures that the configuration is replicated to all the environment namespaces by creating or updating all of the &lt;code&gt;Role&lt;/code&gt; and &lt;code&gt;RoleBinding&lt;/code&gt;s per namespace.&lt;/p&gt;
&lt;p&gt;Roles are per Team so it is possible to have special roles per team, or to use common names for roles but have them customized for each team.&lt;/p&gt;
&lt;h2 id=&#34;security-implications-for-the-admin-namespace&#34;&gt;Security Implications for the admin namespace&lt;/h2&gt;
&lt;p&gt;Jenkins X stores various configuration and settings (e.g., &lt;code&gt;Users&lt;/code&gt;, &lt;code&gt;Teams&lt;/code&gt;) in the main admin namespace (&lt;code&gt;jx&lt;/code&gt;). Be careful when granting roles in the default &lt;code&gt;jx&lt;/code&gt; team as allowing users to edit some of these files may allow them to escalate their permissions.
Instead of granting non-admin users access to the &lt;code&gt;jx&lt;/code&gt; namespace, create teams and grant users access to those when using a shared cluster.&lt;/p&gt;
&lt;h2 id=&#34;default-roles&#34;&gt;Default Roles&lt;/h2&gt;
&lt;p&gt;Jenkins X ships with a collection of default &lt;code&gt;Role&lt;/code&gt; objects you can use in the &lt;code&gt;jenkins-x-platform&lt;/code&gt; template.  You can create your own if you wish, but any edits may be lost when Jenkins X is upgraded.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/templates/viewer-role.yaml&#34;&gt;viewer&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The &lt;code&gt;viewer&lt;/code&gt; role allows access to read projects, builds, and logs. It does not allow access to sensitive information&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/templates/committer-role.yaml&#34;&gt;committer&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The &lt;code&gt;committer&lt;/code&gt; role provides the same permissions as &lt;code&gt;viewer&lt;/code&gt; and allows the user to trigger builds and import new projects.&lt;/dd&gt;
&lt;dt&gt;&lt;a href=&#34;https://github.com/jenkins-x/jenkins-x-platform/blob/master/jenkins-x-platform/templates/owner-role.yaml&#34;&gt;owner&lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The owner role allows users to modify all team resources.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;adding-users&#34;&gt;Adding Users&lt;/h2&gt;
&lt;p&gt;To add users use the &lt;a href=&#34;https://jenkins-x.io/commands/jx_create_user/&#34;&gt;jx create user&lt;/a&gt; command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx create user --email &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;joe@example.com&amp;#34;&lt;/span&gt; --login joe --name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Joe Bloggs&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;changing-user-roles&#34;&gt;Changing User Roles&lt;/h2&gt;
&lt;p&gt;To modify the roles for a user, use &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_userroles/&#34;&gt;jx edit userroles&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx edit userrole --login joe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you omit the &lt;code&gt;--login&lt;/code&gt; (&lt;code&gt;-l&lt;/code&gt;) flag, you will be prompted to pick the user to edit.&lt;/p&gt;
&lt;p&gt;For example, to make a user &lt;code&gt;joe&lt;/code&gt; have the &lt;code&gt;committer&lt;/code&gt; Role (and remove any existing roles):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx edit userrole --login joe --role committer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you have fine-grained roles and want to grant multiple roles to a user, you can specify the roles as a comma-separated list:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx edit userrole --login joe --role committer,viewer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Modifying a user&amp;rsquo;s roles changes the &lt;code&gt;EnvironmentRoleBinding&lt;/code&gt;. The &lt;a href=&#34;https://jenkins-x.io/commands/jx_controller_role/#jx-controller-role&#34;&gt;role controller&lt;/a&gt; will replicate these changes to all the underlying Environment namespaces.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Connectivity</title>
      <link>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/connectivity/</guid>
      <description>
        
        
        &lt;p&gt;The tables below list some of the connectivity requirements for Jenkins X. These tables only apply to JX clusters
secured with TLS.&lt;/p&gt;
&lt;h2 id=&#34;ingress&#34;&gt;Ingress&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Service&lt;/th&gt;
&lt;th&gt;Protocol&lt;/th&gt;
&lt;th&gt;Port&lt;/th&gt;
&lt;th&gt;Reason&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Kube API Server&lt;/td&gt;
&lt;td&gt;HTTPS&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;Allow the JX cli to connect to the cluster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nexus&lt;/td&gt;
&lt;td&gt;HTTPS&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;For developers using maven, to allow them to download/proxy artifacts stored in nexus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hook&lt;/td&gt;
&lt;td&gt;HTTPS&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;To receive webhook events from the git provider&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chartmuseum&lt;/td&gt;
&lt;td&gt;HTTPS&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;Remote clusters to download helm charts&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;egress&#34;&gt;Egress&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Service&lt;/th&gt;
&lt;th&gt;Protocol&lt;/th&gt;
&lt;th&gt;Port&lt;/th&gt;
&lt;th&gt;Location&lt;/th&gt;
&lt;th&gt;Reason&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Docker Images&lt;/td&gt;
&lt;td&gt;HTTPS&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;dockerhub/gcr.io&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docker Registry&lt;/td&gt;
&lt;td&gt;HTTPS&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;gcr.io&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docker Registry (Internal)&lt;/td&gt;
&lt;td&gt;HTTP&lt;/td&gt;
&lt;td&gt;8080&lt;/td&gt;
&lt;td&gt;docker-registry-pod&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nexus&lt;/td&gt;
&lt;td&gt;HTTPS&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;mirrored repositories&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Git Provider&lt;/td&gt;
&lt;td&gt;HTTPS&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;provider dependent&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage&lt;/td&gt;
&lt;td&gt;HTTPS&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;GCS/S3&lt;/td&gt;
&lt;td&gt;Log Storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;github.com&lt;/td&gt;
&lt;td&gt;HTTPS&lt;/td&gt;
&lt;td&gt;443&lt;/td&gt;
&lt;td&gt;github.com&lt;/td&gt;
&lt;td&gt;version stream, build packs &amp;amp; quickstarts&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: DNS</title>
      <link>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/dns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/dns/</guid>
      <description>
        
        
        &lt;p&gt;To be able to access services hosted within your cluster we default to an &lt;a href=&#34;https://nip.io/&#34;&gt;nip.io&lt;/a&gt; domain. This makes it super easy to setup and manage DNS.&lt;/p&gt;
&lt;p&gt;However, for users who want services in the cluster to be available on a personal domain, we use external-dns which is just as easy.&lt;/p&gt;
&lt;h2 id=&#34;external-dns&#34;&gt;external-dns&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;em&gt;Currently only supported on GKE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-incubator/external-dns&#34;&gt;ExternalDNS&lt;/a&gt; can be used to help expose Kubernetes Services and Ingresses by synchronizing with DNS providers.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/boot/&#34;&gt;jx boot&lt;/a&gt; to install and configure your setup then modify your &lt;code&gt;jx-requirements.yml&lt;/code&gt; file to enable &lt;code&gt;ingress.externalDNS: true&lt;/code&gt; as described in the &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/boot/ingress/&#34;&gt;boot ingress documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Otherwise to setup your cluster using ExternalDNS use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;jx install --provider gke --tekton --external-dns
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;This will then prompt you for your domain.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;ðŸ™… developer ~/go-workspace/jx&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;master&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;$ jx install --provider gke --tekton --external-dns
WARNING: When using tekton, only kaniko is supported as a builder
Context &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gke_&amp;lt;your-project-id&amp;gt;_europe-west1-b_&amp;lt;your-cluster-name&amp;gt;&amp;#34;&lt;/span&gt; modified.
set exposeController Config URLTemplate &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{.Service}}-{{.Namespace}}.{{.Domain}}&amp;#34;&lt;/span&gt;
Git configured &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; user: **********  and email *********@****.***
helm installed and configured
? Provide the domain Jenkins X should be available at: your-domain.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A CloudDNS managed zone is then created within your clusters GCP Project, the record-sets which expose your services will be created by ExternalDNS within this managed zone.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;ðŸ™… developer ~/go-workspace&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;$ gcloud dns managed-zones list
NAME                           DNS_NAME                   DESCRIPTION                       VISIBILITY
your-domain-com-zone           your-domain.com.           managed-zone utilised by jx       public
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;delegation&#34;&gt;delegation&lt;/h3&gt;
&lt;p&gt;Once the installation is complete, a list of name servers will be outputted to the terminal, please update your registrar using these name servers in order to delegate your domain onto Google CloudDNS.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;
        ********************************************************

            External DNS: Please delegate your-domain.com via
            your registrar onto the following name servers:
                ns-cloud-d1.googledomains.com.
                ns-cloud-d2.googledomains.com.
                ns-cloud-d3.googledomains.com.
                ns-cloud-d4.googledomains.com.

        ********************************************************

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;google-domainshttpsdomainsgoogle&#34;&gt;&lt;a href=&#34;https://domains.google&#34;&gt;Google domains&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If you&amp;rsquo;re using Google Domains as your domain registrar please see &lt;a href=&#34;https://support.google.com/domains/answer/3290309?hl=en-GB&amp;amp;ref_topic=9018335&#34;&gt;here&lt;/a&gt; for details on delegating to custom name servers.&lt;/p&gt;
&lt;h3 id=&#34;url-template&#34;&gt;URL template&lt;/h3&gt;
&lt;p&gt;All services should be available on the same domain, of which is derived as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&amp;lt;service&amp;gt;-&amp;lt;namespace&amp;gt;.&amp;lt;your-domain&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Storage</title>
      <link>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/storage/</guid>
      <description>
        
        
        &lt;p&gt;When we use a Static Jenkins Server with Jenkins X we inherit the usual Jenkins storage model; that build logs and test results and reports are stored on the Persistent Volume of the Jenkins server.&lt;/p&gt;
&lt;p&gt;However as we move towards a more Cloud Native Jenkins and use &lt;a href=&#34;https://jenkins-x.io/news/serverless-jenkins/&#34;&gt;Serverless Jenkins&lt;/a&gt; we need a better solution for the storage of things like logs, test results, code coverage reports etc.&lt;/p&gt;
&lt;h2 id=&#34;storage-extensions&#34;&gt;Storage Extensions&lt;/h2&gt;
&lt;p&gt;So we&amp;rsquo;ve added a storage extension point which is used from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;storing logs when using &lt;a href=&#34;https://jenkins-x.io/news/serverless-jenkins/&#34;&gt;Serverless Jenkins&lt;/a&gt; which is done by the &lt;a href=&#34;https://jenkins-x.io/commands/jx_controller_build/&#34;&gt;jx controller build&lt;/a&gt; command&lt;/li&gt;
&lt;li&gt;using the &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_stash/&#34;&gt;jx step stash&lt;/a&gt; command which stashes files from a build (test or coverage reports)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configuring-storage&#34;&gt;Configuring Storage&lt;/h2&gt;
&lt;p&gt;You can setup the default location to use for storage. We currently support:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;storing files (logs, test or coverage reports) in a branch of a git repository. e.g. they could be part of your &lt;code&gt;gh-pages&lt;/code&gt; branch for your static site.&lt;/li&gt;
&lt;li&gt;storing files in Cloud Storage buckets like S3, GCS, Azure blobs etc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Storage uses classifications which are used to define the folder in which the kind of resources live such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;logs&lt;/li&gt;
&lt;li&gt;tests&lt;/li&gt;
&lt;li&gt;coverage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also use the special classification &lt;code&gt;default&lt;/code&gt; which is used if you don&amp;rsquo;t have a configuration for the classification in question. e.g. you could define a location of &lt;code&gt;default&lt;/code&gt; and then just configure where &lt;code&gt;logs&lt;/code&gt; go if thats different.&lt;/p&gt;
&lt;p&gt;If you are using &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/boot/&#34;&gt;jx boot&lt;/a&gt; to install and configure your setup then modify your &lt;code&gt;jx-requirements.yml&lt;/code&gt; file to configure storage as described in the &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/boot/storage/&#34;&gt;boot storage documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Otherwise to configure the storage location for a classification and team you use the &lt;a href=&#34;https://jenkins-x.io/commands/jx_edit_storage/&#34;&gt;jx edit storage&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Configure the tests to be stored in cloud storage (using S3 / GCS / Azure Blobs etc)&lt;/span&gt;
jx edit storage -c tests --bucket-url s3://myExistingBucketName

&lt;span style=&#34;color:#75715e&#34;&gt;# Configure the git URL and branch of where to store logs&lt;/span&gt;
jx edit storage -c logs --git-url https://github.com/myorg/mylogs.git --git-branch cheese

&lt;span style=&#34;color:#75715e&#34;&gt;# Configure your own category&lt;/span&gt;
jx edit storage -c &amp;lt;new-category&amp;gt; --bucket-url gs://myExistingBucketName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can view your teams storage settings via &lt;a href=&#34;https://jenkins-x.io/commands/jx_get_storage/&#34;&gt;jx get storage&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;using-stash&#34;&gt;Using Stash&lt;/h2&gt;
&lt;p&gt;Inside a pipeline you can then run the &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_stash/&#34;&gt;jx step stash&lt;/a&gt; command to stash files:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lets collect some files with the file names relative to the &amp;#39;target/test-reports&amp;#39; folder and store in a Git URL&lt;/span&gt;
jx step stash -c tests -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;target/test-reports/*&amp;#34;&lt;/span&gt; --basedir target/test-reports

&lt;span style=&#34;color:#75715e&#34;&gt;# lets collect some files to a specific AWS cloud storage bucket&lt;/span&gt;
jx step stash -c coverage -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;build/coverage/*&amp;#34;&lt;/span&gt; --bucket-url s3://my-aws-bucket
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;specify the &lt;code&gt;classifier&lt;/code&gt; via &lt;code&gt;-c&lt;/code&gt; such as for &lt;code&gt;tests&lt;/code&gt; or &lt;code&gt;coverage&lt;/code&gt; etc.&lt;/li&gt;
&lt;li&gt;specify the files to collect via &lt;code&gt;-p&lt;/code&gt; which supports wildcards like &lt;code&gt;*&lt;/code&gt;. files which will be stored with the relative directory path&lt;/li&gt;
&lt;li&gt;if you want to remove a directory prefix from the stashed files, like &lt;code&gt;target/reports&lt;/code&gt; you can use &lt;code&gt;--basedir&lt;/code&gt; to specify the directory to create relative file names from&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;strong&gt;NOTE&lt;/strong&gt; Be aware that you have to run &lt;code&gt;jx step stash&lt;/code&gt; inside your git repository,
therefore &lt;code&gt;dir:&lt;/code&gt; should be set to &lt;code&gt;/workspace/source&lt;/code&gt; in your stash step.
&lt;/div&gt;

&lt;p&gt;By default &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_stash/&#34;&gt;jx step stash&lt;/a&gt; will use your team&amp;rsquo;s configured location for the classification you give. If you wish you can override the location for a stash using &lt;code&gt;--git-url&lt;/code&gt; or &lt;code&gt;--bucket-url&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;unstashing&#34;&gt;Unstashing&lt;/h3&gt;
&lt;p&gt;If you need to you can unstash previously stored files via &lt;a href=&#34;https://jenkins-x.io/commands/jx_step_unstash/&#34;&gt;jx step unstash&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are in some Go source code and you have a URL from Jenkins X, such as a Build Log URL or Attachment from a &lt;a href=&#34;https://jenkins-x.io/docs/reference/components/custom-resources/&#34;&gt;PipelineActivity Custom Resource&lt;/a&gt; the URL could be in various forms such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gs://anotherBucket/mydir/something.txt&lt;/code&gt; : using a GCS bucket on GCP&lt;/li&gt;
&lt;li&gt;&lt;code&gt;s3://nameOfBucket/mydir/something.txt&lt;/code&gt; : using S3 bucket on AWS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;azblob://thatBucket/mydir/something.txt&lt;/code&gt; : using an Azure bucket&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://foo/bar&lt;/code&gt; : file stored in git not using HTTPS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://foo/bar&lt;/code&gt; : file stored in a git repo using HTTPS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to easily be able to read from the URL from Go source code you can use the &lt;a href=&#34;https://github.com/jenkins-x/jx/blob/e5a7943dc0c3d79c27f30aea73235f18b3f5dcff/pkg/cloud/buckets/buckets.go#L44-L45&#34;&gt;&lt;code&gt;ReadURL&lt;/code&gt; function&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;gke-storage-permissions&#34;&gt;GKE Storage Permissions&lt;/h2&gt;
&lt;p&gt;In GKE your node-pool requires additional permissions to be able to write into GCS buckets,
more specifically the &lt;code&gt;devstorage.full_control&lt;/code&gt; permission.&lt;/p&gt;
&lt;p&gt;If you already have a cluster, you can see these permissions in your &lt;a href=&#34;https://console.cloud.google.com/kubernetes&#34;&gt;cluster overview&lt;/a&gt;,
under the dropdown &lt;code&gt;Permissions&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The description of the field &lt;code&gt;Storage&lt;/code&gt; should be &lt;code&gt;Full&lt;/code&gt;,
by default it is &lt;code&gt;Read Only&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;There are two ways to change your permissions,
either you create a new cluster with the appropriate permissions
or you just migrate the node-pool, if you already have a running cluster.&lt;/p&gt;
&lt;h3 id=&#34;create-a-new-gke-cluster-with-full-control&#34;&gt;Create a new GKE Cluster with Full-Control&lt;/h3&gt;
&lt;p&gt;To create a new cluster with the right permissions,
you need to use the &lt;code&gt;--scopes&lt;/code&gt; flag with the &lt;code&gt;storage-full&lt;/code&gt; argument, as seen here:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud container clusters create &amp;lt;name&amp;gt; --machine-type &amp;lt;type&amp;gt; --zone &amp;lt;zone&amp;gt; --scopes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;storage-full
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;migrate-to-a-node-pool-with-full-control&#34;&gt;Migrate to a node-pool with Full-Control&lt;/h3&gt;
&lt;p&gt;Migrating to a new node-pool is quite simple, it&amp;rsquo;s done in 2 steps!&lt;/p&gt;
&lt;p&gt;First create a new node-pool with the required permissions:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud container node-pools create &amp;lt;node-pool-name&amp;gt; --cluster &amp;lt;cluster-name&amp;gt; --machine-type &amp;lt;type&amp;gt; --scopes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;storage-full
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now delete the old node-pool, all your &lt;code&gt;Pods&lt;/code&gt; will
be rescheduled on the new node-pool through Kubernetes magic!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gcloud container node-pools delete &amp;lt;node-pool-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: TLS</title>
      <link>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/tls/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jenkins-x.io/docs/resources/guides/managing-jx/common-tasks/tls/</guid>
      <description>
        
        
        &lt;p&gt;As documented in the &lt;a href=&#34;https://jenkins-x.io/docs/install-setup/boot/ingress/&#34;&gt;Ingress&lt;/a&gt; section of the Boot documentation, you can configure a global default certificate for all Jenkins X ingresses.
This requires using &lt;a href=&#34;https://cert-manager.io/docs/configuration/acme/dns01/&#34;&gt;DNS01&lt;/a&gt; for a wildcard certificate, or manually adding and updating your certificate.
In case this is not practical, and you want to generate one certificate per ingress using &lt;a href=&#34;https://cert-manager.io/docs/configuration/acme/http01/&#34;&gt;http01&lt;/a&gt;, you can specify the &lt;code&gt;secretName&lt;/code&gt; to be used for each ingress in the &lt;code&gt;values.yaml&lt;/code&gt; as described below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;annotations&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;cert-manager.io/cluster-issuer&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;letsencrypt-prod&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;hook&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;tls&lt;/span&gt;:
     &lt;span style=&#34;color:#f92672&#34;&gt;secretName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tls-hook&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;nexus&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;ingress&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;tls&lt;/span&gt;:
     &lt;span style=&#34;color:#f92672&#34;&gt;secretName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;tls-nexus&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
